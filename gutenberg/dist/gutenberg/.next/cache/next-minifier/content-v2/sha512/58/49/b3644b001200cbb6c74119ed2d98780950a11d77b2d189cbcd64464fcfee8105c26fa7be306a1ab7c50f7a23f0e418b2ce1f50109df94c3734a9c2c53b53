{"code":"(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[5],{xvDq:function(e,t,i){var s;s=function(){return function(e){var t={};function i(s){if(t[s])return t[s].exports;var r=t[s]={exports:{},id:s,loaded:!1};return e[s].call(r.exports,r,r.exports,i),r.loaded=!0,r.exports}return i.m=e,i.c=t,i.p=\"\",i(0)}([function(e,t,i){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var s=i(1),r=i(3),n=i(8),a=i(15);function o(e,t,i){var a=null,o=function(e,t){i&&i(e,t),a&&a.visit(e,t)},u=\"function\"===typeof i?o:null,h=!1;if(t){h=\"boolean\"===typeof t.comment&&t.comment;var c=\"boolean\"===typeof t.attachComment&&t.attachComment;(h||c)&&((a=new s.CommentHandler).attach=c,t.comment=!0,u=o)}var l,p=!1;t&&\"string\"===typeof t.sourceType&&(p=\"module\"===t.sourceType),l=t&&\"boolean\"===typeof t.jsx&&t.jsx?new r.JSXParser(e,t,u):new n.Parser(e,t,u);var d=p?l.parseModule():l.parseScript();return h&&a&&(d.comments=a.comments),l.config.tokens&&(d.tokens=l.tokens),l.config.tolerant&&(d.errors=l.errorHandler.errors),d}t.parse=o,t.parseModule=function(e,t,i){var s=t||{};return s.sourceType=\"module\",o(e,s,i)},t.parseScript=function(e,t,i){var s=t||{};return s.sourceType=\"script\",o(e,s,i)},t.tokenize=function(e,t,i){var s,r=new a.Tokenizer(e,t);s=[];try{for(;;){var n=r.getNextToken();if(!n)break;i&&(n=i(n)),s.push(n)}}catch(o){r.errorHandler.tolerate(o)}return r.errorHandler.tolerant&&(s.errors=r.errors()),s};var u=i(2);t.Syntax=u.Syntax,t.version=\"4.0.1\"},function(e,t,i){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var s=i(2),r=function(){function e(){this.attach=!1,this.comments=[],this.stack=[],this.leading=[],this.trailing=[]}return e.prototype.insertInnerComments=function(e,t){if(e.type===s.Syntax.BlockStatement&&0===e.body.length){for(var i=[],r=this.leading.length-1;r>=0;--r){var n=this.leading[r];t.end.offset>=n.start&&(i.unshift(n.comment),this.leading.splice(r,1),this.trailing.splice(r,1))}i.length&&(e.innerComments=i)}},e.prototype.findTrailingComments=function(e){var t=[];if(this.trailing.length>0){for(var i=this.trailing.length-1;i>=0;--i){var s=this.trailing[i];s.start>=e.end.offset&&t.unshift(s.comment)}return this.trailing.length=0,t}var r=this.stack[this.stack.length-1];if(r&&r.node.trailingComments){var n=r.node.trailingComments[0];n&&n.range[0]>=e.end.offset&&(t=r.node.trailingComments,delete r.node.trailingComments)}return t},e.prototype.findLeadingComments=function(e){for(var t,i=[];this.stack.length>0&&((n=this.stack[this.stack.length-1])&&n.start>=e.start.offset);)t=n.node,this.stack.pop();if(t){for(var s=(t.leadingComments?t.leadingComments.length:0)-1;s>=0;--s){var r=t.leadingComments[s];r.range[1]<=e.start.offset&&(i.unshift(r),t.leadingComments.splice(s,1))}return t.leadingComments&&0===t.leadingComments.length&&delete t.leadingComments,i}for(s=this.leading.length-1;s>=0;--s){var n;(n=this.leading[s]).start<=e.start.offset&&(i.unshift(n.comment),this.leading.splice(s,1))}return i},e.prototype.visitNode=function(e,t){if(!(e.type===s.Syntax.Program&&e.body.length>0)){this.insertInnerComments(e,t);var i=this.findTrailingComments(t),r=this.findLeadingComments(t);r.length>0&&(e.leadingComments=r),i.length>0&&(e.trailingComments=i),this.stack.push({node:e,start:t.start.offset})}},e.prototype.visitComment=function(e,t){var i=\"L\"===e.type[0]?\"Line\":\"Block\",s={type:i,value:e.value};if(e.range&&(s.range=e.range),e.loc&&(s.loc=e.loc),this.comments.push(s),this.attach){var r={comment:{type:i,value:e.value,range:[t.start.offset,t.end.offset]},start:t.start.offset};e.loc&&(r.comment.loc=e.loc),e.type=i,this.leading.push(r),this.trailing.push(r)}},e.prototype.visit=function(e,t){\"LineComment\"===e.type||\"BlockComment\"===e.type?this.visitComment(e,t):this.attach&&this.visitNode(e,t)},e}();t.CommentHandler=r},function(e,t){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.Syntax={AssignmentExpression:\"AssignmentExpression\",AssignmentPattern:\"AssignmentPattern\",ArrayExpression:\"ArrayExpression\",ArrayPattern:\"ArrayPattern\",ArrowFunctionExpression:\"ArrowFunctionExpression\",AwaitExpression:\"AwaitExpression\",BlockStatement:\"BlockStatement\",BinaryExpression:\"BinaryExpression\",BreakStatement:\"BreakStatement\",CallExpression:\"CallExpression\",CatchClause:\"CatchClause\",ClassBody:\"ClassBody\",ClassDeclaration:\"ClassDeclaration\",ClassExpression:\"ClassExpression\",ConditionalExpression:\"ConditionalExpression\",ContinueStatement:\"ContinueStatement\",DoWhileStatement:\"DoWhileStatement\",DebuggerStatement:\"DebuggerStatement\",EmptyStatement:\"EmptyStatement\",ExportAllDeclaration:\"ExportAllDeclaration\",ExportDefaultDeclaration:\"ExportDefaultDeclaration\",ExportNamedDeclaration:\"ExportNamedDeclaration\",ExportSpecifier:\"ExportSpecifier\",ExpressionStatement:\"ExpressionStatement\",ForStatement:\"ForStatement\",ForOfStatement:\"ForOfStatement\",ForInStatement:\"ForInStatement\",FunctionDeclaration:\"FunctionDeclaration\",FunctionExpression:\"FunctionExpression\",Identifier:\"Identifier\",IfStatement:\"IfStatement\",ImportDeclaration:\"ImportDeclaration\",ImportDefaultSpecifier:\"ImportDefaultSpecifier\",ImportNamespaceSpecifier:\"ImportNamespaceSpecifier\",ImportSpecifier:\"ImportSpecifier\",Literal:\"Literal\",LabeledStatement:\"LabeledStatement\",LogicalExpression:\"LogicalExpression\",MemberExpression:\"MemberExpression\",MetaProperty:\"MetaProperty\",MethodDefinition:\"MethodDefinition\",NewExpression:\"NewExpression\",ObjectExpression:\"ObjectExpression\",ObjectPattern:\"ObjectPattern\",Program:\"Program\",Property:\"Property\",RestElement:\"RestElement\",ReturnStatement:\"ReturnStatement\",SequenceExpression:\"SequenceExpression\",SpreadElement:\"SpreadElement\",Super:\"Super\",SwitchCase:\"SwitchCase\",SwitchStatement:\"SwitchStatement\",TaggedTemplateExpression:\"TaggedTemplateExpression\",TemplateElement:\"TemplateElement\",TemplateLiteral:\"TemplateLiteral\",ThisExpression:\"ThisExpression\",ThrowStatement:\"ThrowStatement\",TryStatement:\"TryStatement\",UnaryExpression:\"UnaryExpression\",UpdateExpression:\"UpdateExpression\",VariableDeclaration:\"VariableDeclaration\",VariableDeclarator:\"VariableDeclarator\",WhileStatement:\"WhileStatement\",WithStatement:\"WithStatement\",YieldExpression:\"YieldExpression\"}},function(e,t,i){\"use strict\";var s=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])};return function(t,i){function s(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(s.prototype=i.prototype,new s)}}();Object.defineProperty(t,\"__esModule\",{value:!0});var r=i(4),n=i(5),a=i(6),o=i(7),u=i(8),h=i(13),c=i(14);function l(e){var t;switch(e.type){case a.JSXSyntax.JSXIdentifier:t=e.name;break;case a.JSXSyntax.JSXNamespacedName:var i=e;t=l(i.namespace)+\":\"+l(i.name);break;case a.JSXSyntax.JSXMemberExpression:var s=e;t=l(s.object)+\".\"+l(s.property)}return t}h.TokenName[100]=\"JSXIdentifier\",h.TokenName[101]=\"JSXText\";var p=function(e){function t(t,i,s){return e.call(this,t,i,s)||this}return s(t,e),t.prototype.parsePrimaryExpression=function(){return this.match(\"<\")?this.parseJSXRoot():e.prototype.parsePrimaryExpression.call(this)},t.prototype.startJSX=function(){this.scanner.index=this.startMarker.index,this.scanner.lineNumber=this.startMarker.line,this.scanner.lineStart=this.startMarker.index-this.startMarker.column},t.prototype.finishJSX=function(){this.nextToken()},t.prototype.reenterJSX=function(){this.startJSX(),this.expectJSX(\"}\"),this.config.tokens&&this.tokens.pop()},t.prototype.createJSXNode=function(){return this.collectComments(),{index:this.scanner.index,line:this.scanner.lineNumber,column:this.scanner.index-this.scanner.lineStart}},t.prototype.createJSXChildNode=function(){return{index:this.scanner.index,line:this.scanner.lineNumber,column:this.scanner.index-this.scanner.lineStart}},t.prototype.scanXHTMLEntity=function(e){for(var t=\"&\",i=!0,s=!1,n=!1,a=!1;!this.scanner.eof()&&i&&!s;){var o=this.scanner.source[this.scanner.index];if(o===e)break;if(s=\";\"===o,t+=o,++this.scanner.index,!s)switch(t.length){case 2:n=\"#\"===o;break;case 3:n&&(i=(a=\"x\"===o)||r.Character.isDecimalDigit(o.charCodeAt(0)),n=n&&!a);break;default:i=(i=i&&!(n&&!r.Character.isDecimalDigit(o.charCodeAt(0))))&&!(a&&!r.Character.isHexDigit(o.charCodeAt(0)))}}if(i&&s&&t.length>2){var u=t.substr(1,t.length-2);n&&u.length>1?t=String.fromCharCode(parseInt(u.substr(1),10)):a&&u.length>2?t=String.fromCharCode(parseInt(\"0\"+u.substr(1),16)):n||a||!c.XHTMLEntities[u]||(t=c.XHTMLEntities[u])}return t},t.prototype.lexJSX=function(){var e=this.scanner.source.charCodeAt(this.scanner.index);if(60===e||62===e||47===e||58===e||61===e||123===e||125===e)return{type:7,value:o=this.scanner.source[this.scanner.index++],lineNumber:this.scanner.lineNumber,lineStart:this.scanner.lineStart,start:this.scanner.index-1,end:this.scanner.index};if(34===e||39===e){for(var t=this.scanner.index,i=this.scanner.source[this.scanner.index++],s=\"\";!this.scanner.eof()&&(u=this.scanner.source[this.scanner.index++])!==i;)s+=\"&\"===u?this.scanXHTMLEntity(i):u;return{type:8,value:s,lineNumber:this.scanner.lineNumber,lineStart:this.scanner.lineStart,start:t,end:this.scanner.index}}if(46===e){var n=this.scanner.source.charCodeAt(this.scanner.index+1),a=this.scanner.source.charCodeAt(this.scanner.index+2),o=46===n&&46===a?\"...\":\".\";return t=this.scanner.index,this.scanner.index+=o.length,{type:7,value:o,lineNumber:this.scanner.lineNumber,lineStart:this.scanner.lineStart,start:t,end:this.scanner.index}}if(96===e)return{type:10,value:\"\",lineNumber:this.scanner.lineNumber,lineStart:this.scanner.lineStart,start:this.scanner.index,end:this.scanner.index};if(r.Character.isIdentifierStart(e)&&92!==e){for(t=this.scanner.index,++this.scanner.index;!this.scanner.eof();){var u=this.scanner.source.charCodeAt(this.scanner.index);if(r.Character.isIdentifierPart(u)&&92!==u)++this.scanner.index;else{if(45!==u)break;++this.scanner.index}}return{type:100,value:this.scanner.source.slice(t,this.scanner.index),lineNumber:this.scanner.lineNumber,lineStart:this.scanner.lineStart,start:t,end:this.scanner.index}}return this.scanner.lex()},t.prototype.nextJSXToken=function(){this.collectComments(),this.startMarker.index=this.scanner.index,this.startMarker.line=this.scanner.lineNumber,this.startMarker.column=this.scanner.index-this.scanner.lineStart;var e=this.lexJSX();return this.lastMarker.index=this.scanner.index,this.lastMarker.line=this.scanner.lineNumber,this.lastMarker.column=this.scanner.index-this.scanner.lineStart,this.config.tokens&&this.tokens.push(this.convertToken(e)),e},t.prototype.nextJSXText=function(){this.startMarker.index=this.scanner.index,this.startMarker.line=this.scanner.lineNumber,this.startMarker.column=this.scanner.index-this.scanner.lineStart;for(var e=this.scanner.index,t=\"\";!this.scanner.eof();){var i=this.scanner.source[this.scanner.index];if(\"{\"===i||\"<\"===i)break;++this.scanner.index,t+=i,r.Character.isLineTerminator(i.charCodeAt(0))&&(++this.scanner.lineNumber,\"\\r\"===i&&\"\\n\"===this.scanner.source[this.scanner.index]&&++this.scanner.index,this.scanner.lineStart=this.scanner.index)}this.lastMarker.index=this.scanner.index,this.lastMarker.line=this.scanner.lineNumber,this.lastMarker.column=this.scanner.index-this.scanner.lineStart;var s={type:101,value:t,lineNumber:this.scanner.lineNumber,lineStart:this.scanner.lineStart,start:e,end:this.scanner.index};return t.length>0&&this.config.tokens&&this.tokens.push(this.convertToken(s)),s},t.prototype.peekJSXToken=function(){var e=this.scanner.saveState();this.scanner.scanComments();var t=this.lexJSX();return this.scanner.restoreState(e),t},t.prototype.expectJSX=function(e){var t=this.nextJSXToken();7===t.type&&t.value===e||this.throwUnexpectedToken(t)},t.prototype.matchJSX=function(e){var t=this.peekJSXToken();return 7===t.type&&t.value===e},t.prototype.parseJSXIdentifier=function(){var e=this.createJSXNode(),t=this.nextJSXToken();return 100!==t.type&&this.throwUnexpectedToken(t),this.finalize(e,new n.JSXIdentifier(t.value))},t.prototype.parseJSXElementName=function(){var e=this.createJSXNode(),t=this.parseJSXIdentifier();if(this.matchJSX(\":\")){var i=t;this.expectJSX(\":\");var s=this.parseJSXIdentifier();t=this.finalize(e,new n.JSXNamespacedName(i,s))}else if(this.matchJSX(\".\"))for(;this.matchJSX(\".\");){var r=t;this.expectJSX(\".\");var a=this.parseJSXIdentifier();t=this.finalize(e,new n.JSXMemberExpression(r,a))}return t},t.prototype.parseJSXAttributeName=function(){var e,t=this.createJSXNode(),i=this.parseJSXIdentifier();if(this.matchJSX(\":\")){var s=i;this.expectJSX(\":\");var r=this.parseJSXIdentifier();e=this.finalize(t,new n.JSXNamespacedName(s,r))}else e=i;return e},t.prototype.parseJSXStringLiteralAttribute=function(){var e=this.createJSXNode(),t=this.nextJSXToken();8!==t.type&&this.throwUnexpectedToken(t);var i=this.getTokenRaw(t);return this.finalize(e,new o.Literal(t.value,i))},t.prototype.parseJSXExpressionAttribute=function(){var e=this.createJSXNode();this.expectJSX(\"{\"),this.finishJSX(),this.match(\"}\")&&this.tolerateError(\"JSX attributes must only be assigned a non-empty expression\");var t=this.parseAssignmentExpression();return this.reenterJSX(),this.finalize(e,new n.JSXExpressionContainer(t))},t.prototype.parseJSXAttributeValue=function(){return this.matchJSX(\"{\")?this.parseJSXExpressionAttribute():this.matchJSX(\"<\")?this.parseJSXElement():this.parseJSXStringLiteralAttribute()},t.prototype.parseJSXNameValueAttribute=function(){var e=this.createJSXNode(),t=this.parseJSXAttributeName(),i=null;return this.matchJSX(\"=\")&&(this.expectJSX(\"=\"),i=this.parseJSXAttributeValue()),this.finalize(e,new n.JSXAttribute(t,i))},t.prototype.parseJSXSpreadAttribute=function(){var e=this.createJSXNode();this.expectJSX(\"{\"),this.expectJSX(\"...\"),this.finishJSX();var t=this.parseAssignmentExpression();return this.reenterJSX(),this.finalize(e,new n.JSXSpreadAttribute(t))},t.prototype.parseJSXAttributes=function(){for(var e=[];!this.matchJSX(\"/\")&&!this.matchJSX(\">\");){var t=this.matchJSX(\"{\")?this.parseJSXSpreadAttribute():this.parseJSXNameValueAttribute();e.push(t)}return e},t.prototype.parseJSXOpeningElement=function(){var e=this.createJSXNode();this.expectJSX(\"<\");var t=this.parseJSXElementName(),i=this.parseJSXAttributes(),s=this.matchJSX(\"/\");return s&&this.expectJSX(\"/\"),this.expectJSX(\">\"),this.finalize(e,new n.JSXOpeningElement(t,s,i))},t.prototype.parseJSXBoundaryElement=function(){var e=this.createJSXNode();if(this.expectJSX(\"<\"),this.matchJSX(\"/\")){this.expectJSX(\"/\");var t=this.parseJSXElementName();return this.expectJSX(\">\"),this.finalize(e,new n.JSXClosingElement(t))}var i=this.parseJSXElementName(),s=this.parseJSXAttributes(),r=this.matchJSX(\"/\");return r&&this.expectJSX(\"/\"),this.expectJSX(\">\"),this.finalize(e,new n.JSXOpeningElement(i,r,s))},t.prototype.parseJSXEmptyExpression=function(){var e=this.createJSXChildNode();return this.collectComments(),this.lastMarker.index=this.scanner.index,this.lastMarker.line=this.scanner.lineNumber,this.lastMarker.column=this.scanner.index-this.scanner.lineStart,this.finalize(e,new n.JSXEmptyExpression)},t.prototype.parseJSXExpressionContainer=function(){var e,t=this.createJSXNode();return this.expectJSX(\"{\"),this.matchJSX(\"}\")?(e=this.parseJSXEmptyExpression(),this.expectJSX(\"}\")):(this.finishJSX(),e=this.parseAssignmentExpression(),this.reenterJSX()),this.finalize(t,new n.JSXExpressionContainer(e))},t.prototype.parseJSXChildren=function(){for(var e=[];!this.scanner.eof();){var t=this.createJSXChildNode(),i=this.nextJSXText();if(i.start<i.end){var s=this.getTokenRaw(i),r=this.finalize(t,new n.JSXText(i.value,s));e.push(r)}if(\"{\"!==this.scanner.source[this.scanner.index])break;var a=this.parseJSXExpressionContainer();e.push(a)}return e},t.prototype.parseComplexJSXElement=function(e){for(var t=[];!this.scanner.eof();){e.children=e.children.concat(this.parseJSXChildren());var i=this.createJSXChildNode(),s=this.parseJSXBoundaryElement();if(s.type===a.JSXSyntax.JSXOpeningElement){var r=s;if(r.selfClosing){var o=this.finalize(i,new n.JSXElement(r,[],null));e.children.push(o)}else t.push(e),e={node:i,opening:r,closing:null,children:[]}}if(s.type===a.JSXSyntax.JSXClosingElement){e.closing=s;var u=l(e.opening.name);if(u!==l(e.closing.name)&&this.tolerateError(\"Expected corresponding JSX closing tag for %0\",u),!(t.length>0))break;o=this.finalize(e.node,new n.JSXElement(e.opening,e.children,e.closing)),(e=t[t.length-1]).children.push(o),t.pop()}}return e},t.prototype.parseJSXElement=function(){var e=this.createJSXNode(),t=this.parseJSXOpeningElement(),i=[],s=null;if(!t.selfClosing){var r=this.parseComplexJSXElement({node:e,opening:t,closing:s,children:i});i=r.children,s=r.closing}return this.finalize(e,new n.JSXElement(t,i,s))},t.prototype.parseJSXRoot=function(){this.config.tokens&&this.tokens.pop(),this.startJSX();var e=this.parseJSXElement();return this.finishJSX(),e},t.prototype.isStartOfExpression=function(){return e.prototype.isStartOfExpression.call(this)||this.match(\"<\")},t}(u.Parser);t.JSXParser=p},function(e,t){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var i={NonAsciiIdentifierStart:/[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0-\\u08B4\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309B-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AD\\uA7B0-\\uA7B7\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF30-\\uDF4A\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC03-\\uDC37\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDF00-\\uDF19]|\\uD806[\\uDCA0-\\uDCDF\\uDCFF\\uDEC0-\\uDEF8]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50\\uDF93-\\uDF9F]|\\uD82C[\\uDC00\\uDC01]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD83A[\\uDC00-\\uDCC4]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1]|\\uD87E[\\uDC00-\\uDE1D]/,NonAsciiIdentifierPart:/[\\xAA\\xB5\\xB7\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u0800-\\u082D\\u0840-\\u085B\\u08A0-\\u08B4\\u08E3-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0AF9\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58-\\u0C5A\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C81-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D01-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D57\\u0D5F-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1369-\\u1371\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1CD0-\\u1CD2\\u1CD4-\\u1CF6\\u1CF8\\u1CF9\\u1D00-\\u1DF5\\u1DFC-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200C\\u200D\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AD\\uA7B0-\\uA7B7\\uA7F7-\\uA827\\uA840-\\uA873\\uA880-\\uA8C4\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA8FD\\uA900-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDDFD\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDEE0\\uDF00-\\uDF1F\\uDF30-\\uDF4A\\uDF50-\\uDF7A\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCA0-\\uDCA9\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE38-\\uDE3A\\uDE3F\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE6\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC00-\\uDC46\\uDC66-\\uDC6F\\uDC7F-\\uDCBA\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9\\uDD00-\\uDD34\\uDD36-\\uDD3F\\uDD50-\\uDD73\\uDD76\\uDD80-\\uDDC4\\uDDCA-\\uDDCC\\uDDD0-\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE37\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEEA\\uDEF0-\\uDEF9\\uDF00-\\uDF03\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3C-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF50\\uDF57\\uDF5D-\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDC80-\\uDCC5\\uDCC7\\uDCD0-\\uDCD9\\uDD80-\\uDDB5\\uDDB8-\\uDDC0\\uDDD8-\\uDDDD\\uDE00-\\uDE40\\uDE44\\uDE50-\\uDE59\\uDE80-\\uDEB7\\uDEC0-\\uDEC9\\uDF00-\\uDF19\\uDF1D-\\uDF2B\\uDF30-\\uDF39]|\\uD806[\\uDCA0-\\uDCE9\\uDCFF\\uDEC0-\\uDEF8]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDED0-\\uDEED\\uDEF0-\\uDEF4\\uDF00-\\uDF36\\uDF40-\\uDF43\\uDF50-\\uDF59\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50-\\uDF7E\\uDF8F-\\uDF9F]|\\uD82C[\\uDC00\\uDC01]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99\\uDC9D\\uDC9E]|\\uD834[\\uDD65-\\uDD69\\uDD6D-\\uDD72\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB\\uDFCE-\\uDFFF]|\\uD836[\\uDE00-\\uDE36\\uDE3B-\\uDE6C\\uDE75\\uDE84\\uDE9B-\\uDE9F\\uDEA1-\\uDEAF]|\\uD83A[\\uDC00-\\uDCC4\\uDCD0-\\uDCD6]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1]|\\uD87E[\\uDC00-\\uDE1D]|\\uDB40[\\uDD00-\\uDDEF]/};t.Character={fromCodePoint:function(e){return e<65536?String.fromCharCode(e):String.fromCharCode(55296+(e-65536>>10))+String.fromCharCode(56320+(e-65536&1023))},isWhiteSpace:function(e){return 32===e||9===e||11===e||12===e||160===e||e>=5760&&[5760,8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8239,8287,12288,65279].indexOf(e)>=0},isLineTerminator:function(e){return 10===e||13===e||8232===e||8233===e},isIdentifierStart:function(e){return 36===e||95===e||e>=65&&e<=90||e>=97&&e<=122||92===e||e>=128&&i.NonAsciiIdentifierStart.test(t.Character.fromCodePoint(e))},isIdentifierPart:function(e){return 36===e||95===e||e>=65&&e<=90||e>=97&&e<=122||e>=48&&e<=57||92===e||e>=128&&i.NonAsciiIdentifierPart.test(t.Character.fromCodePoint(e))},isDecimalDigit:function(e){return e>=48&&e<=57},isHexDigit:function(e){return e>=48&&e<=57||e>=65&&e<=70||e>=97&&e<=102},isOctalDigit:function(e){return e>=48&&e<=55}}},function(e,t,i){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var s=i(6),r=function(e){this.type=s.JSXSyntax.JSXClosingElement,this.name=e};t.JSXClosingElement=r;var n=function(e,t,i){this.type=s.JSXSyntax.JSXElement,this.openingElement=e,this.children=t,this.closingElement=i};t.JSXElement=n;var a=function(){this.type=s.JSXSyntax.JSXEmptyExpression};t.JSXEmptyExpression=a;var o=function(e){this.type=s.JSXSyntax.JSXExpressionContainer,this.expression=e};t.JSXExpressionContainer=o;var u=function(e){this.type=s.JSXSyntax.JSXIdentifier,this.name=e};t.JSXIdentifier=u;var h=function(e,t){this.type=s.JSXSyntax.JSXMemberExpression,this.object=e,this.property=t};t.JSXMemberExpression=h;var c=function(e,t){this.type=s.JSXSyntax.JSXAttribute,this.name=e,this.value=t};t.JSXAttribute=c;var l=function(e,t){this.type=s.JSXSyntax.JSXNamespacedName,this.namespace=e,this.name=t};t.JSXNamespacedName=l;var p=function(e,t,i){this.type=s.JSXSyntax.JSXOpeningElement,this.name=e,this.selfClosing=t,this.attributes=i};t.JSXOpeningElement=p;var d=function(e){this.type=s.JSXSyntax.JSXSpreadAttribute,this.argument=e};t.JSXSpreadAttribute=d;var m=function(e,t){this.type=s.JSXSyntax.JSXText,this.value=e,this.raw=t};t.JSXText=m},function(e,t){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.JSXSyntax={JSXAttribute:\"JSXAttribute\",JSXClosingElement:\"JSXClosingElement\",JSXElement:\"JSXElement\",JSXEmptyExpression:\"JSXEmptyExpression\",JSXExpressionContainer:\"JSXExpressionContainer\",JSXIdentifier:\"JSXIdentifier\",JSXMemberExpression:\"JSXMemberExpression\",JSXNamespacedName:\"JSXNamespacedName\",JSXOpeningElement:\"JSXOpeningElement\",JSXSpreadAttribute:\"JSXSpreadAttribute\",JSXText:\"JSXText\"}},function(e,t,i){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var s=i(2),r=function(e){this.type=s.Syntax.ArrayExpression,this.elements=e};t.ArrayExpression=r;var n=function(e){this.type=s.Syntax.ArrayPattern,this.elements=e};t.ArrayPattern=n;var a=function(e,t,i){this.type=s.Syntax.ArrowFunctionExpression,this.id=null,this.params=e,this.body=t,this.generator=!1,this.expression=i,this.async=!1};t.ArrowFunctionExpression=a;var o=function(e,t,i){this.type=s.Syntax.AssignmentExpression,this.operator=e,this.left=t,this.right=i};t.AssignmentExpression=o;var u=function(e,t){this.type=s.Syntax.AssignmentPattern,this.left=e,this.right=t};t.AssignmentPattern=u;var h=function(e,t,i){this.type=s.Syntax.ArrowFunctionExpression,this.id=null,this.params=e,this.body=t,this.generator=!1,this.expression=i,this.async=!0};t.AsyncArrowFunctionExpression=h;var c=function(e,t,i){this.type=s.Syntax.FunctionDeclaration,this.id=e,this.params=t,this.body=i,this.generator=!1,this.expression=!1,this.async=!0};t.AsyncFunctionDeclaration=c;var l=function(e,t,i){this.type=s.Syntax.FunctionExpression,this.id=e,this.params=t,this.body=i,this.generator=!1,this.expression=!1,this.async=!0};t.AsyncFunctionExpression=l;var p=function(e){this.type=s.Syntax.AwaitExpression,this.argument=e};t.AwaitExpression=p;var d=function(e,t,i){var r=\"||\"===e||\"&&\"===e;this.type=r?s.Syntax.LogicalExpression:s.Syntax.BinaryExpression,this.operator=e,this.left=t,this.right=i};t.BinaryExpression=d;var m=function(e){this.type=s.Syntax.BlockStatement,this.body=e};t.BlockStatement=m;var x=function(e){this.type=s.Syntax.BreakStatement,this.label=e};t.BreakStatement=x;var D=function(e,t){this.type=s.Syntax.CallExpression,this.callee=e,this.arguments=t};t.CallExpression=D;var f=function(e,t){this.type=s.Syntax.CatchClause,this.param=e,this.body=t};t.CatchClause=f;var E=function(e){this.type=s.Syntax.ClassBody,this.body=e};t.ClassBody=E;var y=function(e,t,i){this.type=s.Syntax.ClassDeclaration,this.id=e,this.superClass=t,this.body=i};t.ClassDeclaration=y;var C=function(e,t,i){this.type=s.Syntax.ClassExpression,this.id=e,this.superClass=t,this.body=i};t.ClassExpression=C;var A=function(e,t){this.type=s.Syntax.MemberExpression,this.computed=!0,this.object=e,this.property=t};t.ComputedMemberExpression=A;var v=function(e,t,i){this.type=s.Syntax.ConditionalExpression,this.test=e,this.consequent=t,this.alternate=i};t.ConditionalExpression=v;var S=function(e){this.type=s.Syntax.ContinueStatement,this.label=e};t.ContinueStatement=S;var F=function(){this.type=s.Syntax.DebuggerStatement};t.DebuggerStatement=F;var g=function(e,t){this.type=s.Syntax.ExpressionStatement,this.expression=e,this.directive=t};t.Directive=g;var k=function(e,t){this.type=s.Syntax.DoWhileStatement,this.body=e,this.test=t};t.DoWhileStatement=k;var w=function(){this.type=s.Syntax.EmptyStatement};t.EmptyStatement=w;var B=function(e){this.type=s.Syntax.ExportAllDeclaration,this.source=e};t.ExportAllDeclaration=B;var b=function(e){this.type=s.Syntax.ExportDefaultDeclaration,this.declaration=e};t.ExportDefaultDeclaration=b;var T=function(e,t,i){this.type=s.Syntax.ExportNamedDeclaration,this.declaration=e,this.specifiers=t,this.source=i};t.ExportNamedDeclaration=T;var N=function(e,t){this.type=s.Syntax.ExportSpecifier,this.exported=t,this.local=e};t.ExportSpecifier=N;var I=function(e){this.type=s.Syntax.ExpressionStatement,this.expression=e};t.ExpressionStatement=I;var M=function(e,t,i){this.type=s.Syntax.ForInStatement,this.left=e,this.right=t,this.body=i,this.each=!1};t.ForInStatement=M;var P=function(e,t,i){this.type=s.Syntax.ForOfStatement,this.left=e,this.right=t,this.body=i};t.ForOfStatement=P;var X=function(e,t,i,r){this.type=s.Syntax.ForStatement,this.init=e,this.test=t,this.update=i,this.body=r};t.ForStatement=X;var J=function(e,t,i,r){this.type=s.Syntax.FunctionDeclaration,this.id=e,this.params=t,this.body=i,this.generator=r,this.expression=!1,this.async=!1};t.FunctionDeclaration=J;var U=function(e,t,i,r){this.type=s.Syntax.FunctionExpression,this.id=e,this.params=t,this.body=i,this.generator=r,this.expression=!1,this.async=!1};t.FunctionExpression=U;var L=function(e){this.type=s.Syntax.Identifier,this.name=e};t.Identifier=L;var z=function(e,t,i){this.type=s.Syntax.IfStatement,this.test=e,this.consequent=t,this.alternate=i};t.IfStatement=z;var O=function(e,t){this.type=s.Syntax.ImportDeclaration,this.specifiers=e,this.source=t};t.ImportDeclaration=O;var R=function(e){this.type=s.Syntax.ImportDefaultSpecifier,this.local=e};t.ImportDefaultSpecifier=R;var K=function(e){this.type=s.Syntax.ImportNamespaceSpecifier,this.local=e};t.ImportNamespaceSpecifier=K;var j=function(e,t){this.type=s.Syntax.ImportSpecifier,this.local=e,this.imported=t};t.ImportSpecifier=j;var H=function(e,t){this.type=s.Syntax.LabeledStatement,this.label=e,this.body=t};t.LabeledStatement=H;var W=function(e,t){this.type=s.Syntax.Literal,this.value=e,this.raw=t};t.Literal=W;var G=function(e,t){this.type=s.Syntax.MetaProperty,this.meta=e,this.property=t};t.MetaProperty=G;var _=function(e,t,i,r,n){this.type=s.Syntax.MethodDefinition,this.key=e,this.computed=t,this.value=i,this.kind=r,this.static=n};t.MethodDefinition=_;var Y=function(e){this.type=s.Syntax.Program,this.body=e,this.sourceType=\"module\"};t.Module=Y;var V=function(e,t){this.type=s.Syntax.NewExpression,this.callee=e,this.arguments=t};t.NewExpression=V;var q=function(e){this.type=s.Syntax.ObjectExpression,this.properties=e};t.ObjectExpression=q;var $=function(e){this.type=s.Syntax.ObjectPattern,this.properties=e};t.ObjectPattern=$;var Z=function(e,t,i,r,n,a){this.type=s.Syntax.Property,this.key=t,this.computed=i,this.value=r,this.kind=e,this.method=n,this.shorthand=a};t.Property=Z;var Q=function(e,t,i,r){this.type=s.Syntax.Literal,this.value=e,this.raw=t,this.regex={pattern:i,flags:r}};t.RegexLiteral=Q;var ee=function(e){this.type=s.Syntax.RestElement,this.argument=e};t.RestElement=ee;var te=function(e){this.type=s.Syntax.ReturnStatement,this.argument=e};t.ReturnStatement=te;var ie=function(e){this.type=s.Syntax.Program,this.body=e,this.sourceType=\"script\"};t.Script=ie;var se=function(e){this.type=s.Syntax.SequenceExpression,this.expressions=e};t.SequenceExpression=se;var re=function(e){this.type=s.Syntax.SpreadElement,this.argument=e};t.SpreadElement=re;var ne=function(e,t){this.type=s.Syntax.MemberExpression,this.computed=!1,this.object=e,this.property=t};t.StaticMemberExpression=ne;var ae=function(){this.type=s.Syntax.Super};t.Super=ae;var oe=function(e,t){this.type=s.Syntax.SwitchCase,this.test=e,this.consequent=t};t.SwitchCase=oe;var ue=function(e,t){this.type=s.Syntax.SwitchStatement,this.discriminant=e,this.cases=t};t.SwitchStatement=ue;var he=function(e,t){this.type=s.Syntax.TaggedTemplateExpression,this.tag=e,this.quasi=t};t.TaggedTemplateExpression=he;var ce=function(e,t){this.type=s.Syntax.TemplateElement,this.value=e,this.tail=t};t.TemplateElement=ce;var le=function(e,t){this.type=s.Syntax.TemplateLiteral,this.quasis=e,this.expressions=t};t.TemplateLiteral=le;var pe=function(){this.type=s.Syntax.ThisExpression};t.ThisExpression=pe;var de=function(e){this.type=s.Syntax.ThrowStatement,this.argument=e};t.ThrowStatement=de;var me=function(e,t,i){this.type=s.Syntax.TryStatement,this.block=e,this.handler=t,this.finalizer=i};t.TryStatement=me;var xe=function(e,t){this.type=s.Syntax.UnaryExpression,this.operator=e,this.argument=t,this.prefix=!0};t.UnaryExpression=xe;var De=function(e,t,i){this.type=s.Syntax.UpdateExpression,this.operator=e,this.argument=t,this.prefix=i};t.UpdateExpression=De;var fe=function(e,t){this.type=s.Syntax.VariableDeclaration,this.declarations=e,this.kind=t};t.VariableDeclaration=fe;var Ee=function(e,t){this.type=s.Syntax.VariableDeclarator,this.id=e,this.init=t};t.VariableDeclarator=Ee;var ye=function(e,t){this.type=s.Syntax.WhileStatement,this.test=e,this.body=t};t.WhileStatement=ye;var Ce=function(e,t){this.type=s.Syntax.WithStatement,this.object=e,this.body=t};t.WithStatement=Ce;var Ae=function(e,t){this.type=s.Syntax.YieldExpression,this.argument=e,this.delegate=t};t.YieldExpression=Ae},function(e,t,i){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var s=i(9),r=i(10),n=i(11),a=i(7),o=i(12),u=i(2),h=i(13),c=\"ArrowParameterPlaceHolder\",l=function(){function e(e,t,i){void 0===t&&(t={}),this.config={range:\"boolean\"===typeof t.range&&t.range,loc:\"boolean\"===typeof t.loc&&t.loc,source:null,tokens:\"boolean\"===typeof t.tokens&&t.tokens,comment:\"boolean\"===typeof t.comment&&t.comment,tolerant:\"boolean\"===typeof t.tolerant&&t.tolerant},this.config.loc&&t.source&&null!==t.source&&(this.config.source=String(t.source)),this.delegate=i,this.errorHandler=new r.ErrorHandler,this.errorHandler.tolerant=this.config.tolerant,this.scanner=new o.Scanner(e,this.errorHandler),this.scanner.trackComment=this.config.comment,this.operatorPrecedence={\")\":0,\";\":0,\",\":0,\"=\":0,\"]\":0,\"||\":1,\"&&\":2,\"|\":3,\"^\":4,\"&\":5,\"==\":6,\"!=\":6,\"===\":6,\"!==\":6,\"<\":7,\">\":7,\"<=\":7,\">=\":7,\"<<\":8,\">>\":8,\">>>\":8,\"+\":9,\"-\":9,\"*\":11,\"/\":11,\"%\":11},this.lookahead={type:2,value:\"\",lineNumber:this.scanner.lineNumber,lineStart:0,start:0,end:0},this.hasLineTerminator=!1,this.context={isModule:!1,await:!1,allowIn:!0,allowStrictDirective:!0,allowYield:!0,firstCoverInitializedNameError:null,isAssignmentTarget:!1,isBindingElement:!1,inFunctionBody:!1,inIteration:!1,inSwitch:!1,labelSet:{},strict:!1},this.tokens=[],this.startMarker={index:0,line:this.scanner.lineNumber,column:0},this.lastMarker={index:0,line:this.scanner.lineNumber,column:0},this.nextToken(),this.lastMarker={index:this.scanner.index,line:this.scanner.lineNumber,column:this.scanner.index-this.scanner.lineStart}}return e.prototype.throwError=function(e){for(var t=[],i=1;i<arguments.length;i++)t[i-1]=arguments[i];var r=Array.prototype.slice.call(arguments,1),n=e.replace(/%(\\d)/g,(function(e,t){return s.assert(t<r.length,\"Message reference must be in range\"),r[t]})),a=this.lastMarker.index,o=this.lastMarker.line,u=this.lastMarker.column+1;throw this.errorHandler.createError(a,o,u,n)},e.prototype.tolerateError=function(e){for(var t=[],i=1;i<arguments.length;i++)t[i-1]=arguments[i];var r=Array.prototype.slice.call(arguments,1),n=e.replace(/%(\\d)/g,(function(e,t){return s.assert(t<r.length,\"Message reference must be in range\"),r[t]})),a=this.lastMarker.index,o=this.scanner.lineNumber,u=this.lastMarker.column+1;this.errorHandler.tolerateError(a,o,u,n)},e.prototype.unexpectedTokenError=function(e,t){var i,s=t||n.Messages.UnexpectedToken;if(e?(t||(s=2===e.type?n.Messages.UnexpectedEOS:3===e.type?n.Messages.UnexpectedIdentifier:6===e.type?n.Messages.UnexpectedNumber:8===e.type?n.Messages.UnexpectedString:10===e.type?n.Messages.UnexpectedTemplate:n.Messages.UnexpectedToken,4===e.type&&(this.scanner.isFutureReservedWord(e.value)?s=n.Messages.UnexpectedReserved:this.context.strict&&this.scanner.isStrictModeReservedWord(e.value)&&(s=n.Messages.StrictReservedWord))),i=e.value):i=\"ILLEGAL\",s=s.replace(\"%0\",i),e&&\"number\"===typeof e.lineNumber){var r=e.start,a=e.lineNumber,o=this.lastMarker.index-this.lastMarker.column,u=e.start-o+1;return this.errorHandler.createError(r,a,u,s)}return r=this.lastMarker.index,a=this.lastMarker.line,u=this.lastMarker.column+1,this.errorHandler.createError(r,a,u,s)},e.prototype.throwUnexpectedToken=function(e,t){throw this.unexpectedTokenError(e,t)},e.prototype.tolerateUnexpectedToken=function(e,t){this.errorHandler.tolerate(this.unexpectedTokenError(e,t))},e.prototype.collectComments=function(){if(this.config.comment){var e=this.scanner.scanComments();if(e.length>0&&this.delegate)for(var t=0;t<e.length;++t){var i=e[t],s=void 0;s={type:i.multiLine?\"BlockComment\":\"LineComment\",value:this.scanner.source.slice(i.slice[0],i.slice[1])},this.config.range&&(s.range=i.range),this.config.loc&&(s.loc=i.loc);var r={start:{line:i.loc.start.line,column:i.loc.start.column,offset:i.range[0]},end:{line:i.loc.end.line,column:i.loc.end.column,offset:i.range[1]}};this.delegate(s,r)}}else this.scanner.scanComments()},e.prototype.getTokenRaw=function(e){return this.scanner.source.slice(e.start,e.end)},e.prototype.convertToken=function(e){var t={type:h.TokenName[e.type],value:this.getTokenRaw(e)};if(this.config.range&&(t.range=[e.start,e.end]),this.config.loc&&(t.loc={start:{line:this.startMarker.line,column:this.startMarker.column},end:{line:this.scanner.lineNumber,column:this.scanner.index-this.scanner.lineStart}}),9===e.type){var i=e.pattern,s=e.flags;t.regex={pattern:i,flags:s}}return t},e.prototype.nextToken=function(){var e=this.lookahead;this.lastMarker.index=this.scanner.index,this.lastMarker.line=this.scanner.lineNumber,this.lastMarker.column=this.scanner.index-this.scanner.lineStart,this.collectComments(),this.scanner.index!==this.startMarker.index&&(this.startMarker.index=this.scanner.index,this.startMarker.line=this.scanner.lineNumber,this.startMarker.column=this.scanner.index-this.scanner.lineStart);var t=this.scanner.lex();return this.hasLineTerminator=e.lineNumber!==t.lineNumber,t&&this.context.strict&&3===t.type&&this.scanner.isStrictModeReservedWord(t.value)&&(t.type=4),this.lookahead=t,this.config.tokens&&2!==t.type&&this.tokens.push(this.convertToken(t)),e},e.prototype.nextRegexToken=function(){this.collectComments();var e=this.scanner.scanRegExp();return this.config.tokens&&(this.tokens.pop(),this.tokens.push(this.convertToken(e))),this.lookahead=e,this.nextToken(),e},e.prototype.createNode=function(){return{index:this.startMarker.index,line:this.startMarker.line,column:this.startMarker.column}},e.prototype.startNode=function(e,t){void 0===t&&(t=0);var i=e.start-e.lineStart,s=e.lineNumber;return i<0&&(i+=t,s--),{index:e.start,line:s,column:i}},e.prototype.finalize=function(e,t){if(this.config.range&&(t.range=[e.index,this.lastMarker.index]),this.config.loc&&(t.loc={start:{line:e.line,column:e.column},end:{line:this.lastMarker.line,column:this.lastMarker.column}},this.config.source&&(t.loc.source=this.config.source)),this.delegate){var i={start:{line:e.line,column:e.column,offset:e.index},end:{line:this.lastMarker.line,column:this.lastMarker.column,offset:this.lastMarker.index}};this.delegate(t,i)}return t},e.prototype.expect=function(e){var t=this.nextToken();7===t.type&&t.value===e||this.throwUnexpectedToken(t)},e.prototype.expectCommaSeparator=function(){if(this.config.tolerant){var e=this.lookahead;7===e.type&&\",\"===e.value?this.nextToken():7===e.type&&\";\"===e.value?(this.nextToken(),this.tolerateUnexpectedToken(e)):this.tolerateUnexpectedToken(e,n.Messages.UnexpectedToken)}else this.expect(\",\")},e.prototype.expectKeyword=function(e){var t=this.nextToken();4===t.type&&t.value===e||this.throwUnexpectedToken(t)},e.prototype.match=function(e){return 7===this.lookahead.type&&this.lookahead.value===e},e.prototype.matchKeyword=function(e){return 4===this.lookahead.type&&this.lookahead.value===e},e.prototype.matchContextualKeyword=function(e){return 3===this.lookahead.type&&this.lookahead.value===e},e.prototype.matchAssign=function(){if(7!==this.lookahead.type)return!1;var e=this.lookahead.value;return\"=\"===e||\"*=\"===e||\"**=\"===e||\"/=\"===e||\"%=\"===e||\"+=\"===e||\"-=\"===e||\"<<=\"===e||\">>=\"===e||\">>>=\"===e||\"&=\"===e||\"^=\"===e||\"|=\"===e},e.prototype.isolateCoverGrammar=function(e){var t=this.context.isBindingElement,i=this.context.isAssignmentTarget,s=this.context.firstCoverInitializedNameError;this.context.isBindingElement=!0,this.context.isAssignmentTarget=!0,this.context.firstCoverInitializedNameError=null;var r=e.call(this);return null!==this.context.firstCoverInitializedNameError&&this.throwUnexpectedToken(this.context.firstCoverInitializedNameError),this.context.isBindingElement=t,this.context.isAssignmentTarget=i,this.context.firstCoverInitializedNameError=s,r},e.prototype.inheritCoverGrammar=function(e){var t=this.context.isBindingElement,i=this.context.isAssignmentTarget,s=this.context.firstCoverInitializedNameError;this.context.isBindingElement=!0,this.context.isAssignmentTarget=!0,this.context.firstCoverInitializedNameError=null;var r=e.call(this);return this.context.isBindingElement=this.context.isBindingElement&&t,this.context.isAssignmentTarget=this.context.isAssignmentTarget&&i,this.context.firstCoverInitializedNameError=s||this.context.firstCoverInitializedNameError,r},e.prototype.consumeSemicolon=function(){this.match(\";\")?this.nextToken():this.hasLineTerminator||(2===this.lookahead.type||this.match(\"}\")||this.throwUnexpectedToken(this.lookahead),this.lastMarker.index=this.startMarker.index,this.lastMarker.line=this.startMarker.line,this.lastMarker.column=this.startMarker.column)},e.prototype.parsePrimaryExpression=function(){var e,t,i,s=this.createNode();switch(this.lookahead.type){case 3:(this.context.isModule||this.context.await)&&\"await\"===this.lookahead.value&&this.tolerateUnexpectedToken(this.lookahead),e=this.matchAsyncFunction()?this.parseFunctionExpression():this.finalize(s,new a.Identifier(this.nextToken().value));break;case 6:case 8:this.context.strict&&this.lookahead.octal&&this.tolerateUnexpectedToken(this.lookahead,n.Messages.StrictOctalLiteral),this.context.isAssignmentTarget=!1,this.context.isBindingElement=!1,t=this.nextToken(),i=this.getTokenRaw(t),e=this.finalize(s,new a.Literal(t.value,i));break;case 1:this.context.isAssignmentTarget=!1,this.context.isBindingElement=!1,t=this.nextToken(),i=this.getTokenRaw(t),e=this.finalize(s,new a.Literal(\"true\"===t.value,i));break;case 5:this.context.isAssignmentTarget=!1,this.context.isBindingElement=!1,t=this.nextToken(),i=this.getTokenRaw(t),e=this.finalize(s,new a.Literal(null,i));break;case 10:e=this.parseTemplateLiteral();break;case 7:switch(this.lookahead.value){case\"(\":this.context.isBindingElement=!1,e=this.inheritCoverGrammar(this.parseGroupExpression);break;case\"[\":e=this.inheritCoverGrammar(this.parseArrayInitializer);break;case\"{\":e=this.inheritCoverGrammar(this.parseObjectInitializer);break;case\"/\":case\"/=\":this.context.isAssignmentTarget=!1,this.context.isBindingElement=!1,this.scanner.index=this.startMarker.index,t=this.nextRegexToken(),i=this.getTokenRaw(t),e=this.finalize(s,new a.RegexLiteral(t.regex,i,t.pattern,t.flags));break;default:e=this.throwUnexpectedToken(this.nextToken())}break;case 4:!this.context.strict&&this.context.allowYield&&this.matchKeyword(\"yield\")?e=this.parseIdentifierName():!this.context.strict&&this.matchKeyword(\"let\")?e=this.finalize(s,new a.Identifier(this.nextToken().value)):(this.context.isAssignmentTarget=!1,this.context.isBindingElement=!1,this.matchKeyword(\"function\")?e=this.parseFunctionExpression():this.matchKeyword(\"this\")?(this.nextToken(),e=this.finalize(s,new a.ThisExpression)):e=this.matchKeyword(\"class\")?this.parseClassExpression():this.throwUnexpectedToken(this.nextToken()));break;default:e=this.throwUnexpectedToken(this.nextToken())}return e},e.prototype.parseSpreadElement=function(){var e=this.createNode();this.expect(\"...\");var t=this.inheritCoverGrammar(this.parseAssignmentExpression);return this.finalize(e,new a.SpreadElement(t))},e.prototype.parseArrayInitializer=function(){var e=this.createNode(),t=[];for(this.expect(\"[\");!this.match(\"]\");)if(this.match(\",\"))this.nextToken(),t.push(null);else if(this.match(\"...\")){var i=this.parseSpreadElement();this.match(\"]\")||(this.context.isAssignmentTarget=!1,this.context.isBindingElement=!1,this.expect(\",\")),t.push(i)}else t.push(this.inheritCoverGrammar(this.parseAssignmentExpression)),this.match(\"]\")||this.expect(\",\");return this.expect(\"]\"),this.finalize(e,new a.ArrayExpression(t))},e.prototype.parsePropertyMethod=function(e){this.context.isAssignmentTarget=!1,this.context.isBindingElement=!1;var t=this.context.strict,i=this.context.allowStrictDirective;this.context.allowStrictDirective=e.simple;var s=this.isolateCoverGrammar(this.parseFunctionSourceElements);return this.context.strict&&e.firstRestricted&&this.tolerateUnexpectedToken(e.firstRestricted,e.message),this.context.strict&&e.stricted&&this.tolerateUnexpectedToken(e.stricted,e.message),this.context.strict=t,this.context.allowStrictDirective=i,s},e.prototype.parsePropertyMethodFunction=function(){var e=this.createNode(),t=this.context.allowYield;this.context.allowYield=!0;var i=this.parseFormalParameters(),s=this.parsePropertyMethod(i);return this.context.allowYield=t,this.finalize(e,new a.FunctionExpression(null,i.params,s,!1))},e.prototype.parsePropertyMethodAsyncFunction=function(){var e=this.createNode(),t=this.context.allowYield,i=this.context.await;this.context.allowYield=!1,this.context.await=!0;var s=this.parseFormalParameters(),r=this.parsePropertyMethod(s);return this.context.allowYield=t,this.context.await=i,this.finalize(e,new a.AsyncFunctionExpression(null,s.params,r))},e.prototype.parseObjectPropertyKey=function(){var e,t=this.createNode(),i=this.nextToken();switch(i.type){case 8:case 6:this.context.strict&&i.octal&&this.tolerateUnexpectedToken(i,n.Messages.StrictOctalLiteral);var s=this.getTokenRaw(i);e=this.finalize(t,new a.Literal(i.value,s));break;case 3:case 1:case 5:case 4:e=this.finalize(t,new a.Identifier(i.value));break;case 7:\"[\"===i.value?(e=this.isolateCoverGrammar(this.parseAssignmentExpression),this.expect(\"]\")):e=this.throwUnexpectedToken(i);break;default:e=this.throwUnexpectedToken(i)}return e},e.prototype.isPropertyKey=function(e,t){return e.type===u.Syntax.Identifier&&e.name===t||e.type===u.Syntax.Literal&&e.value===t},e.prototype.parseObjectProperty=function(e){var t,i=this.createNode(),s=this.lookahead,r=null,o=null,u=!1,h=!1,c=!1,l=!1;if(3===s.type){var p=s.value;this.nextToken(),u=this.match(\"[\"),r=(l=!this.hasLineTerminator&&\"async\"===p&&!this.match(\":\")&&!this.match(\"(\")&&!this.match(\"*\")&&!this.match(\",\"))?this.parseObjectPropertyKey():this.finalize(i,new a.Identifier(p))}else this.match(\"*\")?this.nextToken():(u=this.match(\"[\"),r=this.parseObjectPropertyKey());var d=this.qualifiedPropertyName(this.lookahead);if(3===s.type&&!l&&\"get\"===s.value&&d)t=\"get\",u=this.match(\"[\"),r=this.parseObjectPropertyKey(),this.context.allowYield=!1,o=this.parseGetterMethod();else if(3===s.type&&!l&&\"set\"===s.value&&d)t=\"set\",u=this.match(\"[\"),r=this.parseObjectPropertyKey(),o=this.parseSetterMethod();else if(7===s.type&&\"*\"===s.value&&d)t=\"init\",u=this.match(\"[\"),r=this.parseObjectPropertyKey(),o=this.parseGeneratorMethod(),h=!0;else if(r||this.throwUnexpectedToken(this.lookahead),t=\"init\",this.match(\":\")&&!l)!u&&this.isPropertyKey(r,\"__proto__\")&&(e.value&&this.tolerateError(n.Messages.DuplicateProtoProperty),e.value=!0),this.nextToken(),o=this.inheritCoverGrammar(this.parseAssignmentExpression);else if(this.match(\"(\"))o=l?this.parsePropertyMethodAsyncFunction():this.parsePropertyMethodFunction(),h=!0;else if(3===s.type)if(p=this.finalize(i,new a.Identifier(s.value)),this.match(\"=\")){this.context.firstCoverInitializedNameError=this.lookahead,this.nextToken(),c=!0;var m=this.isolateCoverGrammar(this.parseAssignmentExpression);o=this.finalize(i,new a.AssignmentPattern(p,m))}else c=!0,o=p;else this.throwUnexpectedToken(this.nextToken());return this.finalize(i,new a.Property(t,r,u,o,h,c))},e.prototype.parseObjectInitializer=function(){var e=this.createNode();this.expect(\"{\");for(var t=[],i={value:!1};!this.match(\"}\");)t.push(this.parseObjectProperty(i)),this.match(\"}\")||this.expectCommaSeparator();return this.expect(\"}\"),this.finalize(e,new a.ObjectExpression(t))},e.prototype.parseTemplateHead=function(){s.assert(this.lookahead.head,\"Template literal must start with a template head\");var e=this.createNode(),t=this.nextToken(),i=t.value,r=t.cooked;return this.finalize(e,new a.TemplateElement({raw:i,cooked:r},t.tail))},e.prototype.parseTemplateElement=function(){10!==this.lookahead.type&&this.throwUnexpectedToken();var e=this.createNode(),t=this.nextToken(),i=t.value,s=t.cooked;return this.finalize(e,new a.TemplateElement({raw:i,cooked:s},t.tail))},e.prototype.parseTemplateLiteral=function(){var e=this.createNode(),t=[],i=[],s=this.parseTemplateHead();for(i.push(s);!s.tail;)t.push(this.parseExpression()),s=this.parseTemplateElement(),i.push(s);return this.finalize(e,new a.TemplateLiteral(i,t))},e.prototype.reinterpretExpressionAsPattern=function(e){switch(e.type){case u.Syntax.Identifier:case u.Syntax.MemberExpression:case u.Syntax.RestElement:case u.Syntax.AssignmentPattern:break;case u.Syntax.SpreadElement:e.type=u.Syntax.RestElement,this.reinterpretExpressionAsPattern(e.argument);break;case u.Syntax.ArrayExpression:e.type=u.Syntax.ArrayPattern;for(var t=0;t<e.elements.length;t++)null!==e.elements[t]&&this.reinterpretExpressionAsPattern(e.elements[t]);break;case u.Syntax.ObjectExpression:for(e.type=u.Syntax.ObjectPattern,t=0;t<e.properties.length;t++)this.reinterpretExpressionAsPattern(e.properties[t].value);break;case u.Syntax.AssignmentExpression:e.type=u.Syntax.AssignmentPattern,delete e.operator,this.reinterpretExpressionAsPattern(e.left)}},e.prototype.parseGroupExpression=function(){var e;if(this.expect(\"(\"),this.match(\")\"))this.nextToken(),this.match(\"=>\")||this.expect(\"=>\"),e={type:c,params:[],async:!1};else{var t=this.lookahead,i=[];if(this.match(\"...\"))e=this.parseRestElement(i),this.expect(\")\"),this.match(\"=>\")||this.expect(\"=>\"),e={type:c,params:[e],async:!1};else{var s=!1;if(this.context.isBindingElement=!0,e=this.inheritCoverGrammar(this.parseAssignmentExpression),this.match(\",\")){var r=[];for(this.context.isAssignmentTarget=!1,r.push(e);2!==this.lookahead.type&&this.match(\",\");){if(this.nextToken(),this.match(\")\")){this.nextToken();for(var n=0;n<r.length;n++)this.reinterpretExpressionAsPattern(r[n]);s=!0,e={type:c,params:r,async:!1}}else if(this.match(\"...\")){for(this.context.isBindingElement||this.throwUnexpectedToken(this.lookahead),r.push(this.parseRestElement(i)),this.expect(\")\"),this.match(\"=>\")||this.expect(\"=>\"),this.context.isBindingElement=!1,n=0;n<r.length;n++)this.reinterpretExpressionAsPattern(r[n]);s=!0,e={type:c,params:r,async:!1}}else r.push(this.inheritCoverGrammar(this.parseAssignmentExpression));if(s)break}s||(e=this.finalize(this.startNode(t),new a.SequenceExpression(r)))}if(!s){if(this.expect(\")\"),this.match(\"=>\")&&(e.type===u.Syntax.Identifier&&\"yield\"===e.name&&(s=!0,e={type:c,params:[e],async:!1}),!s)){if(this.context.isBindingElement||this.throwUnexpectedToken(this.lookahead),e.type===u.Syntax.SequenceExpression)for(n=0;n<e.expressions.length;n++)this.reinterpretExpressionAsPattern(e.expressions[n]);else this.reinterpretExpressionAsPattern(e);var o=e.type===u.Syntax.SequenceExpression?e.expressions:[e];e={type:c,params:o,async:!1}}this.context.isBindingElement=!1}}}return e},e.prototype.parseArguments=function(){this.expect(\"(\");var e=[];if(!this.match(\")\"))for(;;){var t=this.match(\"...\")?this.parseSpreadElement():this.isolateCoverGrammar(this.parseAssignmentExpression);if(e.push(t),this.match(\")\"))break;if(this.expectCommaSeparator(),this.match(\")\"))break}return this.expect(\")\"),e},e.prototype.isIdentifierName=function(e){return 3===e.type||4===e.type||1===e.type||5===e.type},e.prototype.parseIdentifierName=function(){var e=this.createNode(),t=this.nextToken();return this.isIdentifierName(t)||this.throwUnexpectedToken(t),this.finalize(e,new a.Identifier(t.value))},e.prototype.parseNewExpression=function(){var e,t=this.createNode(),i=this.parseIdentifierName();if(s.assert(\"new\"===i.name,\"New expression must start with `new`\"),this.match(\".\"))if(this.nextToken(),3===this.lookahead.type&&this.context.inFunctionBody&&\"target\"===this.lookahead.value){var r=this.parseIdentifierName();e=new a.MetaProperty(i,r)}else this.throwUnexpectedToken(this.lookahead);else{var n=this.isolateCoverGrammar(this.parseLeftHandSideExpression),o=this.match(\"(\")?this.parseArguments():[];e=new a.NewExpression(n,o),this.context.isAssignmentTarget=!1,this.context.isBindingElement=!1}return this.finalize(t,e)},e.prototype.parseAsyncArgument=function(){var e=this.parseAssignmentExpression();return this.context.firstCoverInitializedNameError=null,e},e.prototype.parseAsyncArguments=function(){this.expect(\"(\");var e=[];if(!this.match(\")\"))for(;;){var t=this.match(\"...\")?this.parseSpreadElement():this.isolateCoverGrammar(this.parseAsyncArgument);if(e.push(t),this.match(\")\"))break;if(this.expectCommaSeparator(),this.match(\")\"))break}return this.expect(\")\"),e},e.prototype.parseLeftHandSideExpressionAllowCall=function(){var e,t=this.lookahead,i=this.matchContextualKeyword(\"async\"),s=this.context.allowIn;for(this.context.allowIn=!0,this.matchKeyword(\"super\")&&this.context.inFunctionBody?(e=this.createNode(),this.nextToken(),e=this.finalize(e,new a.Super),this.match(\"(\")||this.match(\".\")||this.match(\"[\")||this.throwUnexpectedToken(this.lookahead)):e=this.inheritCoverGrammar(this.matchKeyword(\"new\")?this.parseNewExpression:this.parsePrimaryExpression);;)if(this.match(\".\")){this.context.isBindingElement=!1,this.context.isAssignmentTarget=!0,this.expect(\".\");var r=this.parseIdentifierName();e=this.finalize(this.startNode(t),new a.StaticMemberExpression(e,r))}else if(this.match(\"(\")){var n=i&&t.lineNumber===this.lookahead.lineNumber;this.context.isBindingElement=!1,this.context.isAssignmentTarget=!1;var o=n?this.parseAsyncArguments():this.parseArguments();if(e=this.finalize(this.startNode(t),new a.CallExpression(e,o)),n&&this.match(\"=>\")){for(var u=0;u<o.length;++u)this.reinterpretExpressionAsPattern(o[u]);e={type:c,params:o,async:!0}}}else if(this.match(\"[\"))this.context.isBindingElement=!1,this.context.isAssignmentTarget=!0,this.expect(\"[\"),r=this.isolateCoverGrammar(this.parseExpression),this.expect(\"]\"),e=this.finalize(this.startNode(t),new a.ComputedMemberExpression(e,r));else{if(10!==this.lookahead.type||!this.lookahead.head)break;var h=this.parseTemplateLiteral();e=this.finalize(this.startNode(t),new a.TaggedTemplateExpression(e,h))}return this.context.allowIn=s,e},e.prototype.parseSuper=function(){var e=this.createNode();return this.expectKeyword(\"super\"),this.match(\"[\")||this.match(\".\")||this.throwUnexpectedToken(this.lookahead),this.finalize(e,new a.Super)},e.prototype.parseLeftHandSideExpression=function(){s.assert(this.context.allowIn,\"callee of new expression always allow in keyword.\");for(var e=this.startNode(this.lookahead),t=this.matchKeyword(\"super\")&&this.context.inFunctionBody?this.parseSuper():this.inheritCoverGrammar(this.matchKeyword(\"new\")?this.parseNewExpression:this.parsePrimaryExpression);;)if(this.match(\"[\")){this.context.isBindingElement=!1,this.context.isAssignmentTarget=!0,this.expect(\"[\");var i=this.isolateCoverGrammar(this.parseExpression);this.expect(\"]\"),t=this.finalize(e,new a.ComputedMemberExpression(t,i))}else if(this.match(\".\"))this.context.isBindingElement=!1,this.context.isAssignmentTarget=!0,this.expect(\".\"),i=this.parseIdentifierName(),t=this.finalize(e,new a.StaticMemberExpression(t,i));else{if(10!==this.lookahead.type||!this.lookahead.head)break;var r=this.parseTemplateLiteral();t=this.finalize(e,new a.TaggedTemplateExpression(t,r))}return t},e.prototype.parseUpdateExpression=function(){var e,t=this.lookahead;if(this.match(\"++\")||this.match(\"--\")){var i=this.startNode(t),s=this.nextToken();e=this.inheritCoverGrammar(this.parseUnaryExpression),this.context.strict&&e.type===u.Syntax.Identifier&&this.scanner.isRestrictedWord(e.name)&&this.tolerateError(n.Messages.StrictLHSPrefix),this.context.isAssignmentTarget||this.tolerateError(n.Messages.InvalidLHSInAssignment);var r=!0;e=this.finalize(i,new a.UpdateExpression(s.value,e,r)),this.context.isAssignmentTarget=!1,this.context.isBindingElement=!1}else if(e=this.inheritCoverGrammar(this.parseLeftHandSideExpressionAllowCall),!this.hasLineTerminator&&7===this.lookahead.type&&(this.match(\"++\")||this.match(\"--\"))){this.context.strict&&e.type===u.Syntax.Identifier&&this.scanner.isRestrictedWord(e.name)&&this.tolerateError(n.Messages.StrictLHSPostfix),this.context.isAssignmentTarget||this.tolerateError(n.Messages.InvalidLHSInAssignment),this.context.isAssignmentTarget=!1,this.context.isBindingElement=!1;var o=this.nextToken().value;r=!1,e=this.finalize(this.startNode(t),new a.UpdateExpression(o,e,r))}return e},e.prototype.parseAwaitExpression=function(){var e=this.createNode();this.nextToken();var t=this.parseUnaryExpression();return this.finalize(e,new a.AwaitExpression(t))},e.prototype.parseUnaryExpression=function(){var e;if(this.match(\"+\")||this.match(\"-\")||this.match(\"~\")||this.match(\"!\")||this.matchKeyword(\"delete\")||this.matchKeyword(\"void\")||this.matchKeyword(\"typeof\")){var t=this.startNode(this.lookahead),i=this.nextToken();e=this.inheritCoverGrammar(this.parseUnaryExpression),e=this.finalize(t,new a.UnaryExpression(i.value,e)),this.context.strict&&\"delete\"===e.operator&&e.argument.type===u.Syntax.Identifier&&this.tolerateError(n.Messages.StrictDelete),this.context.isAssignmentTarget=!1,this.context.isBindingElement=!1}else e=this.context.await&&this.matchContextualKeyword(\"await\")?this.parseAwaitExpression():this.parseUpdateExpression();return e},e.prototype.parseExponentiationExpression=function(){var e=this.lookahead,t=this.inheritCoverGrammar(this.parseUnaryExpression);if(t.type!==u.Syntax.UnaryExpression&&this.match(\"**\")){this.nextToken(),this.context.isAssignmentTarget=!1,this.context.isBindingElement=!1;var i=t,s=this.isolateCoverGrammar(this.parseExponentiationExpression);t=this.finalize(this.startNode(e),new a.BinaryExpression(\"**\",i,s))}return t},e.prototype.binaryPrecedence=function(e){var t=e.value;return 7===e.type?this.operatorPrecedence[t]||0:4===e.type&&(\"instanceof\"===t||this.context.allowIn&&\"in\"===t)?7:0},e.prototype.parseBinaryExpression=function(){var e=this.lookahead,t=this.inheritCoverGrammar(this.parseExponentiationExpression),i=this.lookahead,s=this.binaryPrecedence(i);if(s>0){this.nextToken(),this.context.isAssignmentTarget=!1,this.context.isBindingElement=!1;for(var r=[e,this.lookahead],n=t,o=this.isolateCoverGrammar(this.parseExponentiationExpression),u=[n,i.value,o],h=[s];!((s=this.binaryPrecedence(this.lookahead))<=0);){for(;u.length>2&&s<=h[h.length-1];){o=u.pop();var c=u.pop();h.pop(),n=u.pop(),r.pop();var l=this.startNode(r[r.length-1]);u.push(this.finalize(l,new a.BinaryExpression(c,n,o)))}u.push(this.nextToken().value),h.push(s),r.push(this.lookahead),u.push(this.isolateCoverGrammar(this.parseExponentiationExpression))}var p=u.length-1;t=u[p];for(var d=r.pop();p>1;){var m=r.pop(),x=d&&d.lineStart;l=this.startNode(m,x),c=u[p-1],t=this.finalize(l,new a.BinaryExpression(c,u[p-2],t)),p-=2,d=m}}return t},e.prototype.parseConditionalExpression=function(){var e=this.lookahead,t=this.inheritCoverGrammar(this.parseBinaryExpression);if(this.match(\"?\")){this.nextToken();var i=this.context.allowIn;this.context.allowIn=!0;var s=this.isolateCoverGrammar(this.parseAssignmentExpression);this.context.allowIn=i,this.expect(\":\");var r=this.isolateCoverGrammar(this.parseAssignmentExpression);t=this.finalize(this.startNode(e),new a.ConditionalExpression(t,s,r)),this.context.isAssignmentTarget=!1,this.context.isBindingElement=!1}return t},e.prototype.checkPatternParam=function(e,t){switch(t.type){case u.Syntax.Identifier:this.validateParam(e,t,t.name);break;case u.Syntax.RestElement:this.checkPatternParam(e,t.argument);break;case u.Syntax.AssignmentPattern:this.checkPatternParam(e,t.left);break;case u.Syntax.ArrayPattern:for(var i=0;i<t.elements.length;i++)null!==t.elements[i]&&this.checkPatternParam(e,t.elements[i]);break;case u.Syntax.ObjectPattern:for(i=0;i<t.properties.length;i++)this.checkPatternParam(e,t.properties[i].value)}e.simple=e.simple&&t instanceof a.Identifier},e.prototype.reinterpretAsCoverFormalsList=function(e){var t,i=[e],s=!1;switch(e.type){case u.Syntax.Identifier:break;case c:i=e.params,s=e.async;break;default:return null}t={simple:!0,paramSet:{}};for(var r=0;r<i.length;++r)(a=i[r]).type===u.Syntax.AssignmentPattern?a.right.type===u.Syntax.YieldExpression&&(a.right.argument&&this.throwUnexpectedToken(this.lookahead),a.right.type=u.Syntax.Identifier,a.right.name=\"yield\",delete a.right.argument,delete a.right.delegate):s&&a.type===u.Syntax.Identifier&&\"await\"===a.name&&this.throwUnexpectedToken(this.lookahead),this.checkPatternParam(t,a),i[r]=a;if(this.context.strict||!this.context.allowYield)for(r=0;r<i.length;++r){var a;(a=i[r]).type===u.Syntax.YieldExpression&&this.throwUnexpectedToken(this.lookahead)}if(t.message===n.Messages.StrictParamDupe){var o=this.context.strict?t.stricted:t.firstRestricted;this.throwUnexpectedToken(o,t.message)}return{simple:t.simple,params:i,stricted:t.stricted,firstRestricted:t.firstRestricted,message:t.message}},e.prototype.parseAssignmentExpression=function(){var e;if(!this.context.allowYield&&this.matchKeyword(\"yield\"))e=this.parseYieldExpression();else{var t=this.lookahead,i=t;if(e=this.parseConditionalExpression(),3===i.type&&i.lineNumber===this.lookahead.lineNumber&&\"async\"===i.value&&(3===this.lookahead.type||this.matchKeyword(\"yield\"))){var s=this.parsePrimaryExpression();this.reinterpretExpressionAsPattern(s),e={type:c,params:[s],async:!0}}if(e.type===c||this.match(\"=>\")){this.context.isAssignmentTarget=!1,this.context.isBindingElement=!1;var r=e.async,o=this.reinterpretAsCoverFormalsList(e);if(o){this.hasLineTerminator&&this.tolerateUnexpectedToken(this.lookahead),this.context.firstCoverInitializedNameError=null;var h=this.context.strict,l=this.context.allowStrictDirective;this.context.allowStrictDirective=o.simple;var p=this.context.allowYield,d=this.context.await;this.context.allowYield=!0,this.context.await=r;var m=this.startNode(t);this.expect(\"=>\");var x=void 0;if(this.match(\"{\")){var D=this.context.allowIn;this.context.allowIn=!0,x=this.parseFunctionSourceElements(),this.context.allowIn=D}else x=this.isolateCoverGrammar(this.parseAssignmentExpression);var f=x.type!==u.Syntax.BlockStatement;this.context.strict&&o.firstRestricted&&this.throwUnexpectedToken(o.firstRestricted,o.message),this.context.strict&&o.stricted&&this.tolerateUnexpectedToken(o.stricted,o.message),e=r?this.finalize(m,new a.AsyncArrowFunctionExpression(o.params,x,f)):this.finalize(m,new a.ArrowFunctionExpression(o.params,x,f)),this.context.strict=h,this.context.allowStrictDirective=l,this.context.allowYield=p,this.context.await=d}}else if(this.matchAssign()){if(this.context.isAssignmentTarget||this.tolerateError(n.Messages.InvalidLHSInAssignment),this.context.strict&&e.type===u.Syntax.Identifier){var E=e;this.scanner.isRestrictedWord(E.name)&&this.tolerateUnexpectedToken(i,n.Messages.StrictLHSAssignment),this.scanner.isStrictModeReservedWord(E.name)&&this.tolerateUnexpectedToken(i,n.Messages.StrictReservedWord)}this.match(\"=\")?this.reinterpretExpressionAsPattern(e):(this.context.isAssignmentTarget=!1,this.context.isBindingElement=!1);var y=(i=this.nextToken()).value,C=this.isolateCoverGrammar(this.parseAssignmentExpression);e=this.finalize(this.startNode(t),new a.AssignmentExpression(y,e,C)),this.context.firstCoverInitializedNameError=null}}return e},e.prototype.parseExpression=function(){var e=this.lookahead,t=this.isolateCoverGrammar(this.parseAssignmentExpression);if(this.match(\",\")){var i=[];for(i.push(t);2!==this.lookahead.type&&this.match(\",\");)this.nextToken(),i.push(this.isolateCoverGrammar(this.parseAssignmentExpression));t=this.finalize(this.startNode(e),new a.SequenceExpression(i))}return t},e.prototype.parseStatementListItem=function(){var e;if(this.context.isAssignmentTarget=!0,this.context.isBindingElement=!0,4===this.lookahead.type)switch(this.lookahead.value){case\"export\":this.context.isModule||this.tolerateUnexpectedToken(this.lookahead,n.Messages.IllegalExportDeclaration),e=this.parseExportDeclaration();break;case\"import\":this.context.isModule||this.tolerateUnexpectedToken(this.lookahead,n.Messages.IllegalImportDeclaration),e=this.parseImportDeclaration();break;case\"const\":e=this.parseLexicalDeclaration({inFor:!1});break;case\"function\":e=this.parseFunctionDeclaration();break;case\"class\":e=this.parseClassDeclaration();break;case\"let\":e=this.isLexicalDeclaration()?this.parseLexicalDeclaration({inFor:!1}):this.parseStatement();break;default:e=this.parseStatement()}else e=this.parseStatement();return e},e.prototype.parseBlock=function(){var e=this.createNode();this.expect(\"{\");for(var t=[];!this.match(\"}\");)t.push(this.parseStatementListItem());return this.expect(\"}\"),this.finalize(e,new a.BlockStatement(t))},e.prototype.parseLexicalBinding=function(e,t){var i=this.createNode(),s=this.parsePattern([],e);this.context.strict&&s.type===u.Syntax.Identifier&&this.scanner.isRestrictedWord(s.name)&&this.tolerateError(n.Messages.StrictVarName);var r=null;return\"const\"===e?this.matchKeyword(\"in\")||this.matchContextualKeyword(\"of\")||(this.match(\"=\")?(this.nextToken(),r=this.isolateCoverGrammar(this.parseAssignmentExpression)):this.throwError(n.Messages.DeclarationMissingInitializer,\"const\")):(!t.inFor&&s.type!==u.Syntax.Identifier||this.match(\"=\"))&&(this.expect(\"=\"),r=this.isolateCoverGrammar(this.parseAssignmentExpression)),this.finalize(i,new a.VariableDeclarator(s,r))},e.prototype.parseBindingList=function(e,t){for(var i=[this.parseLexicalBinding(e,t)];this.match(\",\");)this.nextToken(),i.push(this.parseLexicalBinding(e,t));return i},e.prototype.isLexicalDeclaration=function(){var e=this.scanner.saveState();this.scanner.scanComments();var t=this.scanner.lex();return this.scanner.restoreState(e),3===t.type||7===t.type&&\"[\"===t.value||7===t.type&&\"{\"===t.value||4===t.type&&\"let\"===t.value||4===t.type&&\"yield\"===t.value},e.prototype.parseLexicalDeclaration=function(e){var t=this.createNode(),i=this.nextToken().value;s.assert(\"let\"===i||\"const\"===i,\"Lexical declaration must be either let or const\");var r=this.parseBindingList(i,e);return this.consumeSemicolon(),this.finalize(t,new a.VariableDeclaration(r,i))},e.prototype.parseBindingRestElement=function(e,t){var i=this.createNode();this.expect(\"...\");var s=this.parsePattern(e,t);return this.finalize(i,new a.RestElement(s))},e.prototype.parseArrayPattern=function(e,t){var i=this.createNode();this.expect(\"[\");for(var s=[];!this.match(\"]\");)if(this.match(\",\"))this.nextToken(),s.push(null);else{if(this.match(\"...\")){s.push(this.parseBindingRestElement(e,t));break}s.push(this.parsePatternWithDefault(e,t)),this.match(\"]\")||this.expect(\",\")}return this.expect(\"]\"),this.finalize(i,new a.ArrayPattern(s))},e.prototype.parsePropertyPattern=function(e,t){var i,s,r=this.createNode(),n=!1,o=!1;if(3===this.lookahead.type){var u=this.lookahead;i=this.parseVariableIdentifier();var h=this.finalize(r,new a.Identifier(u.value));if(this.match(\"=\")){e.push(u),o=!0,this.nextToken();var c=this.parseAssignmentExpression();s=this.finalize(this.startNode(u),new a.AssignmentPattern(h,c))}else this.match(\":\")?(this.expect(\":\"),s=this.parsePatternWithDefault(e,t)):(e.push(u),o=!0,s=h)}else n=this.match(\"[\"),i=this.parseObjectPropertyKey(),this.expect(\":\"),s=this.parsePatternWithDefault(e,t);return this.finalize(r,new a.Property(\"init\",i,n,s,!1,o))},e.prototype.parseObjectPattern=function(e,t){var i=this.createNode(),s=[];for(this.expect(\"{\");!this.match(\"}\");)s.push(this.parsePropertyPattern(e,t)),this.match(\"}\")||this.expect(\",\");return this.expect(\"}\"),this.finalize(i,new a.ObjectPattern(s))},e.prototype.parsePattern=function(e,t){var i;return this.match(\"[\")?i=this.parseArrayPattern(e,t):this.match(\"{\")?i=this.parseObjectPattern(e,t):(!this.matchKeyword(\"let\")||\"const\"!==t&&\"let\"!==t||this.tolerateUnexpectedToken(this.lookahead,n.Messages.LetInLexicalBinding),e.push(this.lookahead),i=this.parseVariableIdentifier(t)),i},e.prototype.parsePatternWithDefault=function(e,t){var i=this.lookahead,s=this.parsePattern(e,t);if(this.match(\"=\")){this.nextToken();var r=this.context.allowYield;this.context.allowYield=!0;var n=this.isolateCoverGrammar(this.parseAssignmentExpression);this.context.allowYield=r,s=this.finalize(this.startNode(i),new a.AssignmentPattern(s,n))}return s},e.prototype.parseVariableIdentifier=function(e){var t=this.createNode(),i=this.nextToken();return 4===i.type&&\"yield\"===i.value?this.context.strict?this.tolerateUnexpectedToken(i,n.Messages.StrictReservedWord):this.context.allowYield||this.throwUnexpectedToken(i):3!==i.type?this.context.strict&&4===i.type&&this.scanner.isStrictModeReservedWord(i.value)?this.tolerateUnexpectedToken(i,n.Messages.StrictReservedWord):(this.context.strict||\"let\"!==i.value||\"var\"!==e)&&this.throwUnexpectedToken(i):(this.context.isModule||this.context.await)&&3===i.type&&\"await\"===i.value&&this.tolerateUnexpectedToken(i),this.finalize(t,new a.Identifier(i.value))},e.prototype.parseVariableDeclaration=function(e){var t=this.createNode(),i=this.parsePattern([],\"var\");this.context.strict&&i.type===u.Syntax.Identifier&&this.scanner.isRestrictedWord(i.name)&&this.tolerateError(n.Messages.StrictVarName);var s=null;return this.match(\"=\")?(this.nextToken(),s=this.isolateCoverGrammar(this.parseAssignmentExpression)):i.type===u.Syntax.Identifier||e.inFor||this.expect(\"=\"),this.finalize(t,new a.VariableDeclarator(i,s))},e.prototype.parseVariableDeclarationList=function(e){var t={inFor:e.inFor},i=[];for(i.push(this.parseVariableDeclaration(t));this.match(\",\");)this.nextToken(),i.push(this.parseVariableDeclaration(t));return i},e.prototype.parseVariableStatement=function(){var e=this.createNode();this.expectKeyword(\"var\");var t=this.parseVariableDeclarationList({inFor:!1});return this.consumeSemicolon(),this.finalize(e,new a.VariableDeclaration(t,\"var\"))},e.prototype.parseEmptyStatement=function(){var e=this.createNode();return this.expect(\";\"),this.finalize(e,new a.EmptyStatement)},e.prototype.parseExpressionStatement=function(){var e=this.createNode(),t=this.parseExpression();return this.consumeSemicolon(),this.finalize(e,new a.ExpressionStatement(t))},e.prototype.parseIfClause=function(){return this.context.strict&&this.matchKeyword(\"function\")&&this.tolerateError(n.Messages.StrictFunction),this.parseStatement()},e.prototype.parseIfStatement=function(){var e,t=this.createNode(),i=null;this.expectKeyword(\"if\"),this.expect(\"(\");var s=this.parseExpression();return!this.match(\")\")&&this.config.tolerant?(this.tolerateUnexpectedToken(this.nextToken()),e=this.finalize(this.createNode(),new a.EmptyStatement)):(this.expect(\")\"),e=this.parseIfClause(),this.matchKeyword(\"else\")&&(this.nextToken(),i=this.parseIfClause())),this.finalize(t,new a.IfStatement(s,e,i))},e.prototype.parseDoWhileStatement=function(){var e=this.createNode();this.expectKeyword(\"do\");var t=this.context.inIteration;this.context.inIteration=!0;var i=this.parseStatement();this.context.inIteration=t,this.expectKeyword(\"while\"),this.expect(\"(\");var s=this.parseExpression();return!this.match(\")\")&&this.config.tolerant?this.tolerateUnexpectedToken(this.nextToken()):(this.expect(\")\"),this.match(\";\")&&this.nextToken()),this.finalize(e,new a.DoWhileStatement(i,s))},e.prototype.parseWhileStatement=function(){var e,t=this.createNode();this.expectKeyword(\"while\"),this.expect(\"(\");var i=this.parseExpression();if(!this.match(\")\")&&this.config.tolerant)this.tolerateUnexpectedToken(this.nextToken()),e=this.finalize(this.createNode(),new a.EmptyStatement);else{this.expect(\")\");var s=this.context.inIteration;this.context.inIteration=!0,e=this.parseStatement(),this.context.inIteration=s}return this.finalize(t,new a.WhileStatement(i,e))},e.prototype.parseForStatement=function(){var e,t,i,s=null,r=null,o=null,h=!0,c=this.createNode();if(this.expectKeyword(\"for\"),this.expect(\"(\"),this.match(\";\"))this.nextToken();else if(this.matchKeyword(\"var\")){s=this.createNode(),this.nextToken();var l=this.context.allowIn;this.context.allowIn=!1;var p=this.parseVariableDeclarationList({inFor:!0});if(this.context.allowIn=l,1===p.length&&this.matchKeyword(\"in\")){var d=p[0];d.init&&(d.id.type===u.Syntax.ArrayPattern||d.id.type===u.Syntax.ObjectPattern||this.context.strict)&&this.tolerateError(n.Messages.ForInOfLoopInitializer,\"for-in\"),s=this.finalize(s,new a.VariableDeclaration(p,\"var\")),this.nextToken(),e=s,t=this.parseExpression(),s=null}else 1===p.length&&null===p[0].init&&this.matchContextualKeyword(\"of\")?(s=this.finalize(s,new a.VariableDeclaration(p,\"var\")),this.nextToken(),e=s,t=this.parseAssignmentExpression(),s=null,h=!1):(s=this.finalize(s,new a.VariableDeclaration(p,\"var\")),this.expect(\";\"))}else if(this.matchKeyword(\"const\")||this.matchKeyword(\"let\")){s=this.createNode();var m=this.nextToken().value;this.context.strict||\"in\"!==this.lookahead.value?(l=this.context.allowIn,this.context.allowIn=!1,p=this.parseBindingList(m,{inFor:!0}),this.context.allowIn=l,1===p.length&&null===p[0].init&&this.matchKeyword(\"in\")?(s=this.finalize(s,new a.VariableDeclaration(p,m)),this.nextToken(),e=s,t=this.parseExpression(),s=null):1===p.length&&null===p[0].init&&this.matchContextualKeyword(\"of\")?(s=this.finalize(s,new a.VariableDeclaration(p,m)),this.nextToken(),e=s,t=this.parseAssignmentExpression(),s=null,h=!1):(this.consumeSemicolon(),s=this.finalize(s,new a.VariableDeclaration(p,m)))):(s=this.finalize(s,new a.Identifier(m)),this.nextToken(),e=s,t=this.parseExpression(),s=null)}else{var x=this.lookahead;if(l=this.context.allowIn,this.context.allowIn=!1,s=this.inheritCoverGrammar(this.parseAssignmentExpression),this.context.allowIn=l,this.matchKeyword(\"in\"))this.context.isAssignmentTarget&&s.type!==u.Syntax.AssignmentExpression||this.tolerateError(n.Messages.InvalidLHSInForIn),this.nextToken(),this.reinterpretExpressionAsPattern(s),e=s,t=this.parseExpression(),s=null;else if(this.matchContextualKeyword(\"of\"))this.context.isAssignmentTarget&&s.type!==u.Syntax.AssignmentExpression||this.tolerateError(n.Messages.InvalidLHSInForLoop),this.nextToken(),this.reinterpretExpressionAsPattern(s),e=s,t=this.parseAssignmentExpression(),s=null,h=!1;else{if(this.match(\",\")){for(var D=[s];this.match(\",\");)this.nextToken(),D.push(this.isolateCoverGrammar(this.parseAssignmentExpression));s=this.finalize(this.startNode(x),new a.SequenceExpression(D))}this.expect(\";\")}}if(\"undefined\"===typeof e&&(this.match(\";\")||(r=this.parseExpression()),this.expect(\";\"),this.match(\")\")||(o=this.parseExpression())),!this.match(\")\")&&this.config.tolerant)this.tolerateUnexpectedToken(this.nextToken()),i=this.finalize(this.createNode(),new a.EmptyStatement);else{this.expect(\")\");var f=this.context.inIteration;this.context.inIteration=!0,i=this.isolateCoverGrammar(this.parseStatement),this.context.inIteration=f}return\"undefined\"===typeof e?this.finalize(c,new a.ForStatement(s,r,o,i)):h?this.finalize(c,new a.ForInStatement(e,t,i)):this.finalize(c,new a.ForOfStatement(e,t,i))},e.prototype.parseContinueStatement=function(){var e=this.createNode();this.expectKeyword(\"continue\");var t=null;if(3===this.lookahead.type&&!this.hasLineTerminator){var i=this.parseVariableIdentifier();t=i;var s=\"$\"+i.name;Object.prototype.hasOwnProperty.call(this.context.labelSet,s)||this.throwError(n.Messages.UnknownLabel,i.name)}return this.consumeSemicolon(),null!==t||this.context.inIteration||this.throwError(n.Messages.IllegalContinue),this.finalize(e,new a.ContinueStatement(t))},e.prototype.parseBreakStatement=function(){var e=this.createNode();this.expectKeyword(\"break\");var t=null;if(3===this.lookahead.type&&!this.hasLineTerminator){var i=this.parseVariableIdentifier(),s=\"$\"+i.name;Object.prototype.hasOwnProperty.call(this.context.labelSet,s)||this.throwError(n.Messages.UnknownLabel,i.name),t=i}return this.consumeSemicolon(),null!==t||this.context.inIteration||this.context.inSwitch||this.throwError(n.Messages.IllegalBreak),this.finalize(e,new a.BreakStatement(t))},e.prototype.parseReturnStatement=function(){this.context.inFunctionBody||this.tolerateError(n.Messages.IllegalReturn);var e=this.createNode();this.expectKeyword(\"return\");var t=(this.match(\";\")||this.match(\"}\")||this.hasLineTerminator||2===this.lookahead.type)&&8!==this.lookahead.type&&10!==this.lookahead.type?null:this.parseExpression();return this.consumeSemicolon(),this.finalize(e,new a.ReturnStatement(t))},e.prototype.parseWithStatement=function(){this.context.strict&&this.tolerateError(n.Messages.StrictModeWith);var e,t=this.createNode();this.expectKeyword(\"with\"),this.expect(\"(\");var i=this.parseExpression();return!this.match(\")\")&&this.config.tolerant?(this.tolerateUnexpectedToken(this.nextToken()),e=this.finalize(this.createNode(),new a.EmptyStatement)):(this.expect(\")\"),e=this.parseStatement()),this.finalize(t,new a.WithStatement(i,e))},e.prototype.parseSwitchCase=function(){var e,t=this.createNode();this.matchKeyword(\"default\")?(this.nextToken(),e=null):(this.expectKeyword(\"case\"),e=this.parseExpression()),this.expect(\":\");for(var i=[];!(this.match(\"}\")||this.matchKeyword(\"default\")||this.matchKeyword(\"case\"));)i.push(this.parseStatementListItem());return this.finalize(t,new a.SwitchCase(e,i))},e.prototype.parseSwitchStatement=function(){var e=this.createNode();this.expectKeyword(\"switch\"),this.expect(\"(\");var t=this.parseExpression();this.expect(\")\");var i=this.context.inSwitch;this.context.inSwitch=!0;var s=[],r=!1;for(this.expect(\"{\");!this.match(\"}\");){var o=this.parseSwitchCase();null===o.test&&(r&&this.throwError(n.Messages.MultipleDefaultsInSwitch),r=!0),s.push(o)}return this.expect(\"}\"),this.context.inSwitch=i,this.finalize(e,new a.SwitchStatement(t,s))},e.prototype.parseLabelledStatement=function(){var e,t=this.createNode(),i=this.parseExpression();if(i.type===u.Syntax.Identifier&&this.match(\":\")){this.nextToken();var s=i,r=\"$\"+s.name;Object.prototype.hasOwnProperty.call(this.context.labelSet,r)&&this.throwError(n.Messages.Redeclaration,\"Label\",s.name),this.context.labelSet[r]=!0;var o=void 0;if(this.matchKeyword(\"class\"))this.tolerateUnexpectedToken(this.lookahead),o=this.parseClassDeclaration();else if(this.matchKeyword(\"function\")){var h=this.lookahead,c=this.parseFunctionDeclaration();this.context.strict?this.tolerateUnexpectedToken(h,n.Messages.StrictFunction):c.generator&&this.tolerateUnexpectedToken(h,n.Messages.GeneratorInLegacyContext),o=c}else o=this.parseStatement();delete this.context.labelSet[r],e=new a.LabeledStatement(s,o)}else this.consumeSemicolon(),e=new a.ExpressionStatement(i);return this.finalize(t,e)},e.prototype.parseThrowStatement=function(){var e=this.createNode();this.expectKeyword(\"throw\"),this.hasLineTerminator&&this.throwError(n.Messages.NewlineAfterThrow);var t=this.parseExpression();return this.consumeSemicolon(),this.finalize(e,new a.ThrowStatement(t))},e.prototype.parseCatchClause=function(){var e=this.createNode();this.expectKeyword(\"catch\"),this.expect(\"(\"),this.match(\")\")&&this.throwUnexpectedToken(this.lookahead);for(var t=[],i=this.parsePattern(t),s={},r=0;r<t.length;r++){var o=\"$\"+t[r].value;Object.prototype.hasOwnProperty.call(s,o)&&this.tolerateError(n.Messages.DuplicateBinding,t[r].value),s[o]=!0}this.context.strict&&i.type===u.Syntax.Identifier&&this.scanner.isRestrictedWord(i.name)&&this.tolerateError(n.Messages.StrictCatchVariable),this.expect(\")\");var h=this.parseBlock();return this.finalize(e,new a.CatchClause(i,h))},e.prototype.parseFinallyClause=function(){return this.expectKeyword(\"finally\"),this.parseBlock()},e.prototype.parseTryStatement=function(){var e=this.createNode();this.expectKeyword(\"try\");var t=this.parseBlock(),i=this.matchKeyword(\"catch\")?this.parseCatchClause():null,s=this.matchKeyword(\"finally\")?this.parseFinallyClause():null;return i||s||this.throwError(n.Messages.NoCatchOrFinally),this.finalize(e,new a.TryStatement(t,i,s))},e.prototype.parseDebuggerStatement=function(){var e=this.createNode();return this.expectKeyword(\"debugger\"),this.consumeSemicolon(),this.finalize(e,new a.DebuggerStatement)},e.prototype.parseStatement=function(){var e;switch(this.lookahead.type){case 1:case 5:case 6:case 8:case 10:case 9:e=this.parseExpressionStatement();break;case 7:var t=this.lookahead.value;e=\"{\"===t?this.parseBlock():\"(\"===t?this.parseExpressionStatement():\";\"===t?this.parseEmptyStatement():this.parseExpressionStatement();break;case 3:e=this.matchAsyncFunction()?this.parseFunctionDeclaration():this.parseLabelledStatement();break;case 4:switch(this.lookahead.value){case\"break\":e=this.parseBreakStatement();break;case\"continue\":e=this.parseContinueStatement();break;case\"debugger\":e=this.parseDebuggerStatement();break;case\"do\":e=this.parseDoWhileStatement();break;case\"for\":e=this.parseForStatement();break;case\"function\":e=this.parseFunctionDeclaration();break;case\"if\":e=this.parseIfStatement();break;case\"return\":e=this.parseReturnStatement();break;case\"switch\":e=this.parseSwitchStatement();break;case\"throw\":e=this.parseThrowStatement();break;case\"try\":e=this.parseTryStatement();break;case\"var\":e=this.parseVariableStatement();break;case\"while\":e=this.parseWhileStatement();break;case\"with\":e=this.parseWithStatement();break;default:e=this.parseExpressionStatement()}break;default:e=this.throwUnexpectedToken(this.lookahead)}return e},e.prototype.parseFunctionSourceElements=function(){var e=this.createNode();this.expect(\"{\");var t=this.parseDirectivePrologues(),i=this.context.labelSet,s=this.context.inIteration,r=this.context.inSwitch,n=this.context.inFunctionBody;for(this.context.labelSet={},this.context.inIteration=!1,this.context.inSwitch=!1,this.context.inFunctionBody=!0;2!==this.lookahead.type&&!this.match(\"}\");)t.push(this.parseStatementListItem());return this.expect(\"}\"),this.context.labelSet=i,this.context.inIteration=s,this.context.inSwitch=r,this.context.inFunctionBody=n,this.finalize(e,new a.BlockStatement(t))},e.prototype.validateParam=function(e,t,i){var s=\"$\"+i;this.context.strict?(this.scanner.isRestrictedWord(i)&&(e.stricted=t,e.message=n.Messages.StrictParamName),Object.prototype.hasOwnProperty.call(e.paramSet,s)&&(e.stricted=t,e.message=n.Messages.StrictParamDupe)):e.firstRestricted||(this.scanner.isRestrictedWord(i)?(e.firstRestricted=t,e.message=n.Messages.StrictParamName):this.scanner.isStrictModeReservedWord(i)?(e.firstRestricted=t,e.message=n.Messages.StrictReservedWord):Object.prototype.hasOwnProperty.call(e.paramSet,s)&&(e.stricted=t,e.message=n.Messages.StrictParamDupe)),\"function\"===typeof Object.defineProperty?Object.defineProperty(e.paramSet,s,{value:!0,enumerable:!0,writable:!0,configurable:!0}):e.paramSet[s]=!0},e.prototype.parseRestElement=function(e){var t=this.createNode();this.expect(\"...\");var i=this.parsePattern(e);return this.match(\"=\")&&this.throwError(n.Messages.DefaultRestParameter),this.match(\")\")||this.throwError(n.Messages.ParameterAfterRestParameter),this.finalize(t,new a.RestElement(i))},e.prototype.parseFormalParameter=function(e){for(var t=[],i=this.match(\"...\")?this.parseRestElement(t):this.parsePatternWithDefault(t),s=0;s<t.length;s++)this.validateParam(e,t[s],t[s].value);e.simple=e.simple&&i instanceof a.Identifier,e.params.push(i)},e.prototype.parseFormalParameters=function(e){var t;if(t={simple:!0,params:[],firstRestricted:e},this.expect(\"(\"),!this.match(\")\"))for(t.paramSet={};2!==this.lookahead.type&&(this.parseFormalParameter(t),!this.match(\")\"))&&(this.expect(\",\"),!this.match(\")\")););return this.expect(\")\"),{simple:t.simple,params:t.params,stricted:t.stricted,firstRestricted:t.firstRestricted,message:t.message}},e.prototype.matchAsyncFunction=function(){var e=this.matchContextualKeyword(\"async\");if(e){var t=this.scanner.saveState();this.scanner.scanComments();var i=this.scanner.lex();this.scanner.restoreState(t),e=t.lineNumber===i.lineNumber&&4===i.type&&\"function\"===i.value}return e},e.prototype.parseFunctionDeclaration=function(e){var t=this.createNode(),i=this.matchContextualKeyword(\"async\");i&&this.nextToken(),this.expectKeyword(\"function\");var s,r=!i&&this.match(\"*\");r&&this.nextToken();var o=null,u=null;if(!e||!this.match(\"(\")){var h=this.lookahead;o=this.parseVariableIdentifier(),this.context.strict?this.scanner.isRestrictedWord(h.value)&&this.tolerateUnexpectedToken(h,n.Messages.StrictFunctionName):this.scanner.isRestrictedWord(h.value)?(u=h,s=n.Messages.StrictFunctionName):this.scanner.isStrictModeReservedWord(h.value)&&(u=h,s=n.Messages.StrictReservedWord)}var c=this.context.await,l=this.context.allowYield;this.context.await=i,this.context.allowYield=!r;var p=this.parseFormalParameters(u),d=p.params,m=p.stricted;u=p.firstRestricted,p.message&&(s=p.message);var x=this.context.strict,D=this.context.allowStrictDirective;this.context.allowStrictDirective=p.simple;var f=this.parseFunctionSourceElements();return this.context.strict&&u&&this.throwUnexpectedToken(u,s),this.context.strict&&m&&this.tolerateUnexpectedToken(m,s),this.context.strict=x,this.context.allowStrictDirective=D,this.context.await=c,this.context.allowYield=l,i?this.finalize(t,new a.AsyncFunctionDeclaration(o,d,f)):this.finalize(t,new a.FunctionDeclaration(o,d,f,r))},e.prototype.parseFunctionExpression=function(){var e=this.createNode(),t=this.matchContextualKeyword(\"async\");t&&this.nextToken(),this.expectKeyword(\"function\");var i,s=!t&&this.match(\"*\");s&&this.nextToken();var r,o=null,u=this.context.await,h=this.context.allowYield;if(this.context.await=t,this.context.allowYield=!s,!this.match(\"(\")){var c=this.lookahead;o=this.context.strict||s||!this.matchKeyword(\"yield\")?this.parseVariableIdentifier():this.parseIdentifierName(),this.context.strict?this.scanner.isRestrictedWord(c.value)&&this.tolerateUnexpectedToken(c,n.Messages.StrictFunctionName):this.scanner.isRestrictedWord(c.value)?(r=c,i=n.Messages.StrictFunctionName):this.scanner.isStrictModeReservedWord(c.value)&&(r=c,i=n.Messages.StrictReservedWord)}var l=this.parseFormalParameters(r),p=l.params,d=l.stricted;r=l.firstRestricted,l.message&&(i=l.message);var m=this.context.strict,x=this.context.allowStrictDirective;this.context.allowStrictDirective=l.simple;var D=this.parseFunctionSourceElements();return this.context.strict&&r&&this.throwUnexpectedToken(r,i),this.context.strict&&d&&this.tolerateUnexpectedToken(d,i),this.context.strict=m,this.context.allowStrictDirective=x,this.context.await=u,this.context.allowYield=h,t?this.finalize(e,new a.AsyncFunctionExpression(o,p,D)):this.finalize(e,new a.FunctionExpression(o,p,D,s))},e.prototype.parseDirective=function(){var e=this.lookahead,t=this.createNode(),i=this.parseExpression(),s=i.type===u.Syntax.Literal?this.getTokenRaw(e).slice(1,-1):null;return this.consumeSemicolon(),this.finalize(t,s?new a.Directive(i,s):new a.ExpressionStatement(i))},e.prototype.parseDirectivePrologues=function(){for(var e=null,t=[];;){var i=this.lookahead;if(8!==i.type)break;var s=this.parseDirective();t.push(s);var r=s.directive;if(\"string\"!==typeof r)break;\"use strict\"===r?(this.context.strict=!0,e&&this.tolerateUnexpectedToken(e,n.Messages.StrictOctalLiteral),this.context.allowStrictDirective||this.tolerateUnexpectedToken(i,n.Messages.IllegalLanguageModeDirective)):!e&&i.octal&&(e=i)}return t},e.prototype.qualifiedPropertyName=function(e){switch(e.type){case 3:case 8:case 1:case 5:case 6:case 4:return!0;case 7:return\"[\"===e.value}return!1},e.prototype.parseGetterMethod=function(){var e=this.createNode(),t=this.context.allowYield;this.context.allowYield=!0;var i=this.parseFormalParameters();i.params.length>0&&this.tolerateError(n.Messages.BadGetterArity);var s=this.parsePropertyMethod(i);return this.context.allowYield=t,this.finalize(e,new a.FunctionExpression(null,i.params,s,!1))},e.prototype.parseSetterMethod=function(){var e=this.createNode(),t=this.context.allowYield;this.context.allowYield=!0;var i=this.parseFormalParameters();1!==i.params.length?this.tolerateError(n.Messages.BadSetterArity):i.params[0]instanceof a.RestElement&&this.tolerateError(n.Messages.BadSetterRestParameter);var s=this.parsePropertyMethod(i);return this.context.allowYield=t,this.finalize(e,new a.FunctionExpression(null,i.params,s,!1))},e.prototype.parseGeneratorMethod=function(){var e=this.createNode(),t=this.context.allowYield;this.context.allowYield=!0;var i=this.parseFormalParameters();this.context.allowYield=!1;var s=this.parsePropertyMethod(i);return this.context.allowYield=t,this.finalize(e,new a.FunctionExpression(null,i.params,s,!0))},e.prototype.isStartOfExpression=function(){var e=!0,t=this.lookahead.value;switch(this.lookahead.type){case 7:e=\"[\"===t||\"(\"===t||\"{\"===t||\"+\"===t||\"-\"===t||\"!\"===t||\"~\"===t||\"++\"===t||\"--\"===t||\"/\"===t||\"/=\"===t;break;case 4:e=\"class\"===t||\"delete\"===t||\"function\"===t||\"let\"===t||\"new\"===t||\"super\"===t||\"this\"===t||\"typeof\"===t||\"void\"===t||\"yield\"===t}return e},e.prototype.parseYieldExpression=function(){var e=this.createNode();this.expectKeyword(\"yield\");var t=null,i=!1;if(!this.hasLineTerminator){var s=this.context.allowYield;this.context.allowYield=!1,(i=this.match(\"*\"))?(this.nextToken(),t=this.parseAssignmentExpression()):this.isStartOfExpression()&&(t=this.parseAssignmentExpression()),this.context.allowYield=s}return this.finalize(e,new a.YieldExpression(t,i))},e.prototype.parseClassElement=function(e){var t=this.lookahead,i=this.createNode(),s=\"\",r=null,o=null,u=!1,h=!1,c=!1,l=!1;if(this.match(\"*\"))this.nextToken();else if(u=this.match(\"[\"),\"static\"===(r=this.parseObjectPropertyKey()).name&&(this.qualifiedPropertyName(this.lookahead)||this.match(\"*\"))&&(t=this.lookahead,c=!0,u=this.match(\"[\"),this.match(\"*\")?this.nextToken():r=this.parseObjectPropertyKey()),3===t.type&&!this.hasLineTerminator&&\"async\"===t.value){var p=this.lookahead.value;\":\"!==p&&\"(\"!==p&&\"*\"!==p&&(l=!0,t=this.lookahead,r=this.parseObjectPropertyKey(),3===t.type&&\"constructor\"===t.value&&this.tolerateUnexpectedToken(t,n.Messages.ConstructorIsAsync))}var d=this.qualifiedPropertyName(this.lookahead);return 3===t.type?\"get\"===t.value&&d?(s=\"get\",u=this.match(\"[\"),r=this.parseObjectPropertyKey(),this.context.allowYield=!1,o=this.parseGetterMethod()):\"set\"===t.value&&d&&(s=\"set\",u=this.match(\"[\"),r=this.parseObjectPropertyKey(),o=this.parseSetterMethod()):7===t.type&&\"*\"===t.value&&d&&(s=\"init\",u=this.match(\"[\"),r=this.parseObjectPropertyKey(),o=this.parseGeneratorMethod(),h=!0),!s&&r&&this.match(\"(\")&&(s=\"init\",o=l?this.parsePropertyMethodAsyncFunction():this.parsePropertyMethodFunction(),h=!0),s||this.throwUnexpectedToken(this.lookahead),\"init\"===s&&(s=\"method\"),u||(c&&this.isPropertyKey(r,\"prototype\")&&this.throwUnexpectedToken(t,n.Messages.StaticPrototype),!c&&this.isPropertyKey(r,\"constructor\")&&((\"method\"!==s||!h||o&&o.generator)&&this.throwUnexpectedToken(t,n.Messages.ConstructorSpecialMethod),e.value?this.throwUnexpectedToken(t,n.Messages.DuplicateConstructor):e.value=!0,s=\"constructor\")),this.finalize(i,new a.MethodDefinition(r,u,o,s,c))},e.prototype.parseClassElementList=function(){var e=[],t={value:!1};for(this.expect(\"{\");!this.match(\"}\");)this.match(\";\")?this.nextToken():e.push(this.parseClassElement(t));return this.expect(\"}\"),e},e.prototype.parseClassBody=function(){var e=this.createNode(),t=this.parseClassElementList();return this.finalize(e,new a.ClassBody(t))},e.prototype.parseClassDeclaration=function(e){var t=this.createNode(),i=this.context.strict;this.context.strict=!0,this.expectKeyword(\"class\");var s=e&&3!==this.lookahead.type?null:this.parseVariableIdentifier(),r=null;this.matchKeyword(\"extends\")&&(this.nextToken(),r=this.isolateCoverGrammar(this.parseLeftHandSideExpressionAllowCall));var n=this.parseClassBody();return this.context.strict=i,this.finalize(t,new a.ClassDeclaration(s,r,n))},e.prototype.parseClassExpression=function(){var e=this.createNode(),t=this.context.strict;this.context.strict=!0,this.expectKeyword(\"class\");var i=3===this.lookahead.type?this.parseVariableIdentifier():null,s=null;this.matchKeyword(\"extends\")&&(this.nextToken(),s=this.isolateCoverGrammar(this.parseLeftHandSideExpressionAllowCall));var r=this.parseClassBody();return this.context.strict=t,this.finalize(e,new a.ClassExpression(i,s,r))},e.prototype.parseModule=function(){this.context.strict=!0,this.context.isModule=!0,this.scanner.isModule=!0;for(var e=this.createNode(),t=this.parseDirectivePrologues();2!==this.lookahead.type;)t.push(this.parseStatementListItem());return this.finalize(e,new a.Module(t))},e.prototype.parseScript=function(){for(var e=this.createNode(),t=this.parseDirectivePrologues();2!==this.lookahead.type;)t.push(this.parseStatementListItem());return this.finalize(e,new a.Script(t))},e.prototype.parseModuleSpecifier=function(){var e=this.createNode();8!==this.lookahead.type&&this.throwError(n.Messages.InvalidModuleSpecifier);var t=this.nextToken(),i=this.getTokenRaw(t);return this.finalize(e,new a.Literal(t.value,i))},e.prototype.parseImportSpecifier=function(){var e,t,i=this.createNode();return 3===this.lookahead.type?(t=e=this.parseVariableIdentifier(),this.matchContextualKeyword(\"as\")&&(this.nextToken(),t=this.parseVariableIdentifier())):(t=e=this.parseIdentifierName(),this.matchContextualKeyword(\"as\")?(this.nextToken(),t=this.parseVariableIdentifier()):this.throwUnexpectedToken(this.nextToken())),this.finalize(i,new a.ImportSpecifier(t,e))},e.prototype.parseNamedImports=function(){this.expect(\"{\");for(var e=[];!this.match(\"}\");)e.push(this.parseImportSpecifier()),this.match(\"}\")||this.expect(\",\");return this.expect(\"}\"),e},e.prototype.parseImportDefaultSpecifier=function(){var e=this.createNode(),t=this.parseIdentifierName();return this.finalize(e,new a.ImportDefaultSpecifier(t))},e.prototype.parseImportNamespaceSpecifier=function(){var e=this.createNode();this.expect(\"*\"),this.matchContextualKeyword(\"as\")||this.throwError(n.Messages.NoAsAfterImportNamespace),this.nextToken();var t=this.parseIdentifierName();return this.finalize(e,new a.ImportNamespaceSpecifier(t))},e.prototype.parseImportDeclaration=function(){this.context.inFunctionBody&&this.throwError(n.Messages.IllegalImportDeclaration);var e,t=this.createNode();this.expectKeyword(\"import\");var i=[];if(8===this.lookahead.type)e=this.parseModuleSpecifier();else{if(this.match(\"{\")?i=i.concat(this.parseNamedImports()):this.match(\"*\")?i.push(this.parseImportNamespaceSpecifier()):this.isIdentifierName(this.lookahead)&&!this.matchKeyword(\"default\")?(i.push(this.parseImportDefaultSpecifier()),this.match(\",\")&&(this.nextToken(),this.match(\"*\")?i.push(this.parseImportNamespaceSpecifier()):this.match(\"{\")?i=i.concat(this.parseNamedImports()):this.throwUnexpectedToken(this.lookahead))):this.throwUnexpectedToken(this.nextToken()),!this.matchContextualKeyword(\"from\")){var s=this.lookahead.value?n.Messages.UnexpectedToken:n.Messages.MissingFromClause;this.throwError(s,this.lookahead.value)}this.nextToken(),e=this.parseModuleSpecifier()}return this.consumeSemicolon(),this.finalize(t,new a.ImportDeclaration(i,e))},e.prototype.parseExportSpecifier=function(){var e=this.createNode(),t=this.parseIdentifierName(),i=t;return this.matchContextualKeyword(\"as\")&&(this.nextToken(),i=this.parseIdentifierName()),this.finalize(e,new a.ExportSpecifier(t,i))},e.prototype.parseExportDeclaration=function(){this.context.inFunctionBody&&this.throwError(n.Messages.IllegalExportDeclaration);var e,t=this.createNode();if(this.expectKeyword(\"export\"),this.matchKeyword(\"default\"))if(this.nextToken(),this.matchKeyword(\"function\")){var i=this.parseFunctionDeclaration(!0);e=this.finalize(t,new a.ExportDefaultDeclaration(i))}else this.matchKeyword(\"class\")?(i=this.parseClassDeclaration(!0),e=this.finalize(t,new a.ExportDefaultDeclaration(i))):this.matchContextualKeyword(\"async\")?(i=this.matchAsyncFunction()?this.parseFunctionDeclaration(!0):this.parseAssignmentExpression(),e=this.finalize(t,new a.ExportDefaultDeclaration(i))):(this.matchContextualKeyword(\"from\")&&this.throwError(n.Messages.UnexpectedToken,this.lookahead.value),i=this.match(\"{\")?this.parseObjectInitializer():this.match(\"[\")?this.parseArrayInitializer():this.parseAssignmentExpression(),this.consumeSemicolon(),e=this.finalize(t,new a.ExportDefaultDeclaration(i)));else if(this.match(\"*\")){if(this.nextToken(),!this.matchContextualKeyword(\"from\")){var s=this.lookahead.value?n.Messages.UnexpectedToken:n.Messages.MissingFromClause;this.throwError(s,this.lookahead.value)}this.nextToken();var r=this.parseModuleSpecifier();this.consumeSemicolon(),e=this.finalize(t,new a.ExportAllDeclaration(r))}else if(4===this.lookahead.type){switch(i=void 0,this.lookahead.value){case\"let\":case\"const\":i=this.parseLexicalDeclaration({inFor:!1});break;case\"var\":case\"class\":case\"function\":i=this.parseStatementListItem();break;default:this.throwUnexpectedToken(this.lookahead)}e=this.finalize(t,new a.ExportNamedDeclaration(i,[],null))}else if(this.matchAsyncFunction())i=this.parseFunctionDeclaration(),e=this.finalize(t,new a.ExportNamedDeclaration(i,[],null));else{var o=[],u=null,h=!1;for(this.expect(\"{\");!this.match(\"}\");)h=h||this.matchKeyword(\"default\"),o.push(this.parseExportSpecifier()),this.match(\"}\")||this.expect(\",\");this.expect(\"}\"),this.matchContextualKeyword(\"from\")?(this.nextToken(),u=this.parseModuleSpecifier(),this.consumeSemicolon()):h?(s=this.lookahead.value?n.Messages.UnexpectedToken:n.Messages.MissingFromClause,this.throwError(s,this.lookahead.value)):this.consumeSemicolon(),e=this.finalize(t,new a.ExportNamedDeclaration(null,o,u))}return e},e}();t.Parser=l},function(e,t){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.assert=function(e,t){if(!e)throw new Error(\"ASSERT: \"+t)}},function(e,t){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var i=function(){function e(){this.errors=[],this.tolerant=!1}return e.prototype.recordError=function(e){this.errors.push(e)},e.prototype.tolerate=function(e){if(!this.tolerant)throw e;this.recordError(e)},e.prototype.constructError=function(e,t){var i=new Error(e);try{throw i}catch(s){Object.create&&Object.defineProperty&&(i=Object.create(s),Object.defineProperty(i,\"column\",{value:t}))}return i},e.prototype.createError=function(e,t,i,s){var r=\"Line \"+t+\": \"+s,n=this.constructError(r,i);return n.index=e,n.lineNumber=t,n.description=s,n},e.prototype.throwError=function(e,t,i,s){throw this.createError(e,t,i,s)},e.prototype.tolerateError=function(e,t,i,s){var r=this.createError(e,t,i,s);if(!this.tolerant)throw r;this.recordError(r)},e}();t.ErrorHandler=i},function(e,t){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.Messages={BadGetterArity:\"Getter must not have any formal parameters\",BadSetterArity:\"Setter must have exactly one formal parameter\",BadSetterRestParameter:\"Setter function argument must not be a rest parameter\",ConstructorIsAsync:\"Class constructor may not be an async method\",ConstructorSpecialMethod:\"Class constructor may not be an accessor\",DeclarationMissingInitializer:\"Missing initializer in %0 declaration\",DefaultRestParameter:\"Unexpected token =\",DuplicateBinding:\"Duplicate binding %0\",DuplicateConstructor:\"A class may only have one constructor\",DuplicateProtoProperty:\"Duplicate __proto__ fields are not allowed in object literals\",ForInOfLoopInitializer:\"%0 loop variable declaration may not have an initializer\",GeneratorInLegacyContext:\"Generator declarations are not allowed in legacy contexts\",IllegalBreak:\"Illegal break statement\",IllegalContinue:\"Illegal continue statement\",IllegalExportDeclaration:\"Unexpected token\",IllegalImportDeclaration:\"Unexpected token\",IllegalLanguageModeDirective:\"Illegal 'use strict' directive in function with non-simple parameter list\",IllegalReturn:\"Illegal return statement\",InvalidEscapedReservedWord:\"Keyword must not contain escaped characters\",InvalidHexEscapeSequence:\"Invalid hexadecimal escape sequence\",InvalidLHSInAssignment:\"Invalid left-hand side in assignment\",InvalidLHSInForIn:\"Invalid left-hand side in for-in\",InvalidLHSInForLoop:\"Invalid left-hand side in for-loop\",InvalidModuleSpecifier:\"Unexpected token\",InvalidRegExp:\"Invalid regular expression\",LetInLexicalBinding:\"let is disallowed as a lexically bound name\",MissingFromClause:\"Unexpected token\",MultipleDefaultsInSwitch:\"More than one default clause in switch statement\",NewlineAfterThrow:\"Illegal newline after throw\",NoAsAfterImportNamespace:\"Unexpected token\",NoCatchOrFinally:\"Missing catch or finally after try\",ParameterAfterRestParameter:\"Rest parameter must be last formal parameter\",Redeclaration:\"%0 '%1' has already been declared\",StaticPrototype:\"Classes may not have static property named prototype\",StrictCatchVariable:\"Catch variable may not be eval or arguments in strict mode\",StrictDelete:\"Delete of an unqualified identifier in strict mode.\",StrictFunction:\"In strict mode code, functions can only be declared at top level or inside a block\",StrictFunctionName:\"Function name may not be eval or arguments in strict mode\",StrictLHSAssignment:\"Assignment to eval or arguments is not allowed in strict mode\",StrictLHSPostfix:\"Postfix increment/decrement may not have eval or arguments operand in strict mode\",StrictLHSPrefix:\"Prefix increment/decrement may not have eval or arguments operand in strict mode\",StrictModeWith:\"Strict mode code may not include a with statement\",StrictOctalLiteral:\"Octal literals are not allowed in strict mode.\",StrictParamDupe:\"Strict mode function may not have duplicate parameter names\",StrictParamName:\"Parameter name eval or arguments is not allowed in strict mode\",StrictReservedWord:\"Use of future reserved word in strict mode\",StrictVarName:\"Variable name may not be eval or arguments in strict mode\",TemplateOctalLiteral:\"Octal literals are not allowed in template strings.\",UnexpectedEOS:\"Unexpected end of input\",UnexpectedIdentifier:\"Unexpected identifier\",UnexpectedNumber:\"Unexpected number\",UnexpectedReserved:\"Unexpected reserved word\",UnexpectedString:\"Unexpected string\",UnexpectedTemplate:\"Unexpected quasi %0\",UnexpectedToken:\"Unexpected token %0\",UnexpectedTokenIllegal:\"Unexpected token ILLEGAL\",UnknownLabel:\"Undefined label '%0'\",UnterminatedRegExp:\"Invalid regular expression: missing /\"}},function(e,t,i){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var s=i(9),r=i(4),n=i(11);function a(e){return\"0123456789abcdef\".indexOf(e.toLowerCase())}function o(e){return\"01234567\".indexOf(e)}var u=function(){function e(e,t){this.source=e,this.errorHandler=t,this.trackComment=!1,this.isModule=!1,this.length=e.length,this.index=0,this.lineNumber=e.length>0?1:0,this.lineStart=0,this.curlyStack=[]}return e.prototype.saveState=function(){return{index:this.index,lineNumber:this.lineNumber,lineStart:this.lineStart}},e.prototype.restoreState=function(e){this.index=e.index,this.lineNumber=e.lineNumber,this.lineStart=e.lineStart},e.prototype.eof=function(){return this.index>=this.length},e.prototype.throwUnexpectedToken=function(e){return void 0===e&&(e=n.Messages.UnexpectedTokenIllegal),this.errorHandler.throwError(this.index,this.lineNumber,this.index-this.lineStart+1,e)},e.prototype.tolerateUnexpectedToken=function(e){void 0===e&&(e=n.Messages.UnexpectedTokenIllegal),this.errorHandler.tolerateError(this.index,this.lineNumber,this.index-this.lineStart+1,e)},e.prototype.skipSingleLineComment=function(e){var t,i,s=[];for(this.trackComment&&(s=[],t=this.index-e,i={start:{line:this.lineNumber,column:this.index-this.lineStart-e},end:{}});!this.eof();){var n=this.source.charCodeAt(this.index);if(++this.index,r.Character.isLineTerminator(n)){if(this.trackComment){i.end={line:this.lineNumber,column:this.index-this.lineStart-1};var a={multiLine:!1,slice:[t+e,this.index-1],range:[t,this.index-1],loc:i};s.push(a)}return 13===n&&10===this.source.charCodeAt(this.index)&&++this.index,++this.lineNumber,this.lineStart=this.index,s}}return this.trackComment&&(i.end={line:this.lineNumber,column:this.index-this.lineStart},a={multiLine:!1,slice:[t+e,this.index],range:[t,this.index],loc:i},s.push(a)),s},e.prototype.skipMultiLineComment=function(){var e,t,i=[];for(this.trackComment&&(i=[],e=this.index-2,t={start:{line:this.lineNumber,column:this.index-this.lineStart-2},end:{}});!this.eof();){var s=this.source.charCodeAt(this.index);if(r.Character.isLineTerminator(s))13===s&&10===this.source.charCodeAt(this.index+1)&&++this.index,++this.lineNumber,++this.index,this.lineStart=this.index;else if(42===s){if(47===this.source.charCodeAt(this.index+1)){if(this.index+=2,this.trackComment){t.end={line:this.lineNumber,column:this.index-this.lineStart};var n={multiLine:!0,slice:[e+2,this.index-2],range:[e,this.index],loc:t};i.push(n)}return i}++this.index}else++this.index}return this.trackComment&&(t.end={line:this.lineNumber,column:this.index-this.lineStart},n={multiLine:!0,slice:[e+2,this.index],range:[e,this.index],loc:t},i.push(n)),this.tolerateUnexpectedToken(),i},e.prototype.scanComments=function(){var e;this.trackComment&&(e=[]);for(var t=0===this.index;!this.eof();){var i=this.source.charCodeAt(this.index);if(r.Character.isWhiteSpace(i))++this.index;else if(r.Character.isLineTerminator(i))++this.index,13===i&&10===this.source.charCodeAt(this.index)&&++this.index,++this.lineNumber,this.lineStart=this.index,t=!0;else if(47===i)if(47===(i=this.source.charCodeAt(this.index+1))){this.index+=2;var s=this.skipSingleLineComment(2);this.trackComment&&(e=e.concat(s)),t=!0}else{if(42!==i)break;this.index+=2,s=this.skipMultiLineComment(),this.trackComment&&(e=e.concat(s))}else if(t&&45===i){if(45!==this.source.charCodeAt(this.index+1)||62!==this.source.charCodeAt(this.index+2))break;this.index+=3,s=this.skipSingleLineComment(3),this.trackComment&&(e=e.concat(s))}else{if(60!==i||this.isModule)break;if(\"!--\"!==this.source.slice(this.index+1,this.index+4))break;this.index+=4,s=this.skipSingleLineComment(4),this.trackComment&&(e=e.concat(s))}}return e},e.prototype.isFutureReservedWord=function(e){switch(e){case\"enum\":case\"export\":case\"import\":case\"super\":return!0;default:return!1}},e.prototype.isStrictModeReservedWord=function(e){switch(e){case\"implements\":case\"interface\":case\"package\":case\"private\":case\"protected\":case\"public\":case\"static\":case\"yield\":case\"let\":return!0;default:return!1}},e.prototype.isRestrictedWord=function(e){return\"eval\"===e||\"arguments\"===e},e.prototype.isKeyword=function(e){switch(e.length){case 2:return\"if\"===e||\"in\"===e||\"do\"===e;case 3:return\"var\"===e||\"for\"===e||\"new\"===e||\"try\"===e||\"let\"===e;case 4:return\"this\"===e||\"else\"===e||\"case\"===e||\"void\"===e||\"with\"===e||\"enum\"===e;case 5:return\"while\"===e||\"break\"===e||\"catch\"===e||\"throw\"===e||\"const\"===e||\"yield\"===e||\"class\"===e||\"super\"===e;case 6:return\"return\"===e||\"typeof\"===e||\"delete\"===e||\"switch\"===e||\"export\"===e||\"import\"===e;case 7:return\"default\"===e||\"finally\"===e||\"extends\"===e;case 8:return\"function\"===e||\"continue\"===e||\"debugger\"===e;case 10:return\"instanceof\"===e;default:return!1}},e.prototype.codePointAt=function(e){var t=this.source.charCodeAt(e);if(t>=55296&&t<=56319){var i=this.source.charCodeAt(e+1);i>=56320&&i<=57343&&(t=1024*(t-55296)+i-56320+65536)}return t},e.prototype.scanHexEscape=function(e){for(var t=\"u\"===e?4:2,i=0,s=0;s<t;++s){if(this.eof()||!r.Character.isHexDigit(this.source.charCodeAt(this.index)))return null;i=16*i+a(this.source[this.index++])}return String.fromCharCode(i)},e.prototype.scanUnicodeCodePointEscape=function(){var e=this.source[this.index],t=0;for(\"}\"===e&&this.throwUnexpectedToken();!this.eof()&&(e=this.source[this.index++],r.Character.isHexDigit(e.charCodeAt(0)));)t=16*t+a(e);return(t>1114111||\"}\"!==e)&&this.throwUnexpectedToken(),r.Character.fromCodePoint(t)},e.prototype.getIdentifier=function(){for(var e=this.index++;!this.eof();){var t=this.source.charCodeAt(this.index);if(92===t)return this.index=e,this.getComplexIdentifier();if(t>=55296&&t<57343)return this.index=e,this.getComplexIdentifier();if(!r.Character.isIdentifierPart(t))break;++this.index}return this.source.slice(e,this.index)},e.prototype.getComplexIdentifier=function(){var e,t=this.codePointAt(this.index),i=r.Character.fromCodePoint(t);for(this.index+=i.length,92===t&&(117!==this.source.charCodeAt(this.index)&&this.throwUnexpectedToken(),++this.index,\"{\"===this.source[this.index]?(++this.index,e=this.scanUnicodeCodePointEscape()):null!==(e=this.scanHexEscape(\"u\"))&&\"\\\\\"!==e&&r.Character.isIdentifierStart(e.charCodeAt(0))||this.throwUnexpectedToken(),i=e);!this.eof()&&(t=this.codePointAt(this.index),r.Character.isIdentifierPart(t));)i+=e=r.Character.fromCodePoint(t),this.index+=e.length,92===t&&(i=i.substr(0,i.length-1),117!==this.source.charCodeAt(this.index)&&this.throwUnexpectedToken(),++this.index,\"{\"===this.source[this.index]?(++this.index,e=this.scanUnicodeCodePointEscape()):null!==(e=this.scanHexEscape(\"u\"))&&\"\\\\\"!==e&&r.Character.isIdentifierPart(e.charCodeAt(0))||this.throwUnexpectedToken(),i+=e);return i},e.prototype.octalToDecimal=function(e){var t=\"0\"!==e,i=o(e);return!this.eof()&&r.Character.isOctalDigit(this.source.charCodeAt(this.index))&&(t=!0,i=8*i+o(this.source[this.index++]),\"0123\".indexOf(e)>=0&&!this.eof()&&r.Character.isOctalDigit(this.source.charCodeAt(this.index))&&(i=8*i+o(this.source[this.index++]))),{code:i,octal:t}},e.prototype.scanIdentifier=function(){var e,t=this.index,i=92===this.source.charCodeAt(t)?this.getComplexIdentifier():this.getIdentifier();if(3!==(e=1===i.length?3:this.isKeyword(i)?4:\"null\"===i?5:\"true\"===i||\"false\"===i?1:3)&&t+i.length!==this.index){var s=this.index;this.index=t,this.tolerateUnexpectedToken(n.Messages.InvalidEscapedReservedWord),this.index=s}return{type:e,value:i,lineNumber:this.lineNumber,lineStart:this.lineStart,start:t,end:this.index}},e.prototype.scanPunctuator=function(){var e=this.index,t=this.source[this.index];switch(t){case\"(\":case\"{\":\"{\"===t&&this.curlyStack.push(\"{\"),++this.index;break;case\".\":++this.index,\".\"===this.source[this.index]&&\".\"===this.source[this.index+1]&&(this.index+=2,t=\"...\");break;case\"}\":++this.index,this.curlyStack.pop();break;case\")\":case\";\":case\",\":case\"[\":case\"]\":case\":\":case\"?\":case\"~\":++this.index;break;default:\">>>=\"===(t=this.source.substr(this.index,4))?this.index+=4:\"===\"===(t=t.substr(0,3))||\"!==\"===t||\">>>\"===t||\"<<=\"===t||\">>=\"===t||\"**=\"===t?this.index+=3:\"&&\"===(t=t.substr(0,2))||\"||\"===t||\"==\"===t||\"!=\"===t||\"+=\"===t||\"-=\"===t||\"*=\"===t||\"/=\"===t||\"++\"===t||\"--\"===t||\"<<\"===t||\">>\"===t||\"&=\"===t||\"|=\"===t||\"^=\"===t||\"%=\"===t||\"<=\"===t||\">=\"===t||\"=>\"===t||\"**\"===t?this.index+=2:(t=this.source[this.index],\"<>=!+-*%&|^/\".indexOf(t)>=0&&++this.index)}return this.index===e&&this.throwUnexpectedToken(),{type:7,value:t,lineNumber:this.lineNumber,lineStart:this.lineStart,start:e,end:this.index}},e.prototype.scanHexLiteral=function(e){for(var t=\"\";!this.eof()&&r.Character.isHexDigit(this.source.charCodeAt(this.index));)t+=this.source[this.index++];return 0===t.length&&this.throwUnexpectedToken(),r.Character.isIdentifierStart(this.source.charCodeAt(this.index))&&this.throwUnexpectedToken(),{type:6,value:parseInt(\"0x\"+t,16),lineNumber:this.lineNumber,lineStart:this.lineStart,start:e,end:this.index}},e.prototype.scanBinaryLiteral=function(e){for(var t,i=\"\";!this.eof()&&(\"0\"===(t=this.source[this.index])||\"1\"===t);)i+=this.source[this.index++];return 0===i.length&&this.throwUnexpectedToken(),this.eof()||(t=this.source.charCodeAt(this.index),(r.Character.isIdentifierStart(t)||r.Character.isDecimalDigit(t))&&this.throwUnexpectedToken()),{type:6,value:parseInt(i,2),lineNumber:this.lineNumber,lineStart:this.lineStart,start:e,end:this.index}},e.prototype.scanOctalLiteral=function(e,t){var i=\"\",s=!1;for(r.Character.isOctalDigit(e.charCodeAt(0))?(s=!0,i=\"0\"+this.source[this.index++]):++this.index;!this.eof()&&r.Character.isOctalDigit(this.source.charCodeAt(this.index));)i+=this.source[this.index++];return s||0!==i.length||this.throwUnexpectedToken(),(r.Character.isIdentifierStart(this.source.charCodeAt(this.index))||r.Character.isDecimalDigit(this.source.charCodeAt(this.index)))&&this.throwUnexpectedToken(),{type:6,value:parseInt(i,8),octal:s,lineNumber:this.lineNumber,lineStart:this.lineStart,start:t,end:this.index}},e.prototype.isImplicitOctalLiteral=function(){for(var e=this.index+1;e<this.length;++e){var t=this.source[e];if(\"8\"===t||\"9\"===t)return!1;if(!r.Character.isOctalDigit(t.charCodeAt(0)))return!0}return!0},e.prototype.scanNumericLiteral=function(){var e=this.index,t=this.source[e];s.assert(r.Character.isDecimalDigit(t.charCodeAt(0))||\".\"===t,\"Numeric literal must start with a decimal digit or a decimal point\");var i=\"\";if(\".\"!==t){if(i=this.source[this.index++],t=this.source[this.index],\"0\"===i){if(\"x\"===t||\"X\"===t)return++this.index,this.scanHexLiteral(e);if(\"b\"===t||\"B\"===t)return++this.index,this.scanBinaryLiteral(e);if(\"o\"===t||\"O\"===t)return this.scanOctalLiteral(t,e);if(t&&r.Character.isOctalDigit(t.charCodeAt(0))&&this.isImplicitOctalLiteral())return this.scanOctalLiteral(t,e)}for(;r.Character.isDecimalDigit(this.source.charCodeAt(this.index));)i+=this.source[this.index++];t=this.source[this.index]}if(\".\"===t){for(i+=this.source[this.index++];r.Character.isDecimalDigit(this.source.charCodeAt(this.index));)i+=this.source[this.index++];t=this.source[this.index]}if(\"e\"===t||\"E\"===t)if(i+=this.source[this.index++],\"+\"!==(t=this.source[this.index])&&\"-\"!==t||(i+=this.source[this.index++]),r.Character.isDecimalDigit(this.source.charCodeAt(this.index)))for(;r.Character.isDecimalDigit(this.source.charCodeAt(this.index));)i+=this.source[this.index++];else this.throwUnexpectedToken();return r.Character.isIdentifierStart(this.source.charCodeAt(this.index))&&this.throwUnexpectedToken(),{type:6,value:parseFloat(i),lineNumber:this.lineNumber,lineStart:this.lineStart,start:e,end:this.index}},e.prototype.scanStringLiteral=function(){var e=this.index,t=this.source[e];s.assert(\"'\"===t||'\"'===t,\"String literal must starts with a quote\"),++this.index;for(var i=!1,a=\"\";!this.eof();){var o=this.source[this.index++];if(o===t){t=\"\";break}if(\"\\\\\"===o)if((o=this.source[this.index++])&&r.Character.isLineTerminator(o.charCodeAt(0)))++this.lineNumber,\"\\r\"===o&&\"\\n\"===this.source[this.index]&&++this.index,this.lineStart=this.index;else switch(o){case\"u\":if(\"{\"===this.source[this.index])++this.index,a+=this.scanUnicodeCodePointEscape();else{var u=this.scanHexEscape(o);null===u&&this.throwUnexpectedToken(),a+=u}break;case\"x\":var h=this.scanHexEscape(o);null===h&&this.throwUnexpectedToken(n.Messages.InvalidHexEscapeSequence),a+=h;break;case\"n\":a+=\"\\n\";break;case\"r\":a+=\"\\r\";break;case\"t\":a+=\"\\t\";break;case\"b\":a+=\"\\b\";break;case\"f\":a+=\"\\f\";break;case\"v\":a+=\"\\v\";break;case\"8\":case\"9\":a+=o,this.tolerateUnexpectedToken();break;default:if(o&&r.Character.isOctalDigit(o.charCodeAt(0))){var c=this.octalToDecimal(o);i=c.octal||i,a+=String.fromCharCode(c.code)}else a+=o}else{if(r.Character.isLineTerminator(o.charCodeAt(0)))break;a+=o}}return\"\"!==t&&(this.index=e,this.throwUnexpectedToken()),{type:8,value:a,octal:i,lineNumber:this.lineNumber,lineStart:this.lineStart,start:e,end:this.index}},e.prototype.scanTemplate=function(){var e=\"\",t=!1,i=this.index,s=\"`\"===this.source[i],a=!1,o=2;for(++this.index;!this.eof();){var u=this.source[this.index++];if(\"`\"===u){o=1,a=!0,t=!0;break}if(\"$\"===u){if(\"{\"===this.source[this.index]){this.curlyStack.push(\"${\"),++this.index,t=!0;break}e+=u}else if(\"\\\\\"===u)if(u=this.source[this.index++],r.Character.isLineTerminator(u.charCodeAt(0)))++this.lineNumber,\"\\r\"===u&&\"\\n\"===this.source[this.index]&&++this.index,this.lineStart=this.index;else switch(u){case\"n\":e+=\"\\n\";break;case\"r\":e+=\"\\r\";break;case\"t\":e+=\"\\t\";break;case\"u\":if(\"{\"===this.source[this.index])++this.index,e+=this.scanUnicodeCodePointEscape();else{var h=this.index,c=this.scanHexEscape(u);null!==c?e+=c:(this.index=h,e+=u)}break;case\"x\":var l=this.scanHexEscape(u);null===l&&this.throwUnexpectedToken(n.Messages.InvalidHexEscapeSequence),e+=l;break;case\"b\":e+=\"\\b\";break;case\"f\":e+=\"\\f\";break;case\"v\":e+=\"\\v\";break;default:\"0\"===u?(r.Character.isDecimalDigit(this.source.charCodeAt(this.index))&&this.throwUnexpectedToken(n.Messages.TemplateOctalLiteral),e+=\"\\0\"):r.Character.isOctalDigit(u.charCodeAt(0))?this.throwUnexpectedToken(n.Messages.TemplateOctalLiteral):e+=u}else r.Character.isLineTerminator(u.charCodeAt(0))?(++this.lineNumber,\"\\r\"===u&&\"\\n\"===this.source[this.index]&&++this.index,this.lineStart=this.index,e+=\"\\n\"):e+=u}return t||this.throwUnexpectedToken(),s||this.curlyStack.pop(),{type:10,value:this.source.slice(i+1,this.index-o),cooked:e,head:s,tail:a,lineNumber:this.lineNumber,lineStart:this.lineStart,start:i,end:this.index}},e.prototype.testRegExp=function(e,t){var i=e,s=this;t.indexOf(\"u\")>=0&&(i=i.replace(/\\\\u\\{([0-9a-fA-F]+)\\}|\\\\u([a-fA-F0-9]{4})/g,(function(e,t,i){var r=parseInt(t||i,16);return r>1114111&&s.throwUnexpectedToken(n.Messages.InvalidRegExp),r<=65535?String.fromCharCode(r):\"\\uffff\"})).replace(/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g,\"\\uffff\"));try{RegExp(i)}catch(r){this.throwUnexpectedToken(n.Messages.InvalidRegExp)}try{return new RegExp(e,t)}catch(a){return null}},e.prototype.scanRegExpBody=function(){var e=this.source[this.index];s.assert(\"/\"===e,\"Regular expression literal must start with a slash\");for(var t=this.source[this.index++],i=!1,a=!1;!this.eof();)if(t+=e=this.source[this.index++],\"\\\\\"===e)e=this.source[this.index++],r.Character.isLineTerminator(e.charCodeAt(0))&&this.throwUnexpectedToken(n.Messages.UnterminatedRegExp),t+=e;else if(r.Character.isLineTerminator(e.charCodeAt(0)))this.throwUnexpectedToken(n.Messages.UnterminatedRegExp);else if(i)\"]\"===e&&(i=!1);else{if(\"/\"===e){a=!0;break}\"[\"===e&&(i=!0)}return a||this.throwUnexpectedToken(n.Messages.UnterminatedRegExp),t.substr(1,t.length-2)},e.prototype.scanRegExpFlags=function(){for(var e=\"\";!this.eof();){var t=this.source[this.index];if(!r.Character.isIdentifierPart(t.charCodeAt(0)))break;if(++this.index,\"\\\\\"!==t||this.eof())e+=t;else if(\"u\"===(t=this.source[this.index])){++this.index;var i=this.index,s=this.scanHexEscape(\"u\");if(null!==s)for(e+=s;i<this.index;++i)this.source[i];else this.index=i,e+=\"u\";this.tolerateUnexpectedToken()}else this.tolerateUnexpectedToken()}return e},e.prototype.scanRegExp=function(){var e=this.index,t=this.scanRegExpBody(),i=this.scanRegExpFlags();return{type:9,value:\"\",pattern:t,flags:i,regex:this.testRegExp(t,i),lineNumber:this.lineNumber,lineStart:this.lineStart,start:e,end:this.index}},e.prototype.lex=function(){if(this.eof())return{type:2,value:\"\",lineNumber:this.lineNumber,lineStart:this.lineStart,start:this.index,end:this.index};var e=this.source.charCodeAt(this.index);return r.Character.isIdentifierStart(e)?this.scanIdentifier():40===e||41===e||59===e?this.scanPunctuator():39===e||34===e?this.scanStringLiteral():46===e?r.Character.isDecimalDigit(this.source.charCodeAt(this.index+1))?this.scanNumericLiteral():this.scanPunctuator():r.Character.isDecimalDigit(e)?this.scanNumericLiteral():96===e||125===e&&\"${\"===this.curlyStack[this.curlyStack.length-1]?this.scanTemplate():e>=55296&&e<57343&&r.Character.isIdentifierStart(this.codePointAt(this.index))?this.scanIdentifier():this.scanPunctuator()},e}();t.Scanner=u},function(e,t){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.TokenName={},t.TokenName[1]=\"Boolean\",t.TokenName[2]=\"<end>\",t.TokenName[3]=\"Identifier\",t.TokenName[4]=\"Keyword\",t.TokenName[5]=\"Null\",t.TokenName[6]=\"Numeric\",t.TokenName[7]=\"Punctuator\",t.TokenName[8]=\"String\",t.TokenName[9]=\"RegularExpression\",t.TokenName[10]=\"Template\"},function(e,t){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.XHTMLEntities={quot:'\"',amp:\"&\",apos:\"'\",gt:\">\",nbsp:\"\\xa0\",iexcl:\"\\xa1\",cent:\"\\xa2\",pound:\"\\xa3\",curren:\"\\xa4\",yen:\"\\xa5\",brvbar:\"\\xa6\",sect:\"\\xa7\",uml:\"\\xa8\",copy:\"\\xa9\",ordf:\"\\xaa\",laquo:\"\\xab\",not:\"\\xac\",shy:\"\\xad\",reg:\"\\xae\",macr:\"\\xaf\",deg:\"\\xb0\",plusmn:\"\\xb1\",sup2:\"\\xb2\",sup3:\"\\xb3\",acute:\"\\xb4\",micro:\"\\xb5\",para:\"\\xb6\",middot:\"\\xb7\",cedil:\"\\xb8\",sup1:\"\\xb9\",ordm:\"\\xba\",raquo:\"\\xbb\",frac14:\"\\xbc\",frac12:\"\\xbd\",frac34:\"\\xbe\",iquest:\"\\xbf\",Agrave:\"\\xc0\",Aacute:\"\\xc1\",Acirc:\"\\xc2\",Atilde:\"\\xc3\",Auml:\"\\xc4\",Aring:\"\\xc5\",AElig:\"\\xc6\",Ccedil:\"\\xc7\",Egrave:\"\\xc8\",Eacute:\"\\xc9\",Ecirc:\"\\xca\",Euml:\"\\xcb\",Igrave:\"\\xcc\",Iacute:\"\\xcd\",Icirc:\"\\xce\",Iuml:\"\\xcf\",ETH:\"\\xd0\",Ntilde:\"\\xd1\",Ograve:\"\\xd2\",Oacute:\"\\xd3\",Ocirc:\"\\xd4\",Otilde:\"\\xd5\",Ouml:\"\\xd6\",times:\"\\xd7\",Oslash:\"\\xd8\",Ugrave:\"\\xd9\",Uacute:\"\\xda\",Ucirc:\"\\xdb\",Uuml:\"\\xdc\",Yacute:\"\\xdd\",THORN:\"\\xde\",szlig:\"\\xdf\",agrave:\"\\xe0\",aacute:\"\\xe1\",acirc:\"\\xe2\",atilde:\"\\xe3\",auml:\"\\xe4\",aring:\"\\xe5\",aelig:\"\\xe6\",ccedil:\"\\xe7\",egrave:\"\\xe8\",eacute:\"\\xe9\",ecirc:\"\\xea\",euml:\"\\xeb\",igrave:\"\\xec\",iacute:\"\\xed\",icirc:\"\\xee\",iuml:\"\\xef\",eth:\"\\xf0\",ntilde:\"\\xf1\",ograve:\"\\xf2\",oacute:\"\\xf3\",ocirc:\"\\xf4\",otilde:\"\\xf5\",ouml:\"\\xf6\",divide:\"\\xf7\",oslash:\"\\xf8\",ugrave:\"\\xf9\",uacute:\"\\xfa\",ucirc:\"\\xfb\",uuml:\"\\xfc\",yacute:\"\\xfd\",thorn:\"\\xfe\",yuml:\"\\xff\",OElig:\"\\u0152\",oelig:\"\\u0153\",Scaron:\"\\u0160\",scaron:\"\\u0161\",Yuml:\"\\u0178\",fnof:\"\\u0192\",circ:\"\\u02c6\",tilde:\"\\u02dc\",Alpha:\"\\u0391\",Beta:\"\\u0392\",Gamma:\"\\u0393\",Delta:\"\\u0394\",Epsilon:\"\\u0395\",Zeta:\"\\u0396\",Eta:\"\\u0397\",Theta:\"\\u0398\",Iota:\"\\u0399\",Kappa:\"\\u039a\",Lambda:\"\\u039b\",Mu:\"\\u039c\",Nu:\"\\u039d\",Xi:\"\\u039e\",Omicron:\"\\u039f\",Pi:\"\\u03a0\",Rho:\"\\u03a1\",Sigma:\"\\u03a3\",Tau:\"\\u03a4\",Upsilon:\"\\u03a5\",Phi:\"\\u03a6\",Chi:\"\\u03a7\",Psi:\"\\u03a8\",Omega:\"\\u03a9\",alpha:\"\\u03b1\",beta:\"\\u03b2\",gamma:\"\\u03b3\",delta:\"\\u03b4\",epsilon:\"\\u03b5\",zeta:\"\\u03b6\",eta:\"\\u03b7\",theta:\"\\u03b8\",iota:\"\\u03b9\",kappa:\"\\u03ba\",lambda:\"\\u03bb\",mu:\"\\u03bc\",nu:\"\\u03bd\",xi:\"\\u03be\",omicron:\"\\u03bf\",pi:\"\\u03c0\",rho:\"\\u03c1\",sigmaf:\"\\u03c2\",sigma:\"\\u03c3\",tau:\"\\u03c4\",upsilon:\"\\u03c5\",phi:\"\\u03c6\",chi:\"\\u03c7\",psi:\"\\u03c8\",omega:\"\\u03c9\",thetasym:\"\\u03d1\",upsih:\"\\u03d2\",piv:\"\\u03d6\",ensp:\"\\u2002\",emsp:\"\\u2003\",thinsp:\"\\u2009\",zwnj:\"\\u200c\",zwj:\"\\u200d\",lrm:\"\\u200e\",rlm:\"\\u200f\",ndash:\"\\u2013\",mdash:\"\\u2014\",lsquo:\"\\u2018\",rsquo:\"\\u2019\",sbquo:\"\\u201a\",ldquo:\"\\u201c\",rdquo:\"\\u201d\",bdquo:\"\\u201e\",dagger:\"\\u2020\",Dagger:\"\\u2021\",bull:\"\\u2022\",hellip:\"\\u2026\",permil:\"\\u2030\",prime:\"\\u2032\",Prime:\"\\u2033\",lsaquo:\"\\u2039\",rsaquo:\"\\u203a\",oline:\"\\u203e\",frasl:\"\\u2044\",euro:\"\\u20ac\",image:\"\\u2111\",weierp:\"\\u2118\",real:\"\\u211c\",trade:\"\\u2122\",alefsym:\"\\u2135\",larr:\"\\u2190\",uarr:\"\\u2191\",rarr:\"\\u2192\",darr:\"\\u2193\",harr:\"\\u2194\",crarr:\"\\u21b5\",lArr:\"\\u21d0\",uArr:\"\\u21d1\",rArr:\"\\u21d2\",dArr:\"\\u21d3\",hArr:\"\\u21d4\",forall:\"\\u2200\",part:\"\\u2202\",exist:\"\\u2203\",empty:\"\\u2205\",nabla:\"\\u2207\",isin:\"\\u2208\",notin:\"\\u2209\",ni:\"\\u220b\",prod:\"\\u220f\",sum:\"\\u2211\",minus:\"\\u2212\",lowast:\"\\u2217\",radic:\"\\u221a\",prop:\"\\u221d\",infin:\"\\u221e\",ang:\"\\u2220\",and:\"\\u2227\",or:\"\\u2228\",cap:\"\\u2229\",cup:\"\\u222a\",int:\"\\u222b\",there4:\"\\u2234\",sim:\"\\u223c\",cong:\"\\u2245\",asymp:\"\\u2248\",ne:\"\\u2260\",equiv:\"\\u2261\",le:\"\\u2264\",ge:\"\\u2265\",sub:\"\\u2282\",sup:\"\\u2283\",nsub:\"\\u2284\",sube:\"\\u2286\",supe:\"\\u2287\",oplus:\"\\u2295\",otimes:\"\\u2297\",perp:\"\\u22a5\",sdot:\"\\u22c5\",lceil:\"\\u2308\",rceil:\"\\u2309\",lfloor:\"\\u230a\",rfloor:\"\\u230b\",loz:\"\\u25ca\",spades:\"\\u2660\",clubs:\"\\u2663\",hearts:\"\\u2665\",diams:\"\\u2666\",lang:\"\\u27e8\",rang:\"\\u27e9\"}},function(e,t,i){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var s=i(10),r=i(12),n=i(13),a=function(){function e(){this.values=[],this.curly=this.paren=-1}return e.prototype.beforeFunctionExpression=function(e){return[\"(\",\"{\",\"[\",\"in\",\"typeof\",\"instanceof\",\"new\",\"return\",\"case\",\"delete\",\"throw\",\"void\",\"=\",\"+=\",\"-=\",\"*=\",\"**=\",\"/=\",\"%=\",\"<<=\",\">>=\",\">>>=\",\"&=\",\"|=\",\"^=\",\",\",\"+\",\"-\",\"*\",\"**\",\"/\",\"%\",\"++\",\"--\",\"<<\",\">>\",\">>>\",\"&\",\"|\",\"^\",\"!\",\"~\",\"&&\",\"||\",\"?\",\":\",\"===\",\"==\",\">=\",\"<=\",\"<\",\">\",\"!=\",\"!==\"].indexOf(e)>=0},e.prototype.isRegexStart=function(){var e=this.values[this.values.length-1],t=null!==e;switch(e){case\"this\":case\"]\":t=!1;break;case\")\":var i=this.values[this.paren-1];t=\"if\"===i||\"while\"===i||\"for\"===i||\"with\"===i;break;case\"}\":if(t=!1,\"function\"===this.values[this.curly-3])t=!!(s=this.values[this.curly-4])&&!this.beforeFunctionExpression(s);else if(\"function\"===this.values[this.curly-4]){var s;t=!(s=this.values[this.curly-5])||!this.beforeFunctionExpression(s)}}return t},e.prototype.push=function(e){7===e.type||4===e.type?(\"{\"===e.value?this.curly=this.values.length:\"(\"===e.value&&(this.paren=this.values.length),this.values.push(e.value)):this.values.push(null)},e}(),o=function(){function e(e,t){this.errorHandler=new s.ErrorHandler,this.errorHandler.tolerant=!!t&&\"boolean\"===typeof t.tolerant&&t.tolerant,this.scanner=new r.Scanner(e,this.errorHandler),this.scanner.trackComment=!!t&&\"boolean\"===typeof t.comment&&t.comment,this.trackRange=!!t&&\"boolean\"===typeof t.range&&t.range,this.trackLoc=!!t&&\"boolean\"===typeof t.loc&&t.loc,this.buffer=[],this.reader=new a}return e.prototype.errors=function(){return this.errorHandler.errors},e.prototype.getNextToken=function(){if(0===this.buffer.length){var e=this.scanner.scanComments();if(this.scanner.trackComment)for(var t=0;t<e.length;++t){var i=e[t],s=this.scanner.source.slice(i.slice[0],i.slice[1]),r={type:i.multiLine?\"BlockComment\":\"LineComment\",value:s};this.trackRange&&(r.range=i.range),this.trackLoc&&(r.loc=i.loc),this.buffer.push(r)}if(!this.scanner.eof()){var a=void 0;this.trackLoc&&(a={start:{line:this.scanner.lineNumber,column:this.scanner.index-this.scanner.lineStart},end:{}});var o=\"/\"===this.scanner.source[this.scanner.index]&&this.reader.isRegexStart()?this.scanner.scanRegExp():this.scanner.lex();this.reader.push(o);var u={type:n.TokenName[o.type],value:this.scanner.source.slice(o.start,o.end)};if(this.trackRange&&(u.range=[o.start,o.end]),this.trackLoc&&(a.end={line:this.scanner.lineNumber,column:this.scanner.index-this.scanner.lineStart},u.loc=a),9===o.type){var h=o.pattern,c=o.flags;u.regex={pattern:h,flags:c}}this.buffer.push(u)}}return this.buffer.shift()},e}();t.Tokenizer=o}])},e.exports=s()}}]);","map":{"version":3,"sources":["static/chunks/ad943d25.a0b71a6e9dc25a64ae5b.js"],"names":["window","push","xvDq","module","exports","__webpack_require__","factory","modules","installedModules","moduleId","id","loaded","call","m","c","p","Object","defineProperty","value","comment_handler_1","jsx_parser_1","parser_1","tokenizer_1","parse","code","options","delegate","commentHandler","proxyDelegate","node","metadata","visit","parserDelegate","collectComment","comment","attachComment","CommentHandler","attach","parser","isModule","sourceType","jsx","JSXParser","Parser","ast","parseModule","parseScript","comments","config","tokens","tolerant","errors","errorHandler","parsingOptions","tokenize","tokenizer","Tokenizer","token","getNextToken","e","tolerate","syntax_1","Syntax","version","this","stack","leading","trailing","prototype","insertInnerComments","type","BlockStatement","body","length","innerComments","i","entry","end","offset","start","unshift","splice","findTrailingComments","trailingComments","entry_1","firstComment","range","findLeadingComments","target","leadingComments","pop","visitNode","Program","visitComment","loc","AssignmentExpression","AssignmentPattern","ArrayExpression","ArrayPattern","ArrowFunctionExpression","AwaitExpression","BinaryExpression","BreakStatement","CallExpression","CatchClause","ClassBody","ClassDeclaration","ClassExpression","ConditionalExpression","ContinueStatement","DoWhileStatement","DebuggerStatement","EmptyStatement","ExportAllDeclaration","ExportDefaultDeclaration","ExportNamedDeclaration","ExportSpecifier","ExpressionStatement","ForStatement","ForOfStatement","ForInStatement","FunctionDeclaration","FunctionExpression","Identifier","IfStatement","ImportDeclaration","ImportDefaultSpecifier","ImportNamespaceSpecifier","ImportSpecifier","Literal","LabeledStatement","LogicalExpression","MemberExpression","MetaProperty","MethodDefinition","NewExpression","ObjectExpression","ObjectPattern","Property","RestElement","ReturnStatement","SequenceExpression","SpreadElement","Super","SwitchCase","SwitchStatement","TaggedTemplateExpression","TemplateElement","TemplateLiteral","ThisExpression","ThrowStatement","TryStatement","UnaryExpression","UpdateExpression","VariableDeclaration","VariableDeclarator","WhileStatement","WithStatement","YieldExpression","__extends","extendStatics","setPrototypeOf","__proto__","Array","d","b","hasOwnProperty","__","constructor","create","character_1","JSXNode","jsx_syntax_1","Node","token_1","xhtml_entities_1","getQualifiedElementName","elementName","qualifiedName","JSXSyntax","JSXIdentifier","name","JSXNamespacedName","ns","namespace","JSXMemberExpression","expr","object","property","TokenName","_super","parsePrimaryExpression","match","parseJSXRoot","startJSX","scanner","index","startMarker","lineNumber","line","lineStart","column","finishJSX","nextToken","reenterJSX","expectJSX","createJSXNode","collectComments","createJSXChildNode","scanXHTMLEntity","quote","result","valid","terminated","numeric","hex","eof","ch","source","Character","isDecimalDigit","charCodeAt","isHexDigit","str","substr","String","fromCharCode","parseInt","XHTMLEntities","lexJSX","cp","n1","n2","isIdentifierStart","isIdentifierPart","slice","lex","nextJSXToken","lastMarker","convertToken","nextJSXText","text","isLineTerminator","peekJSXToken","state","saveState","scanComments","next","restoreState","throwUnexpectedToken","matchJSX","parseJSXIdentifier","finalize","parseJSXElementName","name_1","parseJSXAttributeName","attributeName","identifier","name_2","parseJSXStringLiteralAttribute","raw","getTokenRaw","parseJSXExpressionAttribute","tolerateError","expression","parseAssignmentExpression","JSXExpressionContainer","parseJSXAttributeValue","parseJSXElement","parseJSXNameValueAttribute","JSXAttribute","parseJSXSpreadAttribute","argument","JSXSpreadAttribute","parseJSXAttributes","attributes","attribute","parseJSXOpeningElement","selfClosing","JSXOpeningElement","parseJSXBoundaryElement","name_3","JSXClosingElement","parseJSXEmptyExpression","JSXEmptyExpression","parseJSXExpressionContainer","parseJSXChildren","children","child","JSXText","container","parseComplexJSXElement","el","concat","element","opening","JSXElement","closing","open_1","isStartOfExpression","Regex","NonAsciiIdentifierStart","NonAsciiIdentifierPart","fromCodePoint","isWhiteSpace","indexOf","test","isOctalDigit","openingElement","closingElement","elements","params","generator","async","operator","left","right","AsyncArrowFunctionExpression","AsyncFunctionDeclaration","AsyncFunctionExpression","logical","label","callee","args","arguments","param","superClass","ComputedMemberExpression","computed","consequent","alternate","Directive","directive","declaration","specifiers","local","exported","each","init","update","imported","meta","key","kind","isStatic","static","Module","properties","method","shorthand","RegexLiteral","pattern","flags","regex","Script","expressions","StaticMemberExpression","discriminant","cases","tag","quasi","tail","quasis","block","handler","finalizer","prefix","declarations","assert_1","error_handler_1","messages_1","scanner_1","ArrowParameterPlaceHolder","ErrorHandler","Scanner","trackComment","operatorPrecedence",")",";",",","=","]","||","&&","|","^","&","==","!=","===","!==","<",">","<=",">=","<<",">>",">>>","+","-","*","/","%","lookahead","hasLineTerminator","context","await","allowIn","allowStrictDirective","allowYield","firstCoverInitializedNameError","isAssignmentTarget","isBindingElement","inFunctionBody","inIteration","inSwitch","labelSet","strict","throwError","messageFormat","values","_i","msg","replace","whole","idx","assert","createError","unexpectedTokenError","message","Messages","UnexpectedToken","UnexpectedEOS","UnexpectedIdentifier","UnexpectedNumber","UnexpectedString","UnexpectedTemplate","isFutureReservedWord","UnexpectedReserved","isStrictModeReservedWord","StrictReservedWord","lastMarkerLineStart","tolerateUnexpectedToken","multiLine","t","nextRegexToken","scanRegExp","createNode","startNode","lastLineStart","marker","expect","expectCommaSeparator","expectKeyword","keyword","matchKeyword","matchContextualKeyword","matchAssign","op","isolateCoverGrammar","parseFunction","previousIsBindingElement","previousIsAssignmentTarget","previousFirstCoverInitializedNameError","inheritCoverGrammar","consumeSemicolon","matchAsyncFunction","parseFunctionExpression","octal","StrictOctalLiteral","parseTemplateLiteral","parseGroupExpression","parseArrayInitializer","parseObjectInitializer","parseIdentifierName","parseClassExpression","parseSpreadElement","arg","parsePropertyMethod","previousStrict","previousAllowStrictDirective","simple","parseFunctionSourceElements","firstRestricted","stricted","parsePropertyMethodFunction","previousAllowYield","parseFormalParameters","parsePropertyMethodAsyncFunction","previousAwait","parseObjectPropertyKey","isPropertyKey","parseObjectProperty","hasProto","isAsync","lookaheadPropertyKey","qualifiedPropertyName","parseGetterMethod","parseSetterMethod","parseGeneratorMethod","DuplicateProtoProperty","parseTemplateHead","head","cooked","parseTemplateElement","parseExpression","reinterpretExpressionAsPattern","startToken","parseRestElement","arrow","parameters","parseArguments","isIdentifierName","parseNewExpression","parseLeftHandSideExpression","parseAsyncArgument","parseAsyncArguments","parseLeftHandSideExpressionAllowCall","maybeAsync","previousAllowIn","asyncArrow","parseSuper","parseUpdateExpression","parseUnaryExpression","isRestrictedWord","StrictLHSPrefix","InvalidLHSInAssignment","StrictLHSPostfix","parseAwaitExpression","StrictDelete","parseExponentiationExpression","binaryPrecedence","parseBinaryExpression","prec","markers","precedences","parseConditionalExpression","checkPatternParam","validateParam","reinterpretAsCoverFormalsList","paramSet","StrictParamDupe","parseYieldExpression","list","StrictLHSAssignment","parseStatementListItem","statement","IllegalExportDeclaration","parseExportDeclaration","IllegalImportDeclaration","parseImportDeclaration","parseLexicalDeclaration","inFor","parseFunctionDeclaration","parseClassDeclaration","isLexicalDeclaration","parseStatement","parseBlock","parseLexicalBinding","parsePattern","StrictVarName","DeclarationMissingInitializer","parseBindingList","parseBindingRestElement","parseArrayPattern","parsePatternWithDefault","parsePropertyPattern","keyToken","parseVariableIdentifier","parseObjectPattern","LetInLexicalBinding","parseVariableDeclaration","parseVariableDeclarationList","opt","parseVariableStatement","parseEmptyStatement","parseExpressionStatement","parseIfClause","StrictFunction","parseIfStatement","parseDoWhileStatement","previousInIteration","parseWhileStatement","parseForStatement","forIn","decl","ForInOfLoopInitializer","initStartToken","InvalidLHSInForIn","InvalidLHSInForLoop","initSeq","parseContinueStatement","UnknownLabel","IllegalContinue","parseBreakStatement","IllegalBreak","parseReturnStatement","IllegalReturn","parseWithStatement","StrictModeWith","parseSwitchCase","parseSwitchStatement","previousInSwitch","defaultFound","clause","MultipleDefaultsInSwitch","parseLabelledStatement","Redeclaration","GeneratorInLegacyContext","parseThrowStatement","NewlineAfterThrow","parseCatchClause","paramMap","DuplicateBinding","StrictCatchVariable","parseFinallyClause","parseTryStatement","NoCatchOrFinally","parseDebuggerStatement","parseDirectivePrologues","previousLabelSet","previousInFunctionBody","StrictParamName","enumerable","writable","configurable","DefaultRestParameter","ParameterAfterRestParameter","parseFormalParameter","identifierIsOptional","isGenerator","StrictFunctionName","previousAllowAwait","formalParameters","parseDirective","IllegalLanguageModeDirective","BadGetterArity","BadSetterArity","BadSetterRestParameter","parseClassElement","hasConstructor","punctuator","ConstructorIsAsync","StaticPrototype","ConstructorSpecialMethod","DuplicateConstructor","parseClassElementList","parseClassBody","elementList","classBody","parseModuleSpecifier","InvalidModuleSpecifier","parseImportSpecifier","parseNamedImports","parseImportDefaultSpecifier","parseImportNamespaceSpecifier","NoAsAfterImportNamespace","src","MissingFromClause","parseExportSpecifier","exportDeclaration","isExportFromIdentifier","condition","Error","recordError","error","constructError","base","col","description","InvalidEscapedReservedWord","InvalidHexEscapeSequence","InvalidRegExp","TemplateOctalLiteral","UnexpectedTokenIllegal","UnterminatedRegExp","hexValue","toLowerCase","octalValue","curlyStack","skipSingleLineComment","skipMultiLineComment","isKeyword","codePointAt","second","scanHexEscape","len","scanUnicodeCodePointEscape","getIdentifier","getComplexIdentifier","octalToDecimal","scanIdentifier","restore","scanPunctuator","scanHexLiteral","num","scanBinaryLiteral","scanOctalLiteral","isImplicitOctalLiteral","scanNumericLiteral","parseFloat","scanStringLiteral","unescaped_1","unescaped","octToDec","scanTemplate","rawOffset","unescaped_2","testRegExp","tmp","self","$0","$1","$2","codePoint","RegExp","exception","scanRegExpBody","classMarker","scanRegExpFlags","char","quot","amp","apos","gt","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","copy","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","Agrave","Aacute","Acirc","Atilde","Auml","Aring","AElig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","times","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","divide","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","OElig","oelig","Scaron","scaron","Yuml","fnof","circ","tilde","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","bull","hellip","permil","prime","Prime","lsaquo","rsaquo","oline","frasl","euro","image","weierp","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","part","exist","empty","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","prop","infin","ang","and","or","cap","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sub","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","loz","spades","clubs","hearts","diams","lang","rang","Reader","curly","paren","beforeFunctionExpression","isRegexStart","previous","check","trackRange","trackLoc","buffer","reader","shift"],"mappings":"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"},"name":"static/chunks/ad943d25.a0b71a6e9dc25a64ae5b.js","input":"(window[\"webpackJsonp_N_E\"] = window[\"webpackJsonp_N_E\"] || []).push([[5],{\n\n/***/ \"xvDq\":\n/***/ (function(module, exports, __webpack_require__) {\n\n(function webpackUniversalModuleDefinition(root, factory) {\n/* istanbul ignore next */\n\tif(true)\n\t\tmodule.exports = factory();\n\telse {}\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/* istanbul ignore if */\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t/*\n\t  Copyright JS Foundation and other contributors, https://js.foundation/\n\n\t  Redistribution and use in source and binary forms, with or without\n\t  modification, are permitted provided that the following conditions are met:\n\n\t    * Redistributions of source code must retain the above copyright\n\t      notice, this list of conditions and the following disclaimer.\n\t    * Redistributions in binary form must reproduce the above copyright\n\t      notice, this list of conditions and the following disclaimer in the\n\t      documentation and/or other materials provided with the distribution.\n\n\t  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n\t  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\t  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\t  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n\t  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n\t  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n\t  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n\t  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\t  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n\t  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t*/\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tvar comment_handler_1 = __webpack_require__(1);\n\tvar jsx_parser_1 = __webpack_require__(3);\n\tvar parser_1 = __webpack_require__(8);\n\tvar tokenizer_1 = __webpack_require__(15);\n\tfunction parse(code, options, delegate) {\n\t    var commentHandler = null;\n\t    var proxyDelegate = function (node, metadata) {\n\t        if (delegate) {\n\t            delegate(node, metadata);\n\t        }\n\t        if (commentHandler) {\n\t            commentHandler.visit(node, metadata);\n\t        }\n\t    };\n\t    var parserDelegate = (typeof delegate === 'function') ? proxyDelegate : null;\n\t    var collectComment = false;\n\t    if (options) {\n\t        collectComment = (typeof options.comment === 'boolean' && options.comment);\n\t        var attachComment = (typeof options.attachComment === 'boolean' && options.attachComment);\n\t        if (collectComment || attachComment) {\n\t            commentHandler = new comment_handler_1.CommentHandler();\n\t            commentHandler.attach = attachComment;\n\t            options.comment = true;\n\t            parserDelegate = proxyDelegate;\n\t        }\n\t    }\n\t    var isModule = false;\n\t    if (options && typeof options.sourceType === 'string') {\n\t        isModule = (options.sourceType === 'module');\n\t    }\n\t    var parser;\n\t    if (options && typeof options.jsx === 'boolean' && options.jsx) {\n\t        parser = new jsx_parser_1.JSXParser(code, options, parserDelegate);\n\t    }\n\t    else {\n\t        parser = new parser_1.Parser(code, options, parserDelegate);\n\t    }\n\t    var program = isModule ? parser.parseModule() : parser.parseScript();\n\t    var ast = program;\n\t    if (collectComment && commentHandler) {\n\t        ast.comments = commentHandler.comments;\n\t    }\n\t    if (parser.config.tokens) {\n\t        ast.tokens = parser.tokens;\n\t    }\n\t    if (parser.config.tolerant) {\n\t        ast.errors = parser.errorHandler.errors;\n\t    }\n\t    return ast;\n\t}\n\texports.parse = parse;\n\tfunction parseModule(code, options, delegate) {\n\t    var parsingOptions = options || {};\n\t    parsingOptions.sourceType = 'module';\n\t    return parse(code, parsingOptions, delegate);\n\t}\n\texports.parseModule = parseModule;\n\tfunction parseScript(code, options, delegate) {\n\t    var parsingOptions = options || {};\n\t    parsingOptions.sourceType = 'script';\n\t    return parse(code, parsingOptions, delegate);\n\t}\n\texports.parseScript = parseScript;\n\tfunction tokenize(code, options, delegate) {\n\t    var tokenizer = new tokenizer_1.Tokenizer(code, options);\n\t    var tokens;\n\t    tokens = [];\n\t    try {\n\t        while (true) {\n\t            var token = tokenizer.getNextToken();\n\t            if (!token) {\n\t                break;\n\t            }\n\t            if (delegate) {\n\t                token = delegate(token);\n\t            }\n\t            tokens.push(token);\n\t        }\n\t    }\n\t    catch (e) {\n\t        tokenizer.errorHandler.tolerate(e);\n\t    }\n\t    if (tokenizer.errorHandler.tolerant) {\n\t        tokens.errors = tokenizer.errors();\n\t    }\n\t    return tokens;\n\t}\n\texports.tokenize = tokenize;\n\tvar syntax_1 = __webpack_require__(2);\n\texports.Syntax = syntax_1.Syntax;\n\t// Sync with *.json manifests.\n\texports.version = '4.0.1';\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tvar syntax_1 = __webpack_require__(2);\n\tvar CommentHandler = (function () {\n\t    function CommentHandler() {\n\t        this.attach = false;\n\t        this.comments = [];\n\t        this.stack = [];\n\t        this.leading = [];\n\t        this.trailing = [];\n\t    }\n\t    CommentHandler.prototype.insertInnerComments = function (node, metadata) {\n\t        //  innnerComments for properties empty block\n\t        //  `function a() {/** comments **\\/}`\n\t        if (node.type === syntax_1.Syntax.BlockStatement && node.body.length === 0) {\n\t            var innerComments = [];\n\t            for (var i = this.leading.length - 1; i >= 0; --i) {\n\t                var entry = this.leading[i];\n\t                if (metadata.end.offset >= entry.start) {\n\t                    innerComments.unshift(entry.comment);\n\t                    this.leading.splice(i, 1);\n\t                    this.trailing.splice(i, 1);\n\t                }\n\t            }\n\t            if (innerComments.length) {\n\t                node.innerComments = innerComments;\n\t            }\n\t        }\n\t    };\n\t    CommentHandler.prototype.findTrailingComments = function (metadata) {\n\t        var trailingComments = [];\n\t        if (this.trailing.length > 0) {\n\t            for (var i = this.trailing.length - 1; i >= 0; --i) {\n\t                var entry_1 = this.trailing[i];\n\t                if (entry_1.start >= metadata.end.offset) {\n\t                    trailingComments.unshift(entry_1.comment);\n\t                }\n\t            }\n\t            this.trailing.length = 0;\n\t            return trailingComments;\n\t        }\n\t        var entry = this.stack[this.stack.length - 1];\n\t        if (entry && entry.node.trailingComments) {\n\t            var firstComment = entry.node.trailingComments[0];\n\t            if (firstComment && firstComment.range[0] >= metadata.end.offset) {\n\t                trailingComments = entry.node.trailingComments;\n\t                delete entry.node.trailingComments;\n\t            }\n\t        }\n\t        return trailingComments;\n\t    };\n\t    CommentHandler.prototype.findLeadingComments = function (metadata) {\n\t        var leadingComments = [];\n\t        var target;\n\t        while (this.stack.length > 0) {\n\t            var entry = this.stack[this.stack.length - 1];\n\t            if (entry && entry.start >= metadata.start.offset) {\n\t                target = entry.node;\n\t                this.stack.pop();\n\t            }\n\t            else {\n\t                break;\n\t            }\n\t        }\n\t        if (target) {\n\t            var count = target.leadingComments ? target.leadingComments.length : 0;\n\t            for (var i = count - 1; i >= 0; --i) {\n\t                var comment = target.leadingComments[i];\n\t                if (comment.range[1] <= metadata.start.offset) {\n\t                    leadingComments.unshift(comment);\n\t                    target.leadingComments.splice(i, 1);\n\t                }\n\t            }\n\t            if (target.leadingComments && target.leadingComments.length === 0) {\n\t                delete target.leadingComments;\n\t            }\n\t            return leadingComments;\n\t        }\n\t        for (var i = this.leading.length - 1; i >= 0; --i) {\n\t            var entry = this.leading[i];\n\t            if (entry.start <= metadata.start.offset) {\n\t                leadingComments.unshift(entry.comment);\n\t                this.leading.splice(i, 1);\n\t            }\n\t        }\n\t        return leadingComments;\n\t    };\n\t    CommentHandler.prototype.visitNode = function (node, metadata) {\n\t        if (node.type === syntax_1.Syntax.Program && node.body.length > 0) {\n\t            return;\n\t        }\n\t        this.insertInnerComments(node, metadata);\n\t        var trailingComments = this.findTrailingComments(metadata);\n\t        var leadingComments = this.findLeadingComments(metadata);\n\t        if (leadingComments.length > 0) {\n\t            node.leadingComments = leadingComments;\n\t        }\n\t        if (trailingComments.length > 0) {\n\t            node.trailingComments = trailingComments;\n\t        }\n\t        this.stack.push({\n\t            node: node,\n\t            start: metadata.start.offset\n\t        });\n\t    };\n\t    CommentHandler.prototype.visitComment = function (node, metadata) {\n\t        var type = (node.type[0] === 'L') ? 'Line' : 'Block';\n\t        var comment = {\n\t            type: type,\n\t            value: node.value\n\t        };\n\t        if (node.range) {\n\t            comment.range = node.range;\n\t        }\n\t        if (node.loc) {\n\t            comment.loc = node.loc;\n\t        }\n\t        this.comments.push(comment);\n\t        if (this.attach) {\n\t            var entry = {\n\t                comment: {\n\t                    type: type,\n\t                    value: node.value,\n\t                    range: [metadata.start.offset, metadata.end.offset]\n\t                },\n\t                start: metadata.start.offset\n\t            };\n\t            if (node.loc) {\n\t                entry.comment.loc = node.loc;\n\t            }\n\t            node.type = type;\n\t            this.leading.push(entry);\n\t            this.trailing.push(entry);\n\t        }\n\t    };\n\t    CommentHandler.prototype.visit = function (node, metadata) {\n\t        if (node.type === 'LineComment') {\n\t            this.visitComment(node, metadata);\n\t        }\n\t        else if (node.type === 'BlockComment') {\n\t            this.visitComment(node, metadata);\n\t        }\n\t        else if (this.attach) {\n\t            this.visitNode(node, metadata);\n\t        }\n\t    };\n\t    return CommentHandler;\n\t}());\n\texports.CommentHandler = CommentHandler;\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.Syntax = {\n\t    AssignmentExpression: 'AssignmentExpression',\n\t    AssignmentPattern: 'AssignmentPattern',\n\t    ArrayExpression: 'ArrayExpression',\n\t    ArrayPattern: 'ArrayPattern',\n\t    ArrowFunctionExpression: 'ArrowFunctionExpression',\n\t    AwaitExpression: 'AwaitExpression',\n\t    BlockStatement: 'BlockStatement',\n\t    BinaryExpression: 'BinaryExpression',\n\t    BreakStatement: 'BreakStatement',\n\t    CallExpression: 'CallExpression',\n\t    CatchClause: 'CatchClause',\n\t    ClassBody: 'ClassBody',\n\t    ClassDeclaration: 'ClassDeclaration',\n\t    ClassExpression: 'ClassExpression',\n\t    ConditionalExpression: 'ConditionalExpression',\n\t    ContinueStatement: 'ContinueStatement',\n\t    DoWhileStatement: 'DoWhileStatement',\n\t    DebuggerStatement: 'DebuggerStatement',\n\t    EmptyStatement: 'EmptyStatement',\n\t    ExportAllDeclaration: 'ExportAllDeclaration',\n\t    ExportDefaultDeclaration: 'ExportDefaultDeclaration',\n\t    ExportNamedDeclaration: 'ExportNamedDeclaration',\n\t    ExportSpecifier: 'ExportSpecifier',\n\t    ExpressionStatement: 'ExpressionStatement',\n\t    ForStatement: 'ForStatement',\n\t    ForOfStatement: 'ForOfStatement',\n\t    ForInStatement: 'ForInStatement',\n\t    FunctionDeclaration: 'FunctionDeclaration',\n\t    FunctionExpression: 'FunctionExpression',\n\t    Identifier: 'Identifier',\n\t    IfStatement: 'IfStatement',\n\t    ImportDeclaration: 'ImportDeclaration',\n\t    ImportDefaultSpecifier: 'ImportDefaultSpecifier',\n\t    ImportNamespaceSpecifier: 'ImportNamespaceSpecifier',\n\t    ImportSpecifier: 'ImportSpecifier',\n\t    Literal: 'Literal',\n\t    LabeledStatement: 'LabeledStatement',\n\t    LogicalExpression: 'LogicalExpression',\n\t    MemberExpression: 'MemberExpression',\n\t    MetaProperty: 'MetaProperty',\n\t    MethodDefinition: 'MethodDefinition',\n\t    NewExpression: 'NewExpression',\n\t    ObjectExpression: 'ObjectExpression',\n\t    ObjectPattern: 'ObjectPattern',\n\t    Program: 'Program',\n\t    Property: 'Property',\n\t    RestElement: 'RestElement',\n\t    ReturnStatement: 'ReturnStatement',\n\t    SequenceExpression: 'SequenceExpression',\n\t    SpreadElement: 'SpreadElement',\n\t    Super: 'Super',\n\t    SwitchCase: 'SwitchCase',\n\t    SwitchStatement: 'SwitchStatement',\n\t    TaggedTemplateExpression: 'TaggedTemplateExpression',\n\t    TemplateElement: 'TemplateElement',\n\t    TemplateLiteral: 'TemplateLiteral',\n\t    ThisExpression: 'ThisExpression',\n\t    ThrowStatement: 'ThrowStatement',\n\t    TryStatement: 'TryStatement',\n\t    UnaryExpression: 'UnaryExpression',\n\t    UpdateExpression: 'UpdateExpression',\n\t    VariableDeclaration: 'VariableDeclaration',\n\t    VariableDeclarator: 'VariableDeclarator',\n\t    WhileStatement: 'WhileStatement',\n\t    WithStatement: 'WithStatement',\n\t    YieldExpression: 'YieldExpression'\n\t};\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n/* istanbul ignore next */\n\tvar __extends = (this && this.__extends) || (function () {\n\t    var extendStatics = Object.setPrototypeOf ||\n\t        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n\t        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n\t    return function (d, b) {\n\t        extendStatics(d, b);\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t})();\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tvar character_1 = __webpack_require__(4);\n\tvar JSXNode = __webpack_require__(5);\n\tvar jsx_syntax_1 = __webpack_require__(6);\n\tvar Node = __webpack_require__(7);\n\tvar parser_1 = __webpack_require__(8);\n\tvar token_1 = __webpack_require__(13);\n\tvar xhtml_entities_1 = __webpack_require__(14);\n\ttoken_1.TokenName[100 /* Identifier */] = 'JSXIdentifier';\n\ttoken_1.TokenName[101 /* Text */] = 'JSXText';\n\t// Fully qualified element name, e.g. <svg:path> returns \"svg:path\"\n\tfunction getQualifiedElementName(elementName) {\n\t    var qualifiedName;\n\t    switch (elementName.type) {\n\t        case jsx_syntax_1.JSXSyntax.JSXIdentifier:\n\t            var id = elementName;\n\t            qualifiedName = id.name;\n\t            break;\n\t        case jsx_syntax_1.JSXSyntax.JSXNamespacedName:\n\t            var ns = elementName;\n\t            qualifiedName = getQualifiedElementName(ns.namespace) + ':' +\n\t                getQualifiedElementName(ns.name);\n\t            break;\n\t        case jsx_syntax_1.JSXSyntax.JSXMemberExpression:\n\t            var expr = elementName;\n\t            qualifiedName = getQualifiedElementName(expr.object) + '.' +\n\t                getQualifiedElementName(expr.property);\n\t            break;\n\t        /* istanbul ignore next */\n\t        default:\n\t            break;\n\t    }\n\t    return qualifiedName;\n\t}\n\tvar JSXParser = (function (_super) {\n\t    __extends(JSXParser, _super);\n\t    function JSXParser(code, options, delegate) {\n\t        return _super.call(this, code, options, delegate) || this;\n\t    }\n\t    JSXParser.prototype.parsePrimaryExpression = function () {\n\t        return this.match('<') ? this.parseJSXRoot() : _super.prototype.parsePrimaryExpression.call(this);\n\t    };\n\t    JSXParser.prototype.startJSX = function () {\n\t        // Unwind the scanner before the lookahead token.\n\t        this.scanner.index = this.startMarker.index;\n\t        this.scanner.lineNumber = this.startMarker.line;\n\t        this.scanner.lineStart = this.startMarker.index - this.startMarker.column;\n\t    };\n\t    JSXParser.prototype.finishJSX = function () {\n\t        // Prime the next lookahead.\n\t        this.nextToken();\n\t    };\n\t    JSXParser.prototype.reenterJSX = function () {\n\t        this.startJSX();\n\t        this.expectJSX('}');\n\t        // Pop the closing '}' added from the lookahead.\n\t        if (this.config.tokens) {\n\t            this.tokens.pop();\n\t        }\n\t    };\n\t    JSXParser.prototype.createJSXNode = function () {\n\t        this.collectComments();\n\t        return {\n\t            index: this.scanner.index,\n\t            line: this.scanner.lineNumber,\n\t            column: this.scanner.index - this.scanner.lineStart\n\t        };\n\t    };\n\t    JSXParser.prototype.createJSXChildNode = function () {\n\t        return {\n\t            index: this.scanner.index,\n\t            line: this.scanner.lineNumber,\n\t            column: this.scanner.index - this.scanner.lineStart\n\t        };\n\t    };\n\t    JSXParser.prototype.scanXHTMLEntity = function (quote) {\n\t        var result = '&';\n\t        var valid = true;\n\t        var terminated = false;\n\t        var numeric = false;\n\t        var hex = false;\n\t        while (!this.scanner.eof() && valid && !terminated) {\n\t            var ch = this.scanner.source[this.scanner.index];\n\t            if (ch === quote) {\n\t                break;\n\t            }\n\t            terminated = (ch === ';');\n\t            result += ch;\n\t            ++this.scanner.index;\n\t            if (!terminated) {\n\t                switch (result.length) {\n\t                    case 2:\n\t                        // e.g. '&#123;'\n\t                        numeric = (ch === '#');\n\t                        break;\n\t                    case 3:\n\t                        if (numeric) {\n\t                            // e.g. '&#x41;'\n\t                            hex = (ch === 'x');\n\t                            valid = hex || character_1.Character.isDecimalDigit(ch.charCodeAt(0));\n\t                            numeric = numeric && !hex;\n\t                        }\n\t                        break;\n\t                    default:\n\t                        valid = valid && !(numeric && !character_1.Character.isDecimalDigit(ch.charCodeAt(0)));\n\t                        valid = valid && !(hex && !character_1.Character.isHexDigit(ch.charCodeAt(0)));\n\t                        break;\n\t                }\n\t            }\n\t        }\n\t        if (valid && terminated && result.length > 2) {\n\t            // e.g. '&#x41;' becomes just '#x41'\n\t            var str = result.substr(1, result.length - 2);\n\t            if (numeric && str.length > 1) {\n\t                result = String.fromCharCode(parseInt(str.substr(1), 10));\n\t            }\n\t            else if (hex && str.length > 2) {\n\t                result = String.fromCharCode(parseInt('0' + str.substr(1), 16));\n\t            }\n\t            else if (!numeric && !hex && xhtml_entities_1.XHTMLEntities[str]) {\n\t                result = xhtml_entities_1.XHTMLEntities[str];\n\t            }\n\t        }\n\t        return result;\n\t    };\n\t    // Scan the next JSX token. This replaces Scanner#lex when in JSX mode.\n\t    JSXParser.prototype.lexJSX = function () {\n\t        var cp = this.scanner.source.charCodeAt(this.scanner.index);\n\t        // < > / : = { }\n\t        if (cp === 60 || cp === 62 || cp === 47 || cp === 58 || cp === 61 || cp === 123 || cp === 125) {\n\t            var value = this.scanner.source[this.scanner.index++];\n\t            return {\n\t                type: 7 /* Punctuator */,\n\t                value: value,\n\t                lineNumber: this.scanner.lineNumber,\n\t                lineStart: this.scanner.lineStart,\n\t                start: this.scanner.index - 1,\n\t                end: this.scanner.index\n\t            };\n\t        }\n\t        // \" '\n\t        if (cp === 34 || cp === 39) {\n\t            var start = this.scanner.index;\n\t            var quote = this.scanner.source[this.scanner.index++];\n\t            var str = '';\n\t            while (!this.scanner.eof()) {\n\t                var ch = this.scanner.source[this.scanner.index++];\n\t                if (ch === quote) {\n\t                    break;\n\t                }\n\t                else if (ch === '&') {\n\t                    str += this.scanXHTMLEntity(quote);\n\t                }\n\t                else {\n\t                    str += ch;\n\t                }\n\t            }\n\t            return {\n\t                type: 8 /* StringLiteral */,\n\t                value: str,\n\t                lineNumber: this.scanner.lineNumber,\n\t                lineStart: this.scanner.lineStart,\n\t                start: start,\n\t                end: this.scanner.index\n\t            };\n\t        }\n\t        // ... or .\n\t        if (cp === 46) {\n\t            var n1 = this.scanner.source.charCodeAt(this.scanner.index + 1);\n\t            var n2 = this.scanner.source.charCodeAt(this.scanner.index + 2);\n\t            var value = (n1 === 46 && n2 === 46) ? '...' : '.';\n\t            var start = this.scanner.index;\n\t            this.scanner.index += value.length;\n\t            return {\n\t                type: 7 /* Punctuator */,\n\t                value: value,\n\t                lineNumber: this.scanner.lineNumber,\n\t                lineStart: this.scanner.lineStart,\n\t                start: start,\n\t                end: this.scanner.index\n\t            };\n\t        }\n\t        // `\n\t        if (cp === 96) {\n\t            // Only placeholder, since it will be rescanned as a real assignment expression.\n\t            return {\n\t                type: 10 /* Template */,\n\t                value: '',\n\t                lineNumber: this.scanner.lineNumber,\n\t                lineStart: this.scanner.lineStart,\n\t                start: this.scanner.index,\n\t                end: this.scanner.index\n\t            };\n\t        }\n\t        // Identifer can not contain backslash (char code 92).\n\t        if (character_1.Character.isIdentifierStart(cp) && (cp !== 92)) {\n\t            var start = this.scanner.index;\n\t            ++this.scanner.index;\n\t            while (!this.scanner.eof()) {\n\t                var ch = this.scanner.source.charCodeAt(this.scanner.index);\n\t                if (character_1.Character.isIdentifierPart(ch) && (ch !== 92)) {\n\t                    ++this.scanner.index;\n\t                }\n\t                else if (ch === 45) {\n\t                    // Hyphen (char code 45) can be part of an identifier.\n\t                    ++this.scanner.index;\n\t                }\n\t                else {\n\t                    break;\n\t                }\n\t            }\n\t            var id = this.scanner.source.slice(start, this.scanner.index);\n\t            return {\n\t                type: 100 /* Identifier */,\n\t                value: id,\n\t                lineNumber: this.scanner.lineNumber,\n\t                lineStart: this.scanner.lineStart,\n\t                start: start,\n\t                end: this.scanner.index\n\t            };\n\t        }\n\t        return this.scanner.lex();\n\t    };\n\t    JSXParser.prototype.nextJSXToken = function () {\n\t        this.collectComments();\n\t        this.startMarker.index = this.scanner.index;\n\t        this.startMarker.line = this.scanner.lineNumber;\n\t        this.startMarker.column = this.scanner.index - this.scanner.lineStart;\n\t        var token = this.lexJSX();\n\t        this.lastMarker.index = this.scanner.index;\n\t        this.lastMarker.line = this.scanner.lineNumber;\n\t        this.lastMarker.column = this.scanner.index - this.scanner.lineStart;\n\t        if (this.config.tokens) {\n\t            this.tokens.push(this.convertToken(token));\n\t        }\n\t        return token;\n\t    };\n\t    JSXParser.prototype.nextJSXText = function () {\n\t        this.startMarker.index = this.scanner.index;\n\t        this.startMarker.line = this.scanner.lineNumber;\n\t        this.startMarker.column = this.scanner.index - this.scanner.lineStart;\n\t        var start = this.scanner.index;\n\t        var text = '';\n\t        while (!this.scanner.eof()) {\n\t            var ch = this.scanner.source[this.scanner.index];\n\t            if (ch === '{' || ch === '<') {\n\t                break;\n\t            }\n\t            ++this.scanner.index;\n\t            text += ch;\n\t            if (character_1.Character.isLineTerminator(ch.charCodeAt(0))) {\n\t                ++this.scanner.lineNumber;\n\t                if (ch === '\\r' && this.scanner.source[this.scanner.index] === '\\n') {\n\t                    ++this.scanner.index;\n\t                }\n\t                this.scanner.lineStart = this.scanner.index;\n\t            }\n\t        }\n\t        this.lastMarker.index = this.scanner.index;\n\t        this.lastMarker.line = this.scanner.lineNumber;\n\t        this.lastMarker.column = this.scanner.index - this.scanner.lineStart;\n\t        var token = {\n\t            type: 101 /* Text */,\n\t            value: text,\n\t            lineNumber: this.scanner.lineNumber,\n\t            lineStart: this.scanner.lineStart,\n\t            start: start,\n\t            end: this.scanner.index\n\t        };\n\t        if ((text.length > 0) && this.config.tokens) {\n\t            this.tokens.push(this.convertToken(token));\n\t        }\n\t        return token;\n\t    };\n\t    JSXParser.prototype.peekJSXToken = function () {\n\t        var state = this.scanner.saveState();\n\t        this.scanner.scanComments();\n\t        var next = this.lexJSX();\n\t        this.scanner.restoreState(state);\n\t        return next;\n\t    };\n\t    // Expect the next JSX token to match the specified punctuator.\n\t    // If not, an exception will be thrown.\n\t    JSXParser.prototype.expectJSX = function (value) {\n\t        var token = this.nextJSXToken();\n\t        if (token.type !== 7 /* Punctuator */ || token.value !== value) {\n\t            this.throwUnexpectedToken(token);\n\t        }\n\t    };\n\t    // Return true if the next JSX token matches the specified punctuator.\n\t    JSXParser.prototype.matchJSX = function (value) {\n\t        var next = this.peekJSXToken();\n\t        return next.type === 7 /* Punctuator */ && next.value === value;\n\t    };\n\t    JSXParser.prototype.parseJSXIdentifier = function () {\n\t        var node = this.createJSXNode();\n\t        var token = this.nextJSXToken();\n\t        if (token.type !== 100 /* Identifier */) {\n\t            this.throwUnexpectedToken(token);\n\t        }\n\t        return this.finalize(node, new JSXNode.JSXIdentifier(token.value));\n\t    };\n\t    JSXParser.prototype.parseJSXElementName = function () {\n\t        var node = this.createJSXNode();\n\t        var elementName = this.parseJSXIdentifier();\n\t        if (this.matchJSX(':')) {\n\t            var namespace = elementName;\n\t            this.expectJSX(':');\n\t            var name_1 = this.parseJSXIdentifier();\n\t            elementName = this.finalize(node, new JSXNode.JSXNamespacedName(namespace, name_1));\n\t        }\n\t        else if (this.matchJSX('.')) {\n\t            while (this.matchJSX('.')) {\n\t                var object = elementName;\n\t                this.expectJSX('.');\n\t                var property = this.parseJSXIdentifier();\n\t                elementName = this.finalize(node, new JSXNode.JSXMemberExpression(object, property));\n\t            }\n\t        }\n\t        return elementName;\n\t    };\n\t    JSXParser.prototype.parseJSXAttributeName = function () {\n\t        var node = this.createJSXNode();\n\t        var attributeName;\n\t        var identifier = this.parseJSXIdentifier();\n\t        if (this.matchJSX(':')) {\n\t            var namespace = identifier;\n\t            this.expectJSX(':');\n\t            var name_2 = this.parseJSXIdentifier();\n\t            attributeName = this.finalize(node, new JSXNode.JSXNamespacedName(namespace, name_2));\n\t        }\n\t        else {\n\t            attributeName = identifier;\n\t        }\n\t        return attributeName;\n\t    };\n\t    JSXParser.prototype.parseJSXStringLiteralAttribute = function () {\n\t        var node = this.createJSXNode();\n\t        var token = this.nextJSXToken();\n\t        if (token.type !== 8 /* StringLiteral */) {\n\t            this.throwUnexpectedToken(token);\n\t        }\n\t        var raw = this.getTokenRaw(token);\n\t        return this.finalize(node, new Node.Literal(token.value, raw));\n\t    };\n\t    JSXParser.prototype.parseJSXExpressionAttribute = function () {\n\t        var node = this.createJSXNode();\n\t        this.expectJSX('{');\n\t        this.finishJSX();\n\t        if (this.match('}')) {\n\t            this.tolerateError('JSX attributes must only be assigned a non-empty expression');\n\t        }\n\t        var expression = this.parseAssignmentExpression();\n\t        this.reenterJSX();\n\t        return this.finalize(node, new JSXNode.JSXExpressionContainer(expression));\n\t    };\n\t    JSXParser.prototype.parseJSXAttributeValue = function () {\n\t        return this.matchJSX('{') ? this.parseJSXExpressionAttribute() :\n\t            this.matchJSX('<') ? this.parseJSXElement() : this.parseJSXStringLiteralAttribute();\n\t    };\n\t    JSXParser.prototype.parseJSXNameValueAttribute = function () {\n\t        var node = this.createJSXNode();\n\t        var name = this.parseJSXAttributeName();\n\t        var value = null;\n\t        if (this.matchJSX('=')) {\n\t            this.expectJSX('=');\n\t            value = this.parseJSXAttributeValue();\n\t        }\n\t        return this.finalize(node, new JSXNode.JSXAttribute(name, value));\n\t    };\n\t    JSXParser.prototype.parseJSXSpreadAttribute = function () {\n\t        var node = this.createJSXNode();\n\t        this.expectJSX('{');\n\t        this.expectJSX('...');\n\t        this.finishJSX();\n\t        var argument = this.parseAssignmentExpression();\n\t        this.reenterJSX();\n\t        return this.finalize(node, new JSXNode.JSXSpreadAttribute(argument));\n\t    };\n\t    JSXParser.prototype.parseJSXAttributes = function () {\n\t        var attributes = [];\n\t        while (!this.matchJSX('/') && !this.matchJSX('>')) {\n\t            var attribute = this.matchJSX('{') ? this.parseJSXSpreadAttribute() :\n\t                this.parseJSXNameValueAttribute();\n\t            attributes.push(attribute);\n\t        }\n\t        return attributes;\n\t    };\n\t    JSXParser.prototype.parseJSXOpeningElement = function () {\n\t        var node = this.createJSXNode();\n\t        this.expectJSX('<');\n\t        var name = this.parseJSXElementName();\n\t        var attributes = this.parseJSXAttributes();\n\t        var selfClosing = this.matchJSX('/');\n\t        if (selfClosing) {\n\t            this.expectJSX('/');\n\t        }\n\t        this.expectJSX('>');\n\t        return this.finalize(node, new JSXNode.JSXOpeningElement(name, selfClosing, attributes));\n\t    };\n\t    JSXParser.prototype.parseJSXBoundaryElement = function () {\n\t        var node = this.createJSXNode();\n\t        this.expectJSX('<');\n\t        if (this.matchJSX('/')) {\n\t            this.expectJSX('/');\n\t            var name_3 = this.parseJSXElementName();\n\t            this.expectJSX('>');\n\t            return this.finalize(node, new JSXNode.JSXClosingElement(name_3));\n\t        }\n\t        var name = this.parseJSXElementName();\n\t        var attributes = this.parseJSXAttributes();\n\t        var selfClosing = this.matchJSX('/');\n\t        if (selfClosing) {\n\t            this.expectJSX('/');\n\t        }\n\t        this.expectJSX('>');\n\t        return this.finalize(node, new JSXNode.JSXOpeningElement(name, selfClosing, attributes));\n\t    };\n\t    JSXParser.prototype.parseJSXEmptyExpression = function () {\n\t        var node = this.createJSXChildNode();\n\t        this.collectComments();\n\t        this.lastMarker.index = this.scanner.index;\n\t        this.lastMarker.line = this.scanner.lineNumber;\n\t        this.lastMarker.column = this.scanner.index - this.scanner.lineStart;\n\t        return this.finalize(node, new JSXNode.JSXEmptyExpression());\n\t    };\n\t    JSXParser.prototype.parseJSXExpressionContainer = function () {\n\t        var node = this.createJSXNode();\n\t        this.expectJSX('{');\n\t        var expression;\n\t        if (this.matchJSX('}')) {\n\t            expression = this.parseJSXEmptyExpression();\n\t            this.expectJSX('}');\n\t        }\n\t        else {\n\t            this.finishJSX();\n\t            expression = this.parseAssignmentExpression();\n\t            this.reenterJSX();\n\t        }\n\t        return this.finalize(node, new JSXNode.JSXExpressionContainer(expression));\n\t    };\n\t    JSXParser.prototype.parseJSXChildren = function () {\n\t        var children = [];\n\t        while (!this.scanner.eof()) {\n\t            var node = this.createJSXChildNode();\n\t            var token = this.nextJSXText();\n\t            if (token.start < token.end) {\n\t                var raw = this.getTokenRaw(token);\n\t                var child = this.finalize(node, new JSXNode.JSXText(token.value, raw));\n\t                children.push(child);\n\t            }\n\t            if (this.scanner.source[this.scanner.index] === '{') {\n\t                var container = this.parseJSXExpressionContainer();\n\t                children.push(container);\n\t            }\n\t            else {\n\t                break;\n\t            }\n\t        }\n\t        return children;\n\t    };\n\t    JSXParser.prototype.parseComplexJSXElement = function (el) {\n\t        var stack = [];\n\t        while (!this.scanner.eof()) {\n\t            el.children = el.children.concat(this.parseJSXChildren());\n\t            var node = this.createJSXChildNode();\n\t            var element = this.parseJSXBoundaryElement();\n\t            if (element.type === jsx_syntax_1.JSXSyntax.JSXOpeningElement) {\n\t                var opening = element;\n\t                if (opening.selfClosing) {\n\t                    var child = this.finalize(node, new JSXNode.JSXElement(opening, [], null));\n\t                    el.children.push(child);\n\t                }\n\t                else {\n\t                    stack.push(el);\n\t                    el = { node: node, opening: opening, closing: null, children: [] };\n\t                }\n\t            }\n\t            if (element.type === jsx_syntax_1.JSXSyntax.JSXClosingElement) {\n\t                el.closing = element;\n\t                var open_1 = getQualifiedElementName(el.opening.name);\n\t                var close_1 = getQualifiedElementName(el.closing.name);\n\t                if (open_1 !== close_1) {\n\t                    this.tolerateError('Expected corresponding JSX closing tag for %0', open_1);\n\t                }\n\t                if (stack.length > 0) {\n\t                    var child = this.finalize(el.node, new JSXNode.JSXElement(el.opening, el.children, el.closing));\n\t                    el = stack[stack.length - 1];\n\t                    el.children.push(child);\n\t                    stack.pop();\n\t                }\n\t                else {\n\t                    break;\n\t                }\n\t            }\n\t        }\n\t        return el;\n\t    };\n\t    JSXParser.prototype.parseJSXElement = function () {\n\t        var node = this.createJSXNode();\n\t        var opening = this.parseJSXOpeningElement();\n\t        var children = [];\n\t        var closing = null;\n\t        if (!opening.selfClosing) {\n\t            var el = this.parseComplexJSXElement({ node: node, opening: opening, closing: closing, children: children });\n\t            children = el.children;\n\t            closing = el.closing;\n\t        }\n\t        return this.finalize(node, new JSXNode.JSXElement(opening, children, closing));\n\t    };\n\t    JSXParser.prototype.parseJSXRoot = function () {\n\t        // Pop the opening '<' added from the lookahead.\n\t        if (this.config.tokens) {\n\t            this.tokens.pop();\n\t        }\n\t        this.startJSX();\n\t        var element = this.parseJSXElement();\n\t        this.finishJSX();\n\t        return element;\n\t    };\n\t    JSXParser.prototype.isStartOfExpression = function () {\n\t        return _super.prototype.isStartOfExpression.call(this) || this.match('<');\n\t    };\n\t    return JSXParser;\n\t}(parser_1.Parser));\n\texports.JSXParser = JSXParser;\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\t// See also tools/generate-unicode-regex.js.\n\tvar Regex = {\n\t    // Unicode v8.0.0 NonAsciiIdentifierStart:\n\t    NonAsciiIdentifierStart: /[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0-\\u08B4\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309B-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AD\\uA7B0-\\uA7B7\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF30-\\uDF4A\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC03-\\uDC37\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDF00-\\uDF19]|\\uD806[\\uDCA0-\\uDCDF\\uDCFF\\uDEC0-\\uDEF8]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50\\uDF93-\\uDF9F]|\\uD82C[\\uDC00\\uDC01]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD83A[\\uDC00-\\uDCC4]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1]|\\uD87E[\\uDC00-\\uDE1D]/,\n\t    // Unicode v8.0.0 NonAsciiIdentifierPart:\n\t    NonAsciiIdentifierPart: /[\\xAA\\xB5\\xB7\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u0800-\\u082D\\u0840-\\u085B\\u08A0-\\u08B4\\u08E3-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0AF9\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58-\\u0C5A\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C81-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D01-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D57\\u0D5F-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1369-\\u1371\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1CD0-\\u1CD2\\u1CD4-\\u1CF6\\u1CF8\\u1CF9\\u1D00-\\u1DF5\\u1DFC-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200C\\u200D\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AD\\uA7B0-\\uA7B7\\uA7F7-\\uA827\\uA840-\\uA873\\uA880-\\uA8C4\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA8FD\\uA900-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDDFD\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDEE0\\uDF00-\\uDF1F\\uDF30-\\uDF4A\\uDF50-\\uDF7A\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCA0-\\uDCA9\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE38-\\uDE3A\\uDE3F\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE6\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC00-\\uDC46\\uDC66-\\uDC6F\\uDC7F-\\uDCBA\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9\\uDD00-\\uDD34\\uDD36-\\uDD3F\\uDD50-\\uDD73\\uDD76\\uDD80-\\uDDC4\\uDDCA-\\uDDCC\\uDDD0-\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE37\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEEA\\uDEF0-\\uDEF9\\uDF00-\\uDF03\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3C-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF50\\uDF57\\uDF5D-\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDC80-\\uDCC5\\uDCC7\\uDCD0-\\uDCD9\\uDD80-\\uDDB5\\uDDB8-\\uDDC0\\uDDD8-\\uDDDD\\uDE00-\\uDE40\\uDE44\\uDE50-\\uDE59\\uDE80-\\uDEB7\\uDEC0-\\uDEC9\\uDF00-\\uDF19\\uDF1D-\\uDF2B\\uDF30-\\uDF39]|\\uD806[\\uDCA0-\\uDCE9\\uDCFF\\uDEC0-\\uDEF8]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDED0-\\uDEED\\uDEF0-\\uDEF4\\uDF00-\\uDF36\\uDF40-\\uDF43\\uDF50-\\uDF59\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50-\\uDF7E\\uDF8F-\\uDF9F]|\\uD82C[\\uDC00\\uDC01]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99\\uDC9D\\uDC9E]|\\uD834[\\uDD65-\\uDD69\\uDD6D-\\uDD72\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB\\uDFCE-\\uDFFF]|\\uD836[\\uDE00-\\uDE36\\uDE3B-\\uDE6C\\uDE75\\uDE84\\uDE9B-\\uDE9F\\uDEA1-\\uDEAF]|\\uD83A[\\uDC00-\\uDCC4\\uDCD0-\\uDCD6]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1]|\\uD87E[\\uDC00-\\uDE1D]|\\uDB40[\\uDD00-\\uDDEF]/\n\t};\n\texports.Character = {\n\t    /* tslint:disable:no-bitwise */\n\t    fromCodePoint: function (cp) {\n\t        return (cp < 0x10000) ? String.fromCharCode(cp) :\n\t            String.fromCharCode(0xD800 + ((cp - 0x10000) >> 10)) +\n\t                String.fromCharCode(0xDC00 + ((cp - 0x10000) & 1023));\n\t    },\n\t    // https://tc39.github.io/ecma262/#sec-white-space\n\t    isWhiteSpace: function (cp) {\n\t        return (cp === 0x20) || (cp === 0x09) || (cp === 0x0B) || (cp === 0x0C) || (cp === 0xA0) ||\n\t            (cp >= 0x1680 && [0x1680, 0x2000, 0x2001, 0x2002, 0x2003, 0x2004, 0x2005, 0x2006, 0x2007, 0x2008, 0x2009, 0x200A, 0x202F, 0x205F, 0x3000, 0xFEFF].indexOf(cp) >= 0);\n\t    },\n\t    // https://tc39.github.io/ecma262/#sec-line-terminators\n\t    isLineTerminator: function (cp) {\n\t        return (cp === 0x0A) || (cp === 0x0D) || (cp === 0x2028) || (cp === 0x2029);\n\t    },\n\t    // https://tc39.github.io/ecma262/#sec-names-and-keywords\n\t    isIdentifierStart: function (cp) {\n\t        return (cp === 0x24) || (cp === 0x5F) ||\n\t            (cp >= 0x41 && cp <= 0x5A) ||\n\t            (cp >= 0x61 && cp <= 0x7A) ||\n\t            (cp === 0x5C) ||\n\t            ((cp >= 0x80) && Regex.NonAsciiIdentifierStart.test(exports.Character.fromCodePoint(cp)));\n\t    },\n\t    isIdentifierPart: function (cp) {\n\t        return (cp === 0x24) || (cp === 0x5F) ||\n\t            (cp >= 0x41 && cp <= 0x5A) ||\n\t            (cp >= 0x61 && cp <= 0x7A) ||\n\t            (cp >= 0x30 && cp <= 0x39) ||\n\t            (cp === 0x5C) ||\n\t            ((cp >= 0x80) && Regex.NonAsciiIdentifierPart.test(exports.Character.fromCodePoint(cp)));\n\t    },\n\t    // https://tc39.github.io/ecma262/#sec-literals-numeric-literals\n\t    isDecimalDigit: function (cp) {\n\t        return (cp >= 0x30 && cp <= 0x39); // 0..9\n\t    },\n\t    isHexDigit: function (cp) {\n\t        return (cp >= 0x30 && cp <= 0x39) ||\n\t            (cp >= 0x41 && cp <= 0x46) ||\n\t            (cp >= 0x61 && cp <= 0x66); // a..f\n\t    },\n\t    isOctalDigit: function (cp) {\n\t        return (cp >= 0x30 && cp <= 0x37); // 0..7\n\t    }\n\t};\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tvar jsx_syntax_1 = __webpack_require__(6);\n\t/* tslint:disable:max-classes-per-file */\n\tvar JSXClosingElement = (function () {\n\t    function JSXClosingElement(name) {\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXClosingElement;\n\t        this.name = name;\n\t    }\n\t    return JSXClosingElement;\n\t}());\n\texports.JSXClosingElement = JSXClosingElement;\n\tvar JSXElement = (function () {\n\t    function JSXElement(openingElement, children, closingElement) {\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXElement;\n\t        this.openingElement = openingElement;\n\t        this.children = children;\n\t        this.closingElement = closingElement;\n\t    }\n\t    return JSXElement;\n\t}());\n\texports.JSXElement = JSXElement;\n\tvar JSXEmptyExpression = (function () {\n\t    function JSXEmptyExpression() {\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXEmptyExpression;\n\t    }\n\t    return JSXEmptyExpression;\n\t}());\n\texports.JSXEmptyExpression = JSXEmptyExpression;\n\tvar JSXExpressionContainer = (function () {\n\t    function JSXExpressionContainer(expression) {\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXExpressionContainer;\n\t        this.expression = expression;\n\t    }\n\t    return JSXExpressionContainer;\n\t}());\n\texports.JSXExpressionContainer = JSXExpressionContainer;\n\tvar JSXIdentifier = (function () {\n\t    function JSXIdentifier(name) {\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXIdentifier;\n\t        this.name = name;\n\t    }\n\t    return JSXIdentifier;\n\t}());\n\texports.JSXIdentifier = JSXIdentifier;\n\tvar JSXMemberExpression = (function () {\n\t    function JSXMemberExpression(object, property) {\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXMemberExpression;\n\t        this.object = object;\n\t        this.property = property;\n\t    }\n\t    return JSXMemberExpression;\n\t}());\n\texports.JSXMemberExpression = JSXMemberExpression;\n\tvar JSXAttribute = (function () {\n\t    function JSXAttribute(name, value) {\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXAttribute;\n\t        this.name = name;\n\t        this.value = value;\n\t    }\n\t    return JSXAttribute;\n\t}());\n\texports.JSXAttribute = JSXAttribute;\n\tvar JSXNamespacedName = (function () {\n\t    function JSXNamespacedName(namespace, name) {\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXNamespacedName;\n\t        this.namespace = namespace;\n\t        this.name = name;\n\t    }\n\t    return JSXNamespacedName;\n\t}());\n\texports.JSXNamespacedName = JSXNamespacedName;\n\tvar JSXOpeningElement = (function () {\n\t    function JSXOpeningElement(name, selfClosing, attributes) {\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXOpeningElement;\n\t        this.name = name;\n\t        this.selfClosing = selfClosing;\n\t        this.attributes = attributes;\n\t    }\n\t    return JSXOpeningElement;\n\t}());\n\texports.JSXOpeningElement = JSXOpeningElement;\n\tvar JSXSpreadAttribute = (function () {\n\t    function JSXSpreadAttribute(argument) {\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXSpreadAttribute;\n\t        this.argument = argument;\n\t    }\n\t    return JSXSpreadAttribute;\n\t}());\n\texports.JSXSpreadAttribute = JSXSpreadAttribute;\n\tvar JSXText = (function () {\n\t    function JSXText(value, raw) {\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXText;\n\t        this.value = value;\n\t        this.raw = raw;\n\t    }\n\t    return JSXText;\n\t}());\n\texports.JSXText = JSXText;\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.JSXSyntax = {\n\t    JSXAttribute: 'JSXAttribute',\n\t    JSXClosingElement: 'JSXClosingElement',\n\t    JSXElement: 'JSXElement',\n\t    JSXEmptyExpression: 'JSXEmptyExpression',\n\t    JSXExpressionContainer: 'JSXExpressionContainer',\n\t    JSXIdentifier: 'JSXIdentifier',\n\t    JSXMemberExpression: 'JSXMemberExpression',\n\t    JSXNamespacedName: 'JSXNamespacedName',\n\t    JSXOpeningElement: 'JSXOpeningElement',\n\t    JSXSpreadAttribute: 'JSXSpreadAttribute',\n\t    JSXText: 'JSXText'\n\t};\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tvar syntax_1 = __webpack_require__(2);\n\t/* tslint:disable:max-classes-per-file */\n\tvar ArrayExpression = (function () {\n\t    function ArrayExpression(elements) {\n\t        this.type = syntax_1.Syntax.ArrayExpression;\n\t        this.elements = elements;\n\t    }\n\t    return ArrayExpression;\n\t}());\n\texports.ArrayExpression = ArrayExpression;\n\tvar ArrayPattern = (function () {\n\t    function ArrayPattern(elements) {\n\t        this.type = syntax_1.Syntax.ArrayPattern;\n\t        this.elements = elements;\n\t    }\n\t    return ArrayPattern;\n\t}());\n\texports.ArrayPattern = ArrayPattern;\n\tvar ArrowFunctionExpression = (function () {\n\t    function ArrowFunctionExpression(params, body, expression) {\n\t        this.type = syntax_1.Syntax.ArrowFunctionExpression;\n\t        this.id = null;\n\t        this.params = params;\n\t        this.body = body;\n\t        this.generator = false;\n\t        this.expression = expression;\n\t        this.async = false;\n\t    }\n\t    return ArrowFunctionExpression;\n\t}());\n\texports.ArrowFunctionExpression = ArrowFunctionExpression;\n\tvar AssignmentExpression = (function () {\n\t    function AssignmentExpression(operator, left, right) {\n\t        this.type = syntax_1.Syntax.AssignmentExpression;\n\t        this.operator = operator;\n\t        this.left = left;\n\t        this.right = right;\n\t    }\n\t    return AssignmentExpression;\n\t}());\n\texports.AssignmentExpression = AssignmentExpression;\n\tvar AssignmentPattern = (function () {\n\t    function AssignmentPattern(left, right) {\n\t        this.type = syntax_1.Syntax.AssignmentPattern;\n\t        this.left = left;\n\t        this.right = right;\n\t    }\n\t    return AssignmentPattern;\n\t}());\n\texports.AssignmentPattern = AssignmentPattern;\n\tvar AsyncArrowFunctionExpression = (function () {\n\t    function AsyncArrowFunctionExpression(params, body, expression) {\n\t        this.type = syntax_1.Syntax.ArrowFunctionExpression;\n\t        this.id = null;\n\t        this.params = params;\n\t        this.body = body;\n\t        this.generator = false;\n\t        this.expression = expression;\n\t        this.async = true;\n\t    }\n\t    return AsyncArrowFunctionExpression;\n\t}());\n\texports.AsyncArrowFunctionExpression = AsyncArrowFunctionExpression;\n\tvar AsyncFunctionDeclaration = (function () {\n\t    function AsyncFunctionDeclaration(id, params, body) {\n\t        this.type = syntax_1.Syntax.FunctionDeclaration;\n\t        this.id = id;\n\t        this.params = params;\n\t        this.body = body;\n\t        this.generator = false;\n\t        this.expression = false;\n\t        this.async = true;\n\t    }\n\t    return AsyncFunctionDeclaration;\n\t}());\n\texports.AsyncFunctionDeclaration = AsyncFunctionDeclaration;\n\tvar AsyncFunctionExpression = (function () {\n\t    function AsyncFunctionExpression(id, params, body) {\n\t        this.type = syntax_1.Syntax.FunctionExpression;\n\t        this.id = id;\n\t        this.params = params;\n\t        this.body = body;\n\t        this.generator = false;\n\t        this.expression = false;\n\t        this.async = true;\n\t    }\n\t    return AsyncFunctionExpression;\n\t}());\n\texports.AsyncFunctionExpression = AsyncFunctionExpression;\n\tvar AwaitExpression = (function () {\n\t    function AwaitExpression(argument) {\n\t        this.type = syntax_1.Syntax.AwaitExpression;\n\t        this.argument = argument;\n\t    }\n\t    return AwaitExpression;\n\t}());\n\texports.AwaitExpression = AwaitExpression;\n\tvar BinaryExpression = (function () {\n\t    function BinaryExpression(operator, left, right) {\n\t        var logical = (operator === '||' || operator === '&&');\n\t        this.type = logical ? syntax_1.Syntax.LogicalExpression : syntax_1.Syntax.BinaryExpression;\n\t        this.operator = operator;\n\t        this.left = left;\n\t        this.right = right;\n\t    }\n\t    return BinaryExpression;\n\t}());\n\texports.BinaryExpression = BinaryExpression;\n\tvar BlockStatement = (function () {\n\t    function BlockStatement(body) {\n\t        this.type = syntax_1.Syntax.BlockStatement;\n\t        this.body = body;\n\t    }\n\t    return BlockStatement;\n\t}());\n\texports.BlockStatement = BlockStatement;\n\tvar BreakStatement = (function () {\n\t    function BreakStatement(label) {\n\t        this.type = syntax_1.Syntax.BreakStatement;\n\t        this.label = label;\n\t    }\n\t    return BreakStatement;\n\t}());\n\texports.BreakStatement = BreakStatement;\n\tvar CallExpression = (function () {\n\t    function CallExpression(callee, args) {\n\t        this.type = syntax_1.Syntax.CallExpression;\n\t        this.callee = callee;\n\t        this.arguments = args;\n\t    }\n\t    return CallExpression;\n\t}());\n\texports.CallExpression = CallExpression;\n\tvar CatchClause = (function () {\n\t    function CatchClause(param, body) {\n\t        this.type = syntax_1.Syntax.CatchClause;\n\t        this.param = param;\n\t        this.body = body;\n\t    }\n\t    return CatchClause;\n\t}());\n\texports.CatchClause = CatchClause;\n\tvar ClassBody = (function () {\n\t    function ClassBody(body) {\n\t        this.type = syntax_1.Syntax.ClassBody;\n\t        this.body = body;\n\t    }\n\t    return ClassBody;\n\t}());\n\texports.ClassBody = ClassBody;\n\tvar ClassDeclaration = (function () {\n\t    function ClassDeclaration(id, superClass, body) {\n\t        this.type = syntax_1.Syntax.ClassDeclaration;\n\t        this.id = id;\n\t        this.superClass = superClass;\n\t        this.body = body;\n\t    }\n\t    return ClassDeclaration;\n\t}());\n\texports.ClassDeclaration = ClassDeclaration;\n\tvar ClassExpression = (function () {\n\t    function ClassExpression(id, superClass, body) {\n\t        this.type = syntax_1.Syntax.ClassExpression;\n\t        this.id = id;\n\t        this.superClass = superClass;\n\t        this.body = body;\n\t    }\n\t    return ClassExpression;\n\t}());\n\texports.ClassExpression = ClassExpression;\n\tvar ComputedMemberExpression = (function () {\n\t    function ComputedMemberExpression(object, property) {\n\t        this.type = syntax_1.Syntax.MemberExpression;\n\t        this.computed = true;\n\t        this.object = object;\n\t        this.property = property;\n\t    }\n\t    return ComputedMemberExpression;\n\t}());\n\texports.ComputedMemberExpression = ComputedMemberExpression;\n\tvar ConditionalExpression = (function () {\n\t    function ConditionalExpression(test, consequent, alternate) {\n\t        this.type = syntax_1.Syntax.ConditionalExpression;\n\t        this.test = test;\n\t        this.consequent = consequent;\n\t        this.alternate = alternate;\n\t    }\n\t    return ConditionalExpression;\n\t}());\n\texports.ConditionalExpression = ConditionalExpression;\n\tvar ContinueStatement = (function () {\n\t    function ContinueStatement(label) {\n\t        this.type = syntax_1.Syntax.ContinueStatement;\n\t        this.label = label;\n\t    }\n\t    return ContinueStatement;\n\t}());\n\texports.ContinueStatement = ContinueStatement;\n\tvar DebuggerStatement = (function () {\n\t    function DebuggerStatement() {\n\t        this.type = syntax_1.Syntax.DebuggerStatement;\n\t    }\n\t    return DebuggerStatement;\n\t}());\n\texports.DebuggerStatement = DebuggerStatement;\n\tvar Directive = (function () {\n\t    function Directive(expression, directive) {\n\t        this.type = syntax_1.Syntax.ExpressionStatement;\n\t        this.expression = expression;\n\t        this.directive = directive;\n\t    }\n\t    return Directive;\n\t}());\n\texports.Directive = Directive;\n\tvar DoWhileStatement = (function () {\n\t    function DoWhileStatement(body, test) {\n\t        this.type = syntax_1.Syntax.DoWhileStatement;\n\t        this.body = body;\n\t        this.test = test;\n\t    }\n\t    return DoWhileStatement;\n\t}());\n\texports.DoWhileStatement = DoWhileStatement;\n\tvar EmptyStatement = (function () {\n\t    function EmptyStatement() {\n\t        this.type = syntax_1.Syntax.EmptyStatement;\n\t    }\n\t    return EmptyStatement;\n\t}());\n\texports.EmptyStatement = EmptyStatement;\n\tvar ExportAllDeclaration = (function () {\n\t    function ExportAllDeclaration(source) {\n\t        this.type = syntax_1.Syntax.ExportAllDeclaration;\n\t        this.source = source;\n\t    }\n\t    return ExportAllDeclaration;\n\t}());\n\texports.ExportAllDeclaration = ExportAllDeclaration;\n\tvar ExportDefaultDeclaration = (function () {\n\t    function ExportDefaultDeclaration(declaration) {\n\t        this.type = syntax_1.Syntax.ExportDefaultDeclaration;\n\t        this.declaration = declaration;\n\t    }\n\t    return ExportDefaultDeclaration;\n\t}());\n\texports.ExportDefaultDeclaration = ExportDefaultDeclaration;\n\tvar ExportNamedDeclaration = (function () {\n\t    function ExportNamedDeclaration(declaration, specifiers, source) {\n\t        this.type = syntax_1.Syntax.ExportNamedDeclaration;\n\t        this.declaration = declaration;\n\t        this.specifiers = specifiers;\n\t        this.source = source;\n\t    }\n\t    return ExportNamedDeclaration;\n\t}());\n\texports.ExportNamedDeclaration = ExportNamedDeclaration;\n\tvar ExportSpecifier = (function () {\n\t    function ExportSpecifier(local, exported) {\n\t        this.type = syntax_1.Syntax.ExportSpecifier;\n\t        this.exported = exported;\n\t        this.local = local;\n\t    }\n\t    return ExportSpecifier;\n\t}());\n\texports.ExportSpecifier = ExportSpecifier;\n\tvar ExpressionStatement = (function () {\n\t    function ExpressionStatement(expression) {\n\t        this.type = syntax_1.Syntax.ExpressionStatement;\n\t        this.expression = expression;\n\t    }\n\t    return ExpressionStatement;\n\t}());\n\texports.ExpressionStatement = ExpressionStatement;\n\tvar ForInStatement = (function () {\n\t    function ForInStatement(left, right, body) {\n\t        this.type = syntax_1.Syntax.ForInStatement;\n\t        this.left = left;\n\t        this.right = right;\n\t        this.body = body;\n\t        this.each = false;\n\t    }\n\t    return ForInStatement;\n\t}());\n\texports.ForInStatement = ForInStatement;\n\tvar ForOfStatement = (function () {\n\t    function ForOfStatement(left, right, body) {\n\t        this.type = syntax_1.Syntax.ForOfStatement;\n\t        this.left = left;\n\t        this.right = right;\n\t        this.body = body;\n\t    }\n\t    return ForOfStatement;\n\t}());\n\texports.ForOfStatement = ForOfStatement;\n\tvar ForStatement = (function () {\n\t    function ForStatement(init, test, update, body) {\n\t        this.type = syntax_1.Syntax.ForStatement;\n\t        this.init = init;\n\t        this.test = test;\n\t        this.update = update;\n\t        this.body = body;\n\t    }\n\t    return ForStatement;\n\t}());\n\texports.ForStatement = ForStatement;\n\tvar FunctionDeclaration = (function () {\n\t    function FunctionDeclaration(id, params, body, generator) {\n\t        this.type = syntax_1.Syntax.FunctionDeclaration;\n\t        this.id = id;\n\t        this.params = params;\n\t        this.body = body;\n\t        this.generator = generator;\n\t        this.expression = false;\n\t        this.async = false;\n\t    }\n\t    return FunctionDeclaration;\n\t}());\n\texports.FunctionDeclaration = FunctionDeclaration;\n\tvar FunctionExpression = (function () {\n\t    function FunctionExpression(id, params, body, generator) {\n\t        this.type = syntax_1.Syntax.FunctionExpression;\n\t        this.id = id;\n\t        this.params = params;\n\t        this.body = body;\n\t        this.generator = generator;\n\t        this.expression = false;\n\t        this.async = false;\n\t    }\n\t    return FunctionExpression;\n\t}());\n\texports.FunctionExpression = FunctionExpression;\n\tvar Identifier = (function () {\n\t    function Identifier(name) {\n\t        this.type = syntax_1.Syntax.Identifier;\n\t        this.name = name;\n\t    }\n\t    return Identifier;\n\t}());\n\texports.Identifier = Identifier;\n\tvar IfStatement = (function () {\n\t    function IfStatement(test, consequent, alternate) {\n\t        this.type = syntax_1.Syntax.IfStatement;\n\t        this.test = test;\n\t        this.consequent = consequent;\n\t        this.alternate = alternate;\n\t    }\n\t    return IfStatement;\n\t}());\n\texports.IfStatement = IfStatement;\n\tvar ImportDeclaration = (function () {\n\t    function ImportDeclaration(specifiers, source) {\n\t        this.type = syntax_1.Syntax.ImportDeclaration;\n\t        this.specifiers = specifiers;\n\t        this.source = source;\n\t    }\n\t    return ImportDeclaration;\n\t}());\n\texports.ImportDeclaration = ImportDeclaration;\n\tvar ImportDefaultSpecifier = (function () {\n\t    function ImportDefaultSpecifier(local) {\n\t        this.type = syntax_1.Syntax.ImportDefaultSpecifier;\n\t        this.local = local;\n\t    }\n\t    return ImportDefaultSpecifier;\n\t}());\n\texports.ImportDefaultSpecifier = ImportDefaultSpecifier;\n\tvar ImportNamespaceSpecifier = (function () {\n\t    function ImportNamespaceSpecifier(local) {\n\t        this.type = syntax_1.Syntax.ImportNamespaceSpecifier;\n\t        this.local = local;\n\t    }\n\t    return ImportNamespaceSpecifier;\n\t}());\n\texports.ImportNamespaceSpecifier = ImportNamespaceSpecifier;\n\tvar ImportSpecifier = (function () {\n\t    function ImportSpecifier(local, imported) {\n\t        this.type = syntax_1.Syntax.ImportSpecifier;\n\t        this.local = local;\n\t        this.imported = imported;\n\t    }\n\t    return ImportSpecifier;\n\t}());\n\texports.ImportSpecifier = ImportSpecifier;\n\tvar LabeledStatement = (function () {\n\t    function LabeledStatement(label, body) {\n\t        this.type = syntax_1.Syntax.LabeledStatement;\n\t        this.label = label;\n\t        this.body = body;\n\t    }\n\t    return LabeledStatement;\n\t}());\n\texports.LabeledStatement = LabeledStatement;\n\tvar Literal = (function () {\n\t    function Literal(value, raw) {\n\t        this.type = syntax_1.Syntax.Literal;\n\t        this.value = value;\n\t        this.raw = raw;\n\t    }\n\t    return Literal;\n\t}());\n\texports.Literal = Literal;\n\tvar MetaProperty = (function () {\n\t    function MetaProperty(meta, property) {\n\t        this.type = syntax_1.Syntax.MetaProperty;\n\t        this.meta = meta;\n\t        this.property = property;\n\t    }\n\t    return MetaProperty;\n\t}());\n\texports.MetaProperty = MetaProperty;\n\tvar MethodDefinition = (function () {\n\t    function MethodDefinition(key, computed, value, kind, isStatic) {\n\t        this.type = syntax_1.Syntax.MethodDefinition;\n\t        this.key = key;\n\t        this.computed = computed;\n\t        this.value = value;\n\t        this.kind = kind;\n\t        this.static = isStatic;\n\t    }\n\t    return MethodDefinition;\n\t}());\n\texports.MethodDefinition = MethodDefinition;\n\tvar Module = (function () {\n\t    function Module(body) {\n\t        this.type = syntax_1.Syntax.Program;\n\t        this.body = body;\n\t        this.sourceType = 'module';\n\t    }\n\t    return Module;\n\t}());\n\texports.Module = Module;\n\tvar NewExpression = (function () {\n\t    function NewExpression(callee, args) {\n\t        this.type = syntax_1.Syntax.NewExpression;\n\t        this.callee = callee;\n\t        this.arguments = args;\n\t    }\n\t    return NewExpression;\n\t}());\n\texports.NewExpression = NewExpression;\n\tvar ObjectExpression = (function () {\n\t    function ObjectExpression(properties) {\n\t        this.type = syntax_1.Syntax.ObjectExpression;\n\t        this.properties = properties;\n\t    }\n\t    return ObjectExpression;\n\t}());\n\texports.ObjectExpression = ObjectExpression;\n\tvar ObjectPattern = (function () {\n\t    function ObjectPattern(properties) {\n\t        this.type = syntax_1.Syntax.ObjectPattern;\n\t        this.properties = properties;\n\t    }\n\t    return ObjectPattern;\n\t}());\n\texports.ObjectPattern = ObjectPattern;\n\tvar Property = (function () {\n\t    function Property(kind, key, computed, value, method, shorthand) {\n\t        this.type = syntax_1.Syntax.Property;\n\t        this.key = key;\n\t        this.computed = computed;\n\t        this.value = value;\n\t        this.kind = kind;\n\t        this.method = method;\n\t        this.shorthand = shorthand;\n\t    }\n\t    return Property;\n\t}());\n\texports.Property = Property;\n\tvar RegexLiteral = (function () {\n\t    function RegexLiteral(value, raw, pattern, flags) {\n\t        this.type = syntax_1.Syntax.Literal;\n\t        this.value = value;\n\t        this.raw = raw;\n\t        this.regex = { pattern: pattern, flags: flags };\n\t    }\n\t    return RegexLiteral;\n\t}());\n\texports.RegexLiteral = RegexLiteral;\n\tvar RestElement = (function () {\n\t    function RestElement(argument) {\n\t        this.type = syntax_1.Syntax.RestElement;\n\t        this.argument = argument;\n\t    }\n\t    return RestElement;\n\t}());\n\texports.RestElement = RestElement;\n\tvar ReturnStatement = (function () {\n\t    function ReturnStatement(argument) {\n\t        this.type = syntax_1.Syntax.ReturnStatement;\n\t        this.argument = argument;\n\t    }\n\t    return ReturnStatement;\n\t}());\n\texports.ReturnStatement = ReturnStatement;\n\tvar Script = (function () {\n\t    function Script(body) {\n\t        this.type = syntax_1.Syntax.Program;\n\t        this.body = body;\n\t        this.sourceType = 'script';\n\t    }\n\t    return Script;\n\t}());\n\texports.Script = Script;\n\tvar SequenceExpression = (function () {\n\t    function SequenceExpression(expressions) {\n\t        this.type = syntax_1.Syntax.SequenceExpression;\n\t        this.expressions = expressions;\n\t    }\n\t    return SequenceExpression;\n\t}());\n\texports.SequenceExpression = SequenceExpression;\n\tvar SpreadElement = (function () {\n\t    function SpreadElement(argument) {\n\t        this.type = syntax_1.Syntax.SpreadElement;\n\t        this.argument = argument;\n\t    }\n\t    return SpreadElement;\n\t}());\n\texports.SpreadElement = SpreadElement;\n\tvar StaticMemberExpression = (function () {\n\t    function StaticMemberExpression(object, property) {\n\t        this.type = syntax_1.Syntax.MemberExpression;\n\t        this.computed = false;\n\t        this.object = object;\n\t        this.property = property;\n\t    }\n\t    return StaticMemberExpression;\n\t}());\n\texports.StaticMemberExpression = StaticMemberExpression;\n\tvar Super = (function () {\n\t    function Super() {\n\t        this.type = syntax_1.Syntax.Super;\n\t    }\n\t    return Super;\n\t}());\n\texports.Super = Super;\n\tvar SwitchCase = (function () {\n\t    function SwitchCase(test, consequent) {\n\t        this.type = syntax_1.Syntax.SwitchCase;\n\t        this.test = test;\n\t        this.consequent = consequent;\n\t    }\n\t    return SwitchCase;\n\t}());\n\texports.SwitchCase = SwitchCase;\n\tvar SwitchStatement = (function () {\n\t    function SwitchStatement(discriminant, cases) {\n\t        this.type = syntax_1.Syntax.SwitchStatement;\n\t        this.discriminant = discriminant;\n\t        this.cases = cases;\n\t    }\n\t    return SwitchStatement;\n\t}());\n\texports.SwitchStatement = SwitchStatement;\n\tvar TaggedTemplateExpression = (function () {\n\t    function TaggedTemplateExpression(tag, quasi) {\n\t        this.type = syntax_1.Syntax.TaggedTemplateExpression;\n\t        this.tag = tag;\n\t        this.quasi = quasi;\n\t    }\n\t    return TaggedTemplateExpression;\n\t}());\n\texports.TaggedTemplateExpression = TaggedTemplateExpression;\n\tvar TemplateElement = (function () {\n\t    function TemplateElement(value, tail) {\n\t        this.type = syntax_1.Syntax.TemplateElement;\n\t        this.value = value;\n\t        this.tail = tail;\n\t    }\n\t    return TemplateElement;\n\t}());\n\texports.TemplateElement = TemplateElement;\n\tvar TemplateLiteral = (function () {\n\t    function TemplateLiteral(quasis, expressions) {\n\t        this.type = syntax_1.Syntax.TemplateLiteral;\n\t        this.quasis = quasis;\n\t        this.expressions = expressions;\n\t    }\n\t    return TemplateLiteral;\n\t}());\n\texports.TemplateLiteral = TemplateLiteral;\n\tvar ThisExpression = (function () {\n\t    function ThisExpression() {\n\t        this.type = syntax_1.Syntax.ThisExpression;\n\t    }\n\t    return ThisExpression;\n\t}());\n\texports.ThisExpression = ThisExpression;\n\tvar ThrowStatement = (function () {\n\t    function ThrowStatement(argument) {\n\t        this.type = syntax_1.Syntax.ThrowStatement;\n\t        this.argument = argument;\n\t    }\n\t    return ThrowStatement;\n\t}());\n\texports.ThrowStatement = ThrowStatement;\n\tvar TryStatement = (function () {\n\t    function TryStatement(block, handler, finalizer) {\n\t        this.type = syntax_1.Syntax.TryStatement;\n\t        this.block = block;\n\t        this.handler = handler;\n\t        this.finalizer = finalizer;\n\t    }\n\t    return TryStatement;\n\t}());\n\texports.TryStatement = TryStatement;\n\tvar UnaryExpression = (function () {\n\t    function UnaryExpression(operator, argument) {\n\t        this.type = syntax_1.Syntax.UnaryExpression;\n\t        this.operator = operator;\n\t        this.argument = argument;\n\t        this.prefix = true;\n\t    }\n\t    return UnaryExpression;\n\t}());\n\texports.UnaryExpression = UnaryExpression;\n\tvar UpdateExpression = (function () {\n\t    function UpdateExpression(operator, argument, prefix) {\n\t        this.type = syntax_1.Syntax.UpdateExpression;\n\t        this.operator = operator;\n\t        this.argument = argument;\n\t        this.prefix = prefix;\n\t    }\n\t    return UpdateExpression;\n\t}());\n\texports.UpdateExpression = UpdateExpression;\n\tvar VariableDeclaration = (function () {\n\t    function VariableDeclaration(declarations, kind) {\n\t        this.type = syntax_1.Syntax.VariableDeclaration;\n\t        this.declarations = declarations;\n\t        this.kind = kind;\n\t    }\n\t    return VariableDeclaration;\n\t}());\n\texports.VariableDeclaration = VariableDeclaration;\n\tvar VariableDeclarator = (function () {\n\t    function VariableDeclarator(id, init) {\n\t        this.type = syntax_1.Syntax.VariableDeclarator;\n\t        this.id = id;\n\t        this.init = init;\n\t    }\n\t    return VariableDeclarator;\n\t}());\n\texports.VariableDeclarator = VariableDeclarator;\n\tvar WhileStatement = (function () {\n\t    function WhileStatement(test, body) {\n\t        this.type = syntax_1.Syntax.WhileStatement;\n\t        this.test = test;\n\t        this.body = body;\n\t    }\n\t    return WhileStatement;\n\t}());\n\texports.WhileStatement = WhileStatement;\n\tvar WithStatement = (function () {\n\t    function WithStatement(object, body) {\n\t        this.type = syntax_1.Syntax.WithStatement;\n\t        this.object = object;\n\t        this.body = body;\n\t    }\n\t    return WithStatement;\n\t}());\n\texports.WithStatement = WithStatement;\n\tvar YieldExpression = (function () {\n\t    function YieldExpression(argument, delegate) {\n\t        this.type = syntax_1.Syntax.YieldExpression;\n\t        this.argument = argument;\n\t        this.delegate = delegate;\n\t    }\n\t    return YieldExpression;\n\t}());\n\texports.YieldExpression = YieldExpression;\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tvar assert_1 = __webpack_require__(9);\n\tvar error_handler_1 = __webpack_require__(10);\n\tvar messages_1 = __webpack_require__(11);\n\tvar Node = __webpack_require__(7);\n\tvar scanner_1 = __webpack_require__(12);\n\tvar syntax_1 = __webpack_require__(2);\n\tvar token_1 = __webpack_require__(13);\n\tvar ArrowParameterPlaceHolder = 'ArrowParameterPlaceHolder';\n\tvar Parser = (function () {\n\t    function Parser(code, options, delegate) {\n\t        if (options === void 0) { options = {}; }\n\t        this.config = {\n\t            range: (typeof options.range === 'boolean') && options.range,\n\t            loc: (typeof options.loc === 'boolean') && options.loc,\n\t            source: null,\n\t            tokens: (typeof options.tokens === 'boolean') && options.tokens,\n\t            comment: (typeof options.comment === 'boolean') && options.comment,\n\t            tolerant: (typeof options.tolerant === 'boolean') && options.tolerant\n\t        };\n\t        if (this.config.loc && options.source && options.source !== null) {\n\t            this.config.source = String(options.source);\n\t        }\n\t        this.delegate = delegate;\n\t        this.errorHandler = new error_handler_1.ErrorHandler();\n\t        this.errorHandler.tolerant = this.config.tolerant;\n\t        this.scanner = new scanner_1.Scanner(code, this.errorHandler);\n\t        this.scanner.trackComment = this.config.comment;\n\t        this.operatorPrecedence = {\n\t            ')': 0,\n\t            ';': 0,\n\t            ',': 0,\n\t            '=': 0,\n\t            ']': 0,\n\t            '||': 1,\n\t            '&&': 2,\n\t            '|': 3,\n\t            '^': 4,\n\t            '&': 5,\n\t            '==': 6,\n\t            '!=': 6,\n\t            '===': 6,\n\t            '!==': 6,\n\t            '<': 7,\n\t            '>': 7,\n\t            '<=': 7,\n\t            '>=': 7,\n\t            '<<': 8,\n\t            '>>': 8,\n\t            '>>>': 8,\n\t            '+': 9,\n\t            '-': 9,\n\t            '*': 11,\n\t            '/': 11,\n\t            '%': 11\n\t        };\n\t        this.lookahead = {\n\t            type: 2 /* EOF */,\n\t            value: '',\n\t            lineNumber: this.scanner.lineNumber,\n\t            lineStart: 0,\n\t            start: 0,\n\t            end: 0\n\t        };\n\t        this.hasLineTerminator = false;\n\t        this.context = {\n\t            isModule: false,\n\t            await: false,\n\t            allowIn: true,\n\t            allowStrictDirective: true,\n\t            allowYield: true,\n\t            firstCoverInitializedNameError: null,\n\t            isAssignmentTarget: false,\n\t            isBindingElement: false,\n\t            inFunctionBody: false,\n\t            inIteration: false,\n\t            inSwitch: false,\n\t            labelSet: {},\n\t            strict: false\n\t        };\n\t        this.tokens = [];\n\t        this.startMarker = {\n\t            index: 0,\n\t            line: this.scanner.lineNumber,\n\t            column: 0\n\t        };\n\t        this.lastMarker = {\n\t            index: 0,\n\t            line: this.scanner.lineNumber,\n\t            column: 0\n\t        };\n\t        this.nextToken();\n\t        this.lastMarker = {\n\t            index: this.scanner.index,\n\t            line: this.scanner.lineNumber,\n\t            column: this.scanner.index - this.scanner.lineStart\n\t        };\n\t    }\n\t    Parser.prototype.throwError = function (messageFormat) {\n\t        var values = [];\n\t        for (var _i = 1; _i < arguments.length; _i++) {\n\t            values[_i - 1] = arguments[_i];\n\t        }\n\t        var args = Array.prototype.slice.call(arguments, 1);\n\t        var msg = messageFormat.replace(/%(\\d)/g, function (whole, idx) {\n\t            assert_1.assert(idx < args.length, 'Message reference must be in range');\n\t            return args[idx];\n\t        });\n\t        var index = this.lastMarker.index;\n\t        var line = this.lastMarker.line;\n\t        var column = this.lastMarker.column + 1;\n\t        throw this.errorHandler.createError(index, line, column, msg);\n\t    };\n\t    Parser.prototype.tolerateError = function (messageFormat) {\n\t        var values = [];\n\t        for (var _i = 1; _i < arguments.length; _i++) {\n\t            values[_i - 1] = arguments[_i];\n\t        }\n\t        var args = Array.prototype.slice.call(arguments, 1);\n\t        var msg = messageFormat.replace(/%(\\d)/g, function (whole, idx) {\n\t            assert_1.assert(idx < args.length, 'Message reference must be in range');\n\t            return args[idx];\n\t        });\n\t        var index = this.lastMarker.index;\n\t        var line = this.scanner.lineNumber;\n\t        var column = this.lastMarker.column + 1;\n\t        this.errorHandler.tolerateError(index, line, column, msg);\n\t    };\n\t    // Throw an exception because of the token.\n\t    Parser.prototype.unexpectedTokenError = function (token, message) {\n\t        var msg = message || messages_1.Messages.UnexpectedToken;\n\t        var value;\n\t        if (token) {\n\t            if (!message) {\n\t                msg = (token.type === 2 /* EOF */) ? messages_1.Messages.UnexpectedEOS :\n\t                    (token.type === 3 /* Identifier */) ? messages_1.Messages.UnexpectedIdentifier :\n\t                        (token.type === 6 /* NumericLiteral */) ? messages_1.Messages.UnexpectedNumber :\n\t                            (token.type === 8 /* StringLiteral */) ? messages_1.Messages.UnexpectedString :\n\t                                (token.type === 10 /* Template */) ? messages_1.Messages.UnexpectedTemplate :\n\t                                    messages_1.Messages.UnexpectedToken;\n\t                if (token.type === 4 /* Keyword */) {\n\t                    if (this.scanner.isFutureReservedWord(token.value)) {\n\t                        msg = messages_1.Messages.UnexpectedReserved;\n\t                    }\n\t                    else if (this.context.strict && this.scanner.isStrictModeReservedWord(token.value)) {\n\t                        msg = messages_1.Messages.StrictReservedWord;\n\t                    }\n\t                }\n\t            }\n\t            value = token.value;\n\t        }\n\t        else {\n\t            value = 'ILLEGAL';\n\t        }\n\t        msg = msg.replace('%0', value);\n\t        if (token && typeof token.lineNumber === 'number') {\n\t            var index = token.start;\n\t            var line = token.lineNumber;\n\t            var lastMarkerLineStart = this.lastMarker.index - this.lastMarker.column;\n\t            var column = token.start - lastMarkerLineStart + 1;\n\t            return this.errorHandler.createError(index, line, column, msg);\n\t        }\n\t        else {\n\t            var index = this.lastMarker.index;\n\t            var line = this.lastMarker.line;\n\t            var column = this.lastMarker.column + 1;\n\t            return this.errorHandler.createError(index, line, column, msg);\n\t        }\n\t    };\n\t    Parser.prototype.throwUnexpectedToken = function (token, message) {\n\t        throw this.unexpectedTokenError(token, message);\n\t    };\n\t    Parser.prototype.tolerateUnexpectedToken = function (token, message) {\n\t        this.errorHandler.tolerate(this.unexpectedTokenError(token, message));\n\t    };\n\t    Parser.prototype.collectComments = function () {\n\t        if (!this.config.comment) {\n\t            this.scanner.scanComments();\n\t        }\n\t        else {\n\t            var comments = this.scanner.scanComments();\n\t            if (comments.length > 0 && this.delegate) {\n\t                for (var i = 0; i < comments.length; ++i) {\n\t                    var e = comments[i];\n\t                    var node = void 0;\n\t                    node = {\n\t                        type: e.multiLine ? 'BlockComment' : 'LineComment',\n\t                        value: this.scanner.source.slice(e.slice[0], e.slice[1])\n\t                    };\n\t                    if (this.config.range) {\n\t                        node.range = e.range;\n\t                    }\n\t                    if (this.config.loc) {\n\t                        node.loc = e.loc;\n\t                    }\n\t                    var metadata = {\n\t                        start: {\n\t                            line: e.loc.start.line,\n\t                            column: e.loc.start.column,\n\t                            offset: e.range[0]\n\t                        },\n\t                        end: {\n\t                            line: e.loc.end.line,\n\t                            column: e.loc.end.column,\n\t                            offset: e.range[1]\n\t                        }\n\t                    };\n\t                    this.delegate(node, metadata);\n\t                }\n\t            }\n\t        }\n\t    };\n\t    // From internal representation to an external structure\n\t    Parser.prototype.getTokenRaw = function (token) {\n\t        return this.scanner.source.slice(token.start, token.end);\n\t    };\n\t    Parser.prototype.convertToken = function (token) {\n\t        var t = {\n\t            type: token_1.TokenName[token.type],\n\t            value: this.getTokenRaw(token)\n\t        };\n\t        if (this.config.range) {\n\t            t.range = [token.start, token.end];\n\t        }\n\t        if (this.config.loc) {\n\t            t.loc = {\n\t                start: {\n\t                    line: this.startMarker.line,\n\t                    column: this.startMarker.column\n\t                },\n\t                end: {\n\t                    line: this.scanner.lineNumber,\n\t                    column: this.scanner.index - this.scanner.lineStart\n\t                }\n\t            };\n\t        }\n\t        if (token.type === 9 /* RegularExpression */) {\n\t            var pattern = token.pattern;\n\t            var flags = token.flags;\n\t            t.regex = { pattern: pattern, flags: flags };\n\t        }\n\t        return t;\n\t    };\n\t    Parser.prototype.nextToken = function () {\n\t        var token = this.lookahead;\n\t        this.lastMarker.index = this.scanner.index;\n\t        this.lastMarker.line = this.scanner.lineNumber;\n\t        this.lastMarker.column = this.scanner.index - this.scanner.lineStart;\n\t        this.collectComments();\n\t        if (this.scanner.index !== this.startMarker.index) {\n\t            this.startMarker.index = this.scanner.index;\n\t            this.startMarker.line = this.scanner.lineNumber;\n\t            this.startMarker.column = this.scanner.index - this.scanner.lineStart;\n\t        }\n\t        var next = this.scanner.lex();\n\t        this.hasLineTerminator = (token.lineNumber !== next.lineNumber);\n\t        if (next && this.context.strict && next.type === 3 /* Identifier */) {\n\t            if (this.scanner.isStrictModeReservedWord(next.value)) {\n\t                next.type = 4 /* Keyword */;\n\t            }\n\t        }\n\t        this.lookahead = next;\n\t        if (this.config.tokens && next.type !== 2 /* EOF */) {\n\t            this.tokens.push(this.convertToken(next));\n\t        }\n\t        return token;\n\t    };\n\t    Parser.prototype.nextRegexToken = function () {\n\t        this.collectComments();\n\t        var token = this.scanner.scanRegExp();\n\t        if (this.config.tokens) {\n\t            // Pop the previous token, '/' or '/='\n\t            // This is added from the lookahead token.\n\t            this.tokens.pop();\n\t            this.tokens.push(this.convertToken(token));\n\t        }\n\t        // Prime the next lookahead.\n\t        this.lookahead = token;\n\t        this.nextToken();\n\t        return token;\n\t    };\n\t    Parser.prototype.createNode = function () {\n\t        return {\n\t            index: this.startMarker.index,\n\t            line: this.startMarker.line,\n\t            column: this.startMarker.column\n\t        };\n\t    };\n\t    Parser.prototype.startNode = function (token, lastLineStart) {\n\t        if (lastLineStart === void 0) { lastLineStart = 0; }\n\t        var column = token.start - token.lineStart;\n\t        var line = token.lineNumber;\n\t        if (column < 0) {\n\t            column += lastLineStart;\n\t            line--;\n\t        }\n\t        return {\n\t            index: token.start,\n\t            line: line,\n\t            column: column\n\t        };\n\t    };\n\t    Parser.prototype.finalize = function (marker, node) {\n\t        if (this.config.range) {\n\t            node.range = [marker.index, this.lastMarker.index];\n\t        }\n\t        if (this.config.loc) {\n\t            node.loc = {\n\t                start: {\n\t                    line: marker.line,\n\t                    column: marker.column,\n\t                },\n\t                end: {\n\t                    line: this.lastMarker.line,\n\t                    column: this.lastMarker.column\n\t                }\n\t            };\n\t            if (this.config.source) {\n\t                node.loc.source = this.config.source;\n\t            }\n\t        }\n\t        if (this.delegate) {\n\t            var metadata = {\n\t                start: {\n\t                    line: marker.line,\n\t                    column: marker.column,\n\t                    offset: marker.index\n\t                },\n\t                end: {\n\t                    line: this.lastMarker.line,\n\t                    column: this.lastMarker.column,\n\t                    offset: this.lastMarker.index\n\t                }\n\t            };\n\t            this.delegate(node, metadata);\n\t        }\n\t        return node;\n\t    };\n\t    // Expect the next token to match the specified punctuator.\n\t    // If not, an exception will be thrown.\n\t    Parser.prototype.expect = function (value) {\n\t        var token = this.nextToken();\n\t        if (token.type !== 7 /* Punctuator */ || token.value !== value) {\n\t            this.throwUnexpectedToken(token);\n\t        }\n\t    };\n\t    // Quietly expect a comma when in tolerant mode, otherwise delegates to expect().\n\t    Parser.prototype.expectCommaSeparator = function () {\n\t        if (this.config.tolerant) {\n\t            var token = this.lookahead;\n\t            if (token.type === 7 /* Punctuator */ && token.value === ',') {\n\t                this.nextToken();\n\t            }\n\t            else if (token.type === 7 /* Punctuator */ && token.value === ';') {\n\t                this.nextToken();\n\t                this.tolerateUnexpectedToken(token);\n\t            }\n\t            else {\n\t                this.tolerateUnexpectedToken(token, messages_1.Messages.UnexpectedToken);\n\t            }\n\t        }\n\t        else {\n\t            this.expect(',');\n\t        }\n\t    };\n\t    // Expect the next token to match the specified keyword.\n\t    // If not, an exception will be thrown.\n\t    Parser.prototype.expectKeyword = function (keyword) {\n\t        var token = this.nextToken();\n\t        if (token.type !== 4 /* Keyword */ || token.value !== keyword) {\n\t            this.throwUnexpectedToken(token);\n\t        }\n\t    };\n\t    // Return true if the next token matches the specified punctuator.\n\t    Parser.prototype.match = function (value) {\n\t        return this.lookahead.type === 7 /* Punctuator */ && this.lookahead.value === value;\n\t    };\n\t    // Return true if the next token matches the specified keyword\n\t    Parser.prototype.matchKeyword = function (keyword) {\n\t        return this.lookahead.type === 4 /* Keyword */ && this.lookahead.value === keyword;\n\t    };\n\t    // Return true if the next token matches the specified contextual keyword\n\t    // (where an identifier is sometimes a keyword depending on the context)\n\t    Parser.prototype.matchContextualKeyword = function (keyword) {\n\t        return this.lookahead.type === 3 /* Identifier */ && this.lookahead.value === keyword;\n\t    };\n\t    // Return true if the next token is an assignment operator\n\t    Parser.prototype.matchAssign = function () {\n\t        if (this.lookahead.type !== 7 /* Punctuator */) {\n\t            return false;\n\t        }\n\t        var op = this.lookahead.value;\n\t        return op === '=' ||\n\t            op === '*=' ||\n\t            op === '**=' ||\n\t            op === '/=' ||\n\t            op === '%=' ||\n\t            op === '+=' ||\n\t            op === '-=' ||\n\t            op === '<<=' ||\n\t            op === '>>=' ||\n\t            op === '>>>=' ||\n\t            op === '&=' ||\n\t            op === '^=' ||\n\t            op === '|=';\n\t    };\n\t    // Cover grammar support.\n\t    //\n\t    // When an assignment expression position starts with an left parenthesis, the determination of the type\n\t    // of the syntax is to be deferred arbitrarily long until the end of the parentheses pair (plus a lookahead)\n\t    // or the first comma. This situation also defers the determination of all the expressions nested in the pair.\n\t    //\n\t    // There are three productions that can be parsed in a parentheses pair that needs to be determined\n\t    // after the outermost pair is closed. They are:\n\t    //\n\t    //   1. AssignmentExpression\n\t    //   2. BindingElements\n\t    //   3. AssignmentTargets\n\t    //\n\t    // In order to avoid exponential backtracking, we use two flags to denote if the production can be\n\t    // binding element or assignment target.\n\t    //\n\t    // The three productions have the relationship:\n\t    //\n\t    //   BindingElements ⊆ AssignmentTargets ⊆ AssignmentExpression\n\t    //\n\t    // with a single exception that CoverInitializedName when used directly in an Expression, generates\n\t    // an early error. Therefore, we need the third state, firstCoverInitializedNameError, to track the\n\t    // first usage of CoverInitializedName and report it when we reached the end of the parentheses pair.\n\t    //\n\t    // isolateCoverGrammar function runs the given parser function with a new cover grammar context, and it does not\n\t    // effect the current flags. This means the production the parser parses is only used as an expression. Therefore\n\t    // the CoverInitializedName check is conducted.\n\t    //\n\t    // inheritCoverGrammar function runs the given parse function with a new cover grammar context, and it propagates\n\t    // the flags outside of the parser. This means the production the parser parses is used as a part of a potential\n\t    // pattern. The CoverInitializedName check is deferred.\n\t    Parser.prototype.isolateCoverGrammar = function (parseFunction) {\n\t        var previousIsBindingElement = this.context.isBindingElement;\n\t        var previousIsAssignmentTarget = this.context.isAssignmentTarget;\n\t        var previousFirstCoverInitializedNameError = this.context.firstCoverInitializedNameError;\n\t        this.context.isBindingElement = true;\n\t        this.context.isAssignmentTarget = true;\n\t        this.context.firstCoverInitializedNameError = null;\n\t        var result = parseFunction.call(this);\n\t        if (this.context.firstCoverInitializedNameError !== null) {\n\t            this.throwUnexpectedToken(this.context.firstCoverInitializedNameError);\n\t        }\n\t        this.context.isBindingElement = previousIsBindingElement;\n\t        this.context.isAssignmentTarget = previousIsAssignmentTarget;\n\t        this.context.firstCoverInitializedNameError = previousFirstCoverInitializedNameError;\n\t        return result;\n\t    };\n\t    Parser.prototype.inheritCoverGrammar = function (parseFunction) {\n\t        var previousIsBindingElement = this.context.isBindingElement;\n\t        var previousIsAssignmentTarget = this.context.isAssignmentTarget;\n\t        var previousFirstCoverInitializedNameError = this.context.firstCoverInitializedNameError;\n\t        this.context.isBindingElement = true;\n\t        this.context.isAssignmentTarget = true;\n\t        this.context.firstCoverInitializedNameError = null;\n\t        var result = parseFunction.call(this);\n\t        this.context.isBindingElement = this.context.isBindingElement && previousIsBindingElement;\n\t        this.context.isAssignmentTarget = this.context.isAssignmentTarget && previousIsAssignmentTarget;\n\t        this.context.firstCoverInitializedNameError = previousFirstCoverInitializedNameError || this.context.firstCoverInitializedNameError;\n\t        return result;\n\t    };\n\t    Parser.prototype.consumeSemicolon = function () {\n\t        if (this.match(';')) {\n\t            this.nextToken();\n\t        }\n\t        else if (!this.hasLineTerminator) {\n\t            if (this.lookahead.type !== 2 /* EOF */ && !this.match('}')) {\n\t                this.throwUnexpectedToken(this.lookahead);\n\t            }\n\t            this.lastMarker.index = this.startMarker.index;\n\t            this.lastMarker.line = this.startMarker.line;\n\t            this.lastMarker.column = this.startMarker.column;\n\t        }\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-primary-expression\n\t    Parser.prototype.parsePrimaryExpression = function () {\n\t        var node = this.createNode();\n\t        var expr;\n\t        var token, raw;\n\t        switch (this.lookahead.type) {\n\t            case 3 /* Identifier */:\n\t                if ((this.context.isModule || this.context.await) && this.lookahead.value === 'await') {\n\t                    this.tolerateUnexpectedToken(this.lookahead);\n\t                }\n\t                expr = this.matchAsyncFunction() ? this.parseFunctionExpression() : this.finalize(node, new Node.Identifier(this.nextToken().value));\n\t                break;\n\t            case 6 /* NumericLiteral */:\n\t            case 8 /* StringLiteral */:\n\t                if (this.context.strict && this.lookahead.octal) {\n\t                    this.tolerateUnexpectedToken(this.lookahead, messages_1.Messages.StrictOctalLiteral);\n\t                }\n\t                this.context.isAssignmentTarget = false;\n\t                this.context.isBindingElement = false;\n\t                token = this.nextToken();\n\t                raw = this.getTokenRaw(token);\n\t                expr = this.finalize(node, new Node.Literal(token.value, raw));\n\t                break;\n\t            case 1 /* BooleanLiteral */:\n\t                this.context.isAssignmentTarget = false;\n\t                this.context.isBindingElement = false;\n\t                token = this.nextToken();\n\t                raw = this.getTokenRaw(token);\n\t                expr = this.finalize(node, new Node.Literal(token.value === 'true', raw));\n\t                break;\n\t            case 5 /* NullLiteral */:\n\t                this.context.isAssignmentTarget = false;\n\t                this.context.isBindingElement = false;\n\t                token = this.nextToken();\n\t                raw = this.getTokenRaw(token);\n\t                expr = this.finalize(node, new Node.Literal(null, raw));\n\t                break;\n\t            case 10 /* Template */:\n\t                expr = this.parseTemplateLiteral();\n\t                break;\n\t            case 7 /* Punctuator */:\n\t                switch (this.lookahead.value) {\n\t                    case '(':\n\t                        this.context.isBindingElement = false;\n\t                        expr = this.inheritCoverGrammar(this.parseGroupExpression);\n\t                        break;\n\t                    case '[':\n\t                        expr = this.inheritCoverGrammar(this.parseArrayInitializer);\n\t                        break;\n\t                    case '{':\n\t                        expr = this.inheritCoverGrammar(this.parseObjectInitializer);\n\t                        break;\n\t                    case '/':\n\t                    case '/=':\n\t                        this.context.isAssignmentTarget = false;\n\t                        this.context.isBindingElement = false;\n\t                        this.scanner.index = this.startMarker.index;\n\t                        token = this.nextRegexToken();\n\t                        raw = this.getTokenRaw(token);\n\t                        expr = this.finalize(node, new Node.RegexLiteral(token.regex, raw, token.pattern, token.flags));\n\t                        break;\n\t                    default:\n\t                        expr = this.throwUnexpectedToken(this.nextToken());\n\t                }\n\t                break;\n\t            case 4 /* Keyword */:\n\t                if (!this.context.strict && this.context.allowYield && this.matchKeyword('yield')) {\n\t                    expr = this.parseIdentifierName();\n\t                }\n\t                else if (!this.context.strict && this.matchKeyword('let')) {\n\t                    expr = this.finalize(node, new Node.Identifier(this.nextToken().value));\n\t                }\n\t                else {\n\t                    this.context.isAssignmentTarget = false;\n\t                    this.context.isBindingElement = false;\n\t                    if (this.matchKeyword('function')) {\n\t                        expr = this.parseFunctionExpression();\n\t                    }\n\t                    else if (this.matchKeyword('this')) {\n\t                        this.nextToken();\n\t                        expr = this.finalize(node, new Node.ThisExpression());\n\t                    }\n\t                    else if (this.matchKeyword('class')) {\n\t                        expr = this.parseClassExpression();\n\t                    }\n\t                    else {\n\t                        expr = this.throwUnexpectedToken(this.nextToken());\n\t                    }\n\t                }\n\t                break;\n\t            default:\n\t                expr = this.throwUnexpectedToken(this.nextToken());\n\t        }\n\t        return expr;\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-array-initializer\n\t    Parser.prototype.parseSpreadElement = function () {\n\t        var node = this.createNode();\n\t        this.expect('...');\n\t        var arg = this.inheritCoverGrammar(this.parseAssignmentExpression);\n\t        return this.finalize(node, new Node.SpreadElement(arg));\n\t    };\n\t    Parser.prototype.parseArrayInitializer = function () {\n\t        var node = this.createNode();\n\t        var elements = [];\n\t        this.expect('[');\n\t        while (!this.match(']')) {\n\t            if (this.match(',')) {\n\t                this.nextToken();\n\t                elements.push(null);\n\t            }\n\t            else if (this.match('...')) {\n\t                var element = this.parseSpreadElement();\n\t                if (!this.match(']')) {\n\t                    this.context.isAssignmentTarget = false;\n\t                    this.context.isBindingElement = false;\n\t                    this.expect(',');\n\t                }\n\t                elements.push(element);\n\t            }\n\t            else {\n\t                elements.push(this.inheritCoverGrammar(this.parseAssignmentExpression));\n\t                if (!this.match(']')) {\n\t                    this.expect(',');\n\t                }\n\t            }\n\t        }\n\t        this.expect(']');\n\t        return this.finalize(node, new Node.ArrayExpression(elements));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-object-initializer\n\t    Parser.prototype.parsePropertyMethod = function (params) {\n\t        this.context.isAssignmentTarget = false;\n\t        this.context.isBindingElement = false;\n\t        var previousStrict = this.context.strict;\n\t        var previousAllowStrictDirective = this.context.allowStrictDirective;\n\t        this.context.allowStrictDirective = params.simple;\n\t        var body = this.isolateCoverGrammar(this.parseFunctionSourceElements);\n\t        if (this.context.strict && params.firstRestricted) {\n\t            this.tolerateUnexpectedToken(params.firstRestricted, params.message);\n\t        }\n\t        if (this.context.strict && params.stricted) {\n\t            this.tolerateUnexpectedToken(params.stricted, params.message);\n\t        }\n\t        this.context.strict = previousStrict;\n\t        this.context.allowStrictDirective = previousAllowStrictDirective;\n\t        return body;\n\t    };\n\t    Parser.prototype.parsePropertyMethodFunction = function () {\n\t        var isGenerator = false;\n\t        var node = this.createNode();\n\t        var previousAllowYield = this.context.allowYield;\n\t        this.context.allowYield = true;\n\t        var params = this.parseFormalParameters();\n\t        var method = this.parsePropertyMethod(params);\n\t        this.context.allowYield = previousAllowYield;\n\t        return this.finalize(node, new Node.FunctionExpression(null, params.params, method, isGenerator));\n\t    };\n\t    Parser.prototype.parsePropertyMethodAsyncFunction = function () {\n\t        var node = this.createNode();\n\t        var previousAllowYield = this.context.allowYield;\n\t        var previousAwait = this.context.await;\n\t        this.context.allowYield = false;\n\t        this.context.await = true;\n\t        var params = this.parseFormalParameters();\n\t        var method = this.parsePropertyMethod(params);\n\t        this.context.allowYield = previousAllowYield;\n\t        this.context.await = previousAwait;\n\t        return this.finalize(node, new Node.AsyncFunctionExpression(null, params.params, method));\n\t    };\n\t    Parser.prototype.parseObjectPropertyKey = function () {\n\t        var node = this.createNode();\n\t        var token = this.nextToken();\n\t        var key;\n\t        switch (token.type) {\n\t            case 8 /* StringLiteral */:\n\t            case 6 /* NumericLiteral */:\n\t                if (this.context.strict && token.octal) {\n\t                    this.tolerateUnexpectedToken(token, messages_1.Messages.StrictOctalLiteral);\n\t                }\n\t                var raw = this.getTokenRaw(token);\n\t                key = this.finalize(node, new Node.Literal(token.value, raw));\n\t                break;\n\t            case 3 /* Identifier */:\n\t            case 1 /* BooleanLiteral */:\n\t            case 5 /* NullLiteral */:\n\t            case 4 /* Keyword */:\n\t                key = this.finalize(node, new Node.Identifier(token.value));\n\t                break;\n\t            case 7 /* Punctuator */:\n\t                if (token.value === '[') {\n\t                    key = this.isolateCoverGrammar(this.parseAssignmentExpression);\n\t                    this.expect(']');\n\t                }\n\t                else {\n\t                    key = this.throwUnexpectedToken(token);\n\t                }\n\t                break;\n\t            default:\n\t                key = this.throwUnexpectedToken(token);\n\t        }\n\t        return key;\n\t    };\n\t    Parser.prototype.isPropertyKey = function (key, value) {\n\t        return (key.type === syntax_1.Syntax.Identifier && key.name === value) ||\n\t            (key.type === syntax_1.Syntax.Literal && key.value === value);\n\t    };\n\t    Parser.prototype.parseObjectProperty = function (hasProto) {\n\t        var node = this.createNode();\n\t        var token = this.lookahead;\n\t        var kind;\n\t        var key = null;\n\t        var value = null;\n\t        var computed = false;\n\t        var method = false;\n\t        var shorthand = false;\n\t        var isAsync = false;\n\t        if (token.type === 3 /* Identifier */) {\n\t            var id = token.value;\n\t            this.nextToken();\n\t            computed = this.match('[');\n\t            isAsync = !this.hasLineTerminator && (id === 'async') &&\n\t                !this.match(':') && !this.match('(') && !this.match('*') && !this.match(',');\n\t            key = isAsync ? this.parseObjectPropertyKey() : this.finalize(node, new Node.Identifier(id));\n\t        }\n\t        else if (this.match('*')) {\n\t            this.nextToken();\n\t        }\n\t        else {\n\t            computed = this.match('[');\n\t            key = this.parseObjectPropertyKey();\n\t        }\n\t        var lookaheadPropertyKey = this.qualifiedPropertyName(this.lookahead);\n\t        if (token.type === 3 /* Identifier */ && !isAsync && token.value === 'get' && lookaheadPropertyKey) {\n\t            kind = 'get';\n\t            computed = this.match('[');\n\t            key = this.parseObjectPropertyKey();\n\t            this.context.allowYield = false;\n\t            value = this.parseGetterMethod();\n\t        }\n\t        else if (token.type === 3 /* Identifier */ && !isAsync && token.value === 'set' && lookaheadPropertyKey) {\n\t            kind = 'set';\n\t            computed = this.match('[');\n\t            key = this.parseObjectPropertyKey();\n\t            value = this.parseSetterMethod();\n\t        }\n\t        else if (token.type === 7 /* Punctuator */ && token.value === '*' && lookaheadPropertyKey) {\n\t            kind = 'init';\n\t            computed = this.match('[');\n\t            key = this.parseObjectPropertyKey();\n\t            value = this.parseGeneratorMethod();\n\t            method = true;\n\t        }\n\t        else {\n\t            if (!key) {\n\t                this.throwUnexpectedToken(this.lookahead);\n\t            }\n\t            kind = 'init';\n\t            if (this.match(':') && !isAsync) {\n\t                if (!computed && this.isPropertyKey(key, '__proto__')) {\n\t                    if (hasProto.value) {\n\t                        this.tolerateError(messages_1.Messages.DuplicateProtoProperty);\n\t                    }\n\t                    hasProto.value = true;\n\t                }\n\t                this.nextToken();\n\t                value = this.inheritCoverGrammar(this.parseAssignmentExpression);\n\t            }\n\t            else if (this.match('(')) {\n\t                value = isAsync ? this.parsePropertyMethodAsyncFunction() : this.parsePropertyMethodFunction();\n\t                method = true;\n\t            }\n\t            else if (token.type === 3 /* Identifier */) {\n\t                var id = this.finalize(node, new Node.Identifier(token.value));\n\t                if (this.match('=')) {\n\t                    this.context.firstCoverInitializedNameError = this.lookahead;\n\t                    this.nextToken();\n\t                    shorthand = true;\n\t                    var init = this.isolateCoverGrammar(this.parseAssignmentExpression);\n\t                    value = this.finalize(node, new Node.AssignmentPattern(id, init));\n\t                }\n\t                else {\n\t                    shorthand = true;\n\t                    value = id;\n\t                }\n\t            }\n\t            else {\n\t                this.throwUnexpectedToken(this.nextToken());\n\t            }\n\t        }\n\t        return this.finalize(node, new Node.Property(kind, key, computed, value, method, shorthand));\n\t    };\n\t    Parser.prototype.parseObjectInitializer = function () {\n\t        var node = this.createNode();\n\t        this.expect('{');\n\t        var properties = [];\n\t        var hasProto = { value: false };\n\t        while (!this.match('}')) {\n\t            properties.push(this.parseObjectProperty(hasProto));\n\t            if (!this.match('}')) {\n\t                this.expectCommaSeparator();\n\t            }\n\t        }\n\t        this.expect('}');\n\t        return this.finalize(node, new Node.ObjectExpression(properties));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-template-literals\n\t    Parser.prototype.parseTemplateHead = function () {\n\t        assert_1.assert(this.lookahead.head, 'Template literal must start with a template head');\n\t        var node = this.createNode();\n\t        var token = this.nextToken();\n\t        var raw = token.value;\n\t        var cooked = token.cooked;\n\t        return this.finalize(node, new Node.TemplateElement({ raw: raw, cooked: cooked }, token.tail));\n\t    };\n\t    Parser.prototype.parseTemplateElement = function () {\n\t        if (this.lookahead.type !== 10 /* Template */) {\n\t            this.throwUnexpectedToken();\n\t        }\n\t        var node = this.createNode();\n\t        var token = this.nextToken();\n\t        var raw = token.value;\n\t        var cooked = token.cooked;\n\t        return this.finalize(node, new Node.TemplateElement({ raw: raw, cooked: cooked }, token.tail));\n\t    };\n\t    Parser.prototype.parseTemplateLiteral = function () {\n\t        var node = this.createNode();\n\t        var expressions = [];\n\t        var quasis = [];\n\t        var quasi = this.parseTemplateHead();\n\t        quasis.push(quasi);\n\t        while (!quasi.tail) {\n\t            expressions.push(this.parseExpression());\n\t            quasi = this.parseTemplateElement();\n\t            quasis.push(quasi);\n\t        }\n\t        return this.finalize(node, new Node.TemplateLiteral(quasis, expressions));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-grouping-operator\n\t    Parser.prototype.reinterpretExpressionAsPattern = function (expr) {\n\t        switch (expr.type) {\n\t            case syntax_1.Syntax.Identifier:\n\t            case syntax_1.Syntax.MemberExpression:\n\t            case syntax_1.Syntax.RestElement:\n\t            case syntax_1.Syntax.AssignmentPattern:\n\t                break;\n\t            case syntax_1.Syntax.SpreadElement:\n\t                expr.type = syntax_1.Syntax.RestElement;\n\t                this.reinterpretExpressionAsPattern(expr.argument);\n\t                break;\n\t            case syntax_1.Syntax.ArrayExpression:\n\t                expr.type = syntax_1.Syntax.ArrayPattern;\n\t                for (var i = 0; i < expr.elements.length; i++) {\n\t                    if (expr.elements[i] !== null) {\n\t                        this.reinterpretExpressionAsPattern(expr.elements[i]);\n\t                    }\n\t                }\n\t                break;\n\t            case syntax_1.Syntax.ObjectExpression:\n\t                expr.type = syntax_1.Syntax.ObjectPattern;\n\t                for (var i = 0; i < expr.properties.length; i++) {\n\t                    this.reinterpretExpressionAsPattern(expr.properties[i].value);\n\t                }\n\t                break;\n\t            case syntax_1.Syntax.AssignmentExpression:\n\t                expr.type = syntax_1.Syntax.AssignmentPattern;\n\t                delete expr.operator;\n\t                this.reinterpretExpressionAsPattern(expr.left);\n\t                break;\n\t            default:\n\t                // Allow other node type for tolerant parsing.\n\t                break;\n\t        }\n\t    };\n\t    Parser.prototype.parseGroupExpression = function () {\n\t        var expr;\n\t        this.expect('(');\n\t        if (this.match(')')) {\n\t            this.nextToken();\n\t            if (!this.match('=>')) {\n\t                this.expect('=>');\n\t            }\n\t            expr = {\n\t                type: ArrowParameterPlaceHolder,\n\t                params: [],\n\t                async: false\n\t            };\n\t        }\n\t        else {\n\t            var startToken = this.lookahead;\n\t            var params = [];\n\t            if (this.match('...')) {\n\t                expr = this.parseRestElement(params);\n\t                this.expect(')');\n\t                if (!this.match('=>')) {\n\t                    this.expect('=>');\n\t                }\n\t                expr = {\n\t                    type: ArrowParameterPlaceHolder,\n\t                    params: [expr],\n\t                    async: false\n\t                };\n\t            }\n\t            else {\n\t                var arrow = false;\n\t                this.context.isBindingElement = true;\n\t                expr = this.inheritCoverGrammar(this.parseAssignmentExpression);\n\t                if (this.match(',')) {\n\t                    var expressions = [];\n\t                    this.context.isAssignmentTarget = false;\n\t                    expressions.push(expr);\n\t                    while (this.lookahead.type !== 2 /* EOF */) {\n\t                        if (!this.match(',')) {\n\t                            break;\n\t                        }\n\t                        this.nextToken();\n\t                        if (this.match(')')) {\n\t                            this.nextToken();\n\t                            for (var i = 0; i < expressions.length; i++) {\n\t                                this.reinterpretExpressionAsPattern(expressions[i]);\n\t                            }\n\t                            arrow = true;\n\t                            expr = {\n\t                                type: ArrowParameterPlaceHolder,\n\t                                params: expressions,\n\t                                async: false\n\t                            };\n\t                        }\n\t                        else if (this.match('...')) {\n\t                            if (!this.context.isBindingElement) {\n\t                                this.throwUnexpectedToken(this.lookahead);\n\t                            }\n\t                            expressions.push(this.parseRestElement(params));\n\t                            this.expect(')');\n\t                            if (!this.match('=>')) {\n\t                                this.expect('=>');\n\t                            }\n\t                            this.context.isBindingElement = false;\n\t                            for (var i = 0; i < expressions.length; i++) {\n\t                                this.reinterpretExpressionAsPattern(expressions[i]);\n\t                            }\n\t                            arrow = true;\n\t                            expr = {\n\t                                type: ArrowParameterPlaceHolder,\n\t                                params: expressions,\n\t                                async: false\n\t                            };\n\t                        }\n\t                        else {\n\t                            expressions.push(this.inheritCoverGrammar(this.parseAssignmentExpression));\n\t                        }\n\t                        if (arrow) {\n\t                            break;\n\t                        }\n\t                    }\n\t                    if (!arrow) {\n\t                        expr = this.finalize(this.startNode(startToken), new Node.SequenceExpression(expressions));\n\t                    }\n\t                }\n\t                if (!arrow) {\n\t                    this.expect(')');\n\t                    if (this.match('=>')) {\n\t                        if (expr.type === syntax_1.Syntax.Identifier && expr.name === 'yield') {\n\t                            arrow = true;\n\t                            expr = {\n\t                                type: ArrowParameterPlaceHolder,\n\t                                params: [expr],\n\t                                async: false\n\t                            };\n\t                        }\n\t                        if (!arrow) {\n\t                            if (!this.context.isBindingElement) {\n\t                                this.throwUnexpectedToken(this.lookahead);\n\t                            }\n\t                            if (expr.type === syntax_1.Syntax.SequenceExpression) {\n\t                                for (var i = 0; i < expr.expressions.length; i++) {\n\t                                    this.reinterpretExpressionAsPattern(expr.expressions[i]);\n\t                                }\n\t                            }\n\t                            else {\n\t                                this.reinterpretExpressionAsPattern(expr);\n\t                            }\n\t                            var parameters = (expr.type === syntax_1.Syntax.SequenceExpression ? expr.expressions : [expr]);\n\t                            expr = {\n\t                                type: ArrowParameterPlaceHolder,\n\t                                params: parameters,\n\t                                async: false\n\t                            };\n\t                        }\n\t                    }\n\t                    this.context.isBindingElement = false;\n\t                }\n\t            }\n\t        }\n\t        return expr;\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-left-hand-side-expressions\n\t    Parser.prototype.parseArguments = function () {\n\t        this.expect('(');\n\t        var args = [];\n\t        if (!this.match(')')) {\n\t            while (true) {\n\t                var expr = this.match('...') ? this.parseSpreadElement() :\n\t                    this.isolateCoverGrammar(this.parseAssignmentExpression);\n\t                args.push(expr);\n\t                if (this.match(')')) {\n\t                    break;\n\t                }\n\t                this.expectCommaSeparator();\n\t                if (this.match(')')) {\n\t                    break;\n\t                }\n\t            }\n\t        }\n\t        this.expect(')');\n\t        return args;\n\t    };\n\t    Parser.prototype.isIdentifierName = function (token) {\n\t        return token.type === 3 /* Identifier */ ||\n\t            token.type === 4 /* Keyword */ ||\n\t            token.type === 1 /* BooleanLiteral */ ||\n\t            token.type === 5 /* NullLiteral */;\n\t    };\n\t    Parser.prototype.parseIdentifierName = function () {\n\t        var node = this.createNode();\n\t        var token = this.nextToken();\n\t        if (!this.isIdentifierName(token)) {\n\t            this.throwUnexpectedToken(token);\n\t        }\n\t        return this.finalize(node, new Node.Identifier(token.value));\n\t    };\n\t    Parser.prototype.parseNewExpression = function () {\n\t        var node = this.createNode();\n\t        var id = this.parseIdentifierName();\n\t        assert_1.assert(id.name === 'new', 'New expression must start with `new`');\n\t        var expr;\n\t        if (this.match('.')) {\n\t            this.nextToken();\n\t            if (this.lookahead.type === 3 /* Identifier */ && this.context.inFunctionBody && this.lookahead.value === 'target') {\n\t                var property = this.parseIdentifierName();\n\t                expr = new Node.MetaProperty(id, property);\n\t            }\n\t            else {\n\t                this.throwUnexpectedToken(this.lookahead);\n\t            }\n\t        }\n\t        else {\n\t            var callee = this.isolateCoverGrammar(this.parseLeftHandSideExpression);\n\t            var args = this.match('(') ? this.parseArguments() : [];\n\t            expr = new Node.NewExpression(callee, args);\n\t            this.context.isAssignmentTarget = false;\n\t            this.context.isBindingElement = false;\n\t        }\n\t        return this.finalize(node, expr);\n\t    };\n\t    Parser.prototype.parseAsyncArgument = function () {\n\t        var arg = this.parseAssignmentExpression();\n\t        this.context.firstCoverInitializedNameError = null;\n\t        return arg;\n\t    };\n\t    Parser.prototype.parseAsyncArguments = function () {\n\t        this.expect('(');\n\t        var args = [];\n\t        if (!this.match(')')) {\n\t            while (true) {\n\t                var expr = this.match('...') ? this.parseSpreadElement() :\n\t                    this.isolateCoverGrammar(this.parseAsyncArgument);\n\t                args.push(expr);\n\t                if (this.match(')')) {\n\t                    break;\n\t                }\n\t                this.expectCommaSeparator();\n\t                if (this.match(')')) {\n\t                    break;\n\t                }\n\t            }\n\t        }\n\t        this.expect(')');\n\t        return args;\n\t    };\n\t    Parser.prototype.parseLeftHandSideExpressionAllowCall = function () {\n\t        var startToken = this.lookahead;\n\t        var maybeAsync = this.matchContextualKeyword('async');\n\t        var previousAllowIn = this.context.allowIn;\n\t        this.context.allowIn = true;\n\t        var expr;\n\t        if (this.matchKeyword('super') && this.context.inFunctionBody) {\n\t            expr = this.createNode();\n\t            this.nextToken();\n\t            expr = this.finalize(expr, new Node.Super());\n\t            if (!this.match('(') && !this.match('.') && !this.match('[')) {\n\t                this.throwUnexpectedToken(this.lookahead);\n\t            }\n\t        }\n\t        else {\n\t            expr = this.inheritCoverGrammar(this.matchKeyword('new') ? this.parseNewExpression : this.parsePrimaryExpression);\n\t        }\n\t        while (true) {\n\t            if (this.match('.')) {\n\t                this.context.isBindingElement = false;\n\t                this.context.isAssignmentTarget = true;\n\t                this.expect('.');\n\t                var property = this.parseIdentifierName();\n\t                expr = this.finalize(this.startNode(startToken), new Node.StaticMemberExpression(expr, property));\n\t            }\n\t            else if (this.match('(')) {\n\t                var asyncArrow = maybeAsync && (startToken.lineNumber === this.lookahead.lineNumber);\n\t                this.context.isBindingElement = false;\n\t                this.context.isAssignmentTarget = false;\n\t                var args = asyncArrow ? this.parseAsyncArguments() : this.parseArguments();\n\t                expr = this.finalize(this.startNode(startToken), new Node.CallExpression(expr, args));\n\t                if (asyncArrow && this.match('=>')) {\n\t                    for (var i = 0; i < args.length; ++i) {\n\t                        this.reinterpretExpressionAsPattern(args[i]);\n\t                    }\n\t                    expr = {\n\t                        type: ArrowParameterPlaceHolder,\n\t                        params: args,\n\t                        async: true\n\t                    };\n\t                }\n\t            }\n\t            else if (this.match('[')) {\n\t                this.context.isBindingElement = false;\n\t                this.context.isAssignmentTarget = true;\n\t                this.expect('[');\n\t                var property = this.isolateCoverGrammar(this.parseExpression);\n\t                this.expect(']');\n\t                expr = this.finalize(this.startNode(startToken), new Node.ComputedMemberExpression(expr, property));\n\t            }\n\t            else if (this.lookahead.type === 10 /* Template */ && this.lookahead.head) {\n\t                var quasi = this.parseTemplateLiteral();\n\t                expr = this.finalize(this.startNode(startToken), new Node.TaggedTemplateExpression(expr, quasi));\n\t            }\n\t            else {\n\t                break;\n\t            }\n\t        }\n\t        this.context.allowIn = previousAllowIn;\n\t        return expr;\n\t    };\n\t    Parser.prototype.parseSuper = function () {\n\t        var node = this.createNode();\n\t        this.expectKeyword('super');\n\t        if (!this.match('[') && !this.match('.')) {\n\t            this.throwUnexpectedToken(this.lookahead);\n\t        }\n\t        return this.finalize(node, new Node.Super());\n\t    };\n\t    Parser.prototype.parseLeftHandSideExpression = function () {\n\t        assert_1.assert(this.context.allowIn, 'callee of new expression always allow in keyword.');\n\t        var node = this.startNode(this.lookahead);\n\t        var expr = (this.matchKeyword('super') && this.context.inFunctionBody) ? this.parseSuper() :\n\t            this.inheritCoverGrammar(this.matchKeyword('new') ? this.parseNewExpression : this.parsePrimaryExpression);\n\t        while (true) {\n\t            if (this.match('[')) {\n\t                this.context.isBindingElement = false;\n\t                this.context.isAssignmentTarget = true;\n\t                this.expect('[');\n\t                var property = this.isolateCoverGrammar(this.parseExpression);\n\t                this.expect(']');\n\t                expr = this.finalize(node, new Node.ComputedMemberExpression(expr, property));\n\t            }\n\t            else if (this.match('.')) {\n\t                this.context.isBindingElement = false;\n\t                this.context.isAssignmentTarget = true;\n\t                this.expect('.');\n\t                var property = this.parseIdentifierName();\n\t                expr = this.finalize(node, new Node.StaticMemberExpression(expr, property));\n\t            }\n\t            else if (this.lookahead.type === 10 /* Template */ && this.lookahead.head) {\n\t                var quasi = this.parseTemplateLiteral();\n\t                expr = this.finalize(node, new Node.TaggedTemplateExpression(expr, quasi));\n\t            }\n\t            else {\n\t                break;\n\t            }\n\t        }\n\t        return expr;\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-update-expressions\n\t    Parser.prototype.parseUpdateExpression = function () {\n\t        var expr;\n\t        var startToken = this.lookahead;\n\t        if (this.match('++') || this.match('--')) {\n\t            var node = this.startNode(startToken);\n\t            var token = this.nextToken();\n\t            expr = this.inheritCoverGrammar(this.parseUnaryExpression);\n\t            if (this.context.strict && expr.type === syntax_1.Syntax.Identifier && this.scanner.isRestrictedWord(expr.name)) {\n\t                this.tolerateError(messages_1.Messages.StrictLHSPrefix);\n\t            }\n\t            if (!this.context.isAssignmentTarget) {\n\t                this.tolerateError(messages_1.Messages.InvalidLHSInAssignment);\n\t            }\n\t            var prefix = true;\n\t            expr = this.finalize(node, new Node.UpdateExpression(token.value, expr, prefix));\n\t            this.context.isAssignmentTarget = false;\n\t            this.context.isBindingElement = false;\n\t        }\n\t        else {\n\t            expr = this.inheritCoverGrammar(this.parseLeftHandSideExpressionAllowCall);\n\t            if (!this.hasLineTerminator && this.lookahead.type === 7 /* Punctuator */) {\n\t                if (this.match('++') || this.match('--')) {\n\t                    if (this.context.strict && expr.type === syntax_1.Syntax.Identifier && this.scanner.isRestrictedWord(expr.name)) {\n\t                        this.tolerateError(messages_1.Messages.StrictLHSPostfix);\n\t                    }\n\t                    if (!this.context.isAssignmentTarget) {\n\t                        this.tolerateError(messages_1.Messages.InvalidLHSInAssignment);\n\t                    }\n\t                    this.context.isAssignmentTarget = false;\n\t                    this.context.isBindingElement = false;\n\t                    var operator = this.nextToken().value;\n\t                    var prefix = false;\n\t                    expr = this.finalize(this.startNode(startToken), new Node.UpdateExpression(operator, expr, prefix));\n\t                }\n\t            }\n\t        }\n\t        return expr;\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-unary-operators\n\t    Parser.prototype.parseAwaitExpression = function () {\n\t        var node = this.createNode();\n\t        this.nextToken();\n\t        var argument = this.parseUnaryExpression();\n\t        return this.finalize(node, new Node.AwaitExpression(argument));\n\t    };\n\t    Parser.prototype.parseUnaryExpression = function () {\n\t        var expr;\n\t        if (this.match('+') || this.match('-') || this.match('~') || this.match('!') ||\n\t            this.matchKeyword('delete') || this.matchKeyword('void') || this.matchKeyword('typeof')) {\n\t            var node = this.startNode(this.lookahead);\n\t            var token = this.nextToken();\n\t            expr = this.inheritCoverGrammar(this.parseUnaryExpression);\n\t            expr = this.finalize(node, new Node.UnaryExpression(token.value, expr));\n\t            if (this.context.strict && expr.operator === 'delete' && expr.argument.type === syntax_1.Syntax.Identifier) {\n\t                this.tolerateError(messages_1.Messages.StrictDelete);\n\t            }\n\t            this.context.isAssignmentTarget = false;\n\t            this.context.isBindingElement = false;\n\t        }\n\t        else if (this.context.await && this.matchContextualKeyword('await')) {\n\t            expr = this.parseAwaitExpression();\n\t        }\n\t        else {\n\t            expr = this.parseUpdateExpression();\n\t        }\n\t        return expr;\n\t    };\n\t    Parser.prototype.parseExponentiationExpression = function () {\n\t        var startToken = this.lookahead;\n\t        var expr = this.inheritCoverGrammar(this.parseUnaryExpression);\n\t        if (expr.type !== syntax_1.Syntax.UnaryExpression && this.match('**')) {\n\t            this.nextToken();\n\t            this.context.isAssignmentTarget = false;\n\t            this.context.isBindingElement = false;\n\t            var left = expr;\n\t            var right = this.isolateCoverGrammar(this.parseExponentiationExpression);\n\t            expr = this.finalize(this.startNode(startToken), new Node.BinaryExpression('**', left, right));\n\t        }\n\t        return expr;\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-exp-operator\n\t    // https://tc39.github.io/ecma262/#sec-multiplicative-operators\n\t    // https://tc39.github.io/ecma262/#sec-additive-operators\n\t    // https://tc39.github.io/ecma262/#sec-bitwise-shift-operators\n\t    // https://tc39.github.io/ecma262/#sec-relational-operators\n\t    // https://tc39.github.io/ecma262/#sec-equality-operators\n\t    // https://tc39.github.io/ecma262/#sec-binary-bitwise-operators\n\t    // https://tc39.github.io/ecma262/#sec-binary-logical-operators\n\t    Parser.prototype.binaryPrecedence = function (token) {\n\t        var op = token.value;\n\t        var precedence;\n\t        if (token.type === 7 /* Punctuator */) {\n\t            precedence = this.operatorPrecedence[op] || 0;\n\t        }\n\t        else if (token.type === 4 /* Keyword */) {\n\t            precedence = (op === 'instanceof' || (this.context.allowIn && op === 'in')) ? 7 : 0;\n\t        }\n\t        else {\n\t            precedence = 0;\n\t        }\n\t        return precedence;\n\t    };\n\t    Parser.prototype.parseBinaryExpression = function () {\n\t        var startToken = this.lookahead;\n\t        var expr = this.inheritCoverGrammar(this.parseExponentiationExpression);\n\t        var token = this.lookahead;\n\t        var prec = this.binaryPrecedence(token);\n\t        if (prec > 0) {\n\t            this.nextToken();\n\t            this.context.isAssignmentTarget = false;\n\t            this.context.isBindingElement = false;\n\t            var markers = [startToken, this.lookahead];\n\t            var left = expr;\n\t            var right = this.isolateCoverGrammar(this.parseExponentiationExpression);\n\t            var stack = [left, token.value, right];\n\t            var precedences = [prec];\n\t            while (true) {\n\t                prec = this.binaryPrecedence(this.lookahead);\n\t                if (prec <= 0) {\n\t                    break;\n\t                }\n\t                // Reduce: make a binary expression from the three topmost entries.\n\t                while ((stack.length > 2) && (prec <= precedences[precedences.length - 1])) {\n\t                    right = stack.pop();\n\t                    var operator = stack.pop();\n\t                    precedences.pop();\n\t                    left = stack.pop();\n\t                    markers.pop();\n\t                    var node = this.startNode(markers[markers.length - 1]);\n\t                    stack.push(this.finalize(node, new Node.BinaryExpression(operator, left, right)));\n\t                }\n\t                // Shift.\n\t                stack.push(this.nextToken().value);\n\t                precedences.push(prec);\n\t                markers.push(this.lookahead);\n\t                stack.push(this.isolateCoverGrammar(this.parseExponentiationExpression));\n\t            }\n\t            // Final reduce to clean-up the stack.\n\t            var i = stack.length - 1;\n\t            expr = stack[i];\n\t            var lastMarker = markers.pop();\n\t            while (i > 1) {\n\t                var marker = markers.pop();\n\t                var lastLineStart = lastMarker && lastMarker.lineStart;\n\t                var node = this.startNode(marker, lastLineStart);\n\t                var operator = stack[i - 1];\n\t                expr = this.finalize(node, new Node.BinaryExpression(operator, stack[i - 2], expr));\n\t                i -= 2;\n\t                lastMarker = marker;\n\t            }\n\t        }\n\t        return expr;\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-conditional-operator\n\t    Parser.prototype.parseConditionalExpression = function () {\n\t        var startToken = this.lookahead;\n\t        var expr = this.inheritCoverGrammar(this.parseBinaryExpression);\n\t        if (this.match('?')) {\n\t            this.nextToken();\n\t            var previousAllowIn = this.context.allowIn;\n\t            this.context.allowIn = true;\n\t            var consequent = this.isolateCoverGrammar(this.parseAssignmentExpression);\n\t            this.context.allowIn = previousAllowIn;\n\t            this.expect(':');\n\t            var alternate = this.isolateCoverGrammar(this.parseAssignmentExpression);\n\t            expr = this.finalize(this.startNode(startToken), new Node.ConditionalExpression(expr, consequent, alternate));\n\t            this.context.isAssignmentTarget = false;\n\t            this.context.isBindingElement = false;\n\t        }\n\t        return expr;\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-assignment-operators\n\t    Parser.prototype.checkPatternParam = function (options, param) {\n\t        switch (param.type) {\n\t            case syntax_1.Syntax.Identifier:\n\t                this.validateParam(options, param, param.name);\n\t                break;\n\t            case syntax_1.Syntax.RestElement:\n\t                this.checkPatternParam(options, param.argument);\n\t                break;\n\t            case syntax_1.Syntax.AssignmentPattern:\n\t                this.checkPatternParam(options, param.left);\n\t                break;\n\t            case syntax_1.Syntax.ArrayPattern:\n\t                for (var i = 0; i < param.elements.length; i++) {\n\t                    if (param.elements[i] !== null) {\n\t                        this.checkPatternParam(options, param.elements[i]);\n\t                    }\n\t                }\n\t                break;\n\t            case syntax_1.Syntax.ObjectPattern:\n\t                for (var i = 0; i < param.properties.length; i++) {\n\t                    this.checkPatternParam(options, param.properties[i].value);\n\t                }\n\t                break;\n\t            default:\n\t                break;\n\t        }\n\t        options.simple = options.simple && (param instanceof Node.Identifier);\n\t    };\n\t    Parser.prototype.reinterpretAsCoverFormalsList = function (expr) {\n\t        var params = [expr];\n\t        var options;\n\t        var asyncArrow = false;\n\t        switch (expr.type) {\n\t            case syntax_1.Syntax.Identifier:\n\t                break;\n\t            case ArrowParameterPlaceHolder:\n\t                params = expr.params;\n\t                asyncArrow = expr.async;\n\t                break;\n\t            default:\n\t                return null;\n\t        }\n\t        options = {\n\t            simple: true,\n\t            paramSet: {}\n\t        };\n\t        for (var i = 0; i < params.length; ++i) {\n\t            var param = params[i];\n\t            if (param.type === syntax_1.Syntax.AssignmentPattern) {\n\t                if (param.right.type === syntax_1.Syntax.YieldExpression) {\n\t                    if (param.right.argument) {\n\t                        this.throwUnexpectedToken(this.lookahead);\n\t                    }\n\t                    param.right.type = syntax_1.Syntax.Identifier;\n\t                    param.right.name = 'yield';\n\t                    delete param.right.argument;\n\t                    delete param.right.delegate;\n\t                }\n\t            }\n\t            else if (asyncArrow && param.type === syntax_1.Syntax.Identifier && param.name === 'await') {\n\t                this.throwUnexpectedToken(this.lookahead);\n\t            }\n\t            this.checkPatternParam(options, param);\n\t            params[i] = param;\n\t        }\n\t        if (this.context.strict || !this.context.allowYield) {\n\t            for (var i = 0; i < params.length; ++i) {\n\t                var param = params[i];\n\t                if (param.type === syntax_1.Syntax.YieldExpression) {\n\t                    this.throwUnexpectedToken(this.lookahead);\n\t                }\n\t            }\n\t        }\n\t        if (options.message === messages_1.Messages.StrictParamDupe) {\n\t            var token = this.context.strict ? options.stricted : options.firstRestricted;\n\t            this.throwUnexpectedToken(token, options.message);\n\t        }\n\t        return {\n\t            simple: options.simple,\n\t            params: params,\n\t            stricted: options.stricted,\n\t            firstRestricted: options.firstRestricted,\n\t            message: options.message\n\t        };\n\t    };\n\t    Parser.prototype.parseAssignmentExpression = function () {\n\t        var expr;\n\t        if (!this.context.allowYield && this.matchKeyword('yield')) {\n\t            expr = this.parseYieldExpression();\n\t        }\n\t        else {\n\t            var startToken = this.lookahead;\n\t            var token = startToken;\n\t            expr = this.parseConditionalExpression();\n\t            if (token.type === 3 /* Identifier */ && (token.lineNumber === this.lookahead.lineNumber) && token.value === 'async') {\n\t                if (this.lookahead.type === 3 /* Identifier */ || this.matchKeyword('yield')) {\n\t                    var arg = this.parsePrimaryExpression();\n\t                    this.reinterpretExpressionAsPattern(arg);\n\t                    expr = {\n\t                        type: ArrowParameterPlaceHolder,\n\t                        params: [arg],\n\t                        async: true\n\t                    };\n\t                }\n\t            }\n\t            if (expr.type === ArrowParameterPlaceHolder || this.match('=>')) {\n\t                // https://tc39.github.io/ecma262/#sec-arrow-function-definitions\n\t                this.context.isAssignmentTarget = false;\n\t                this.context.isBindingElement = false;\n\t                var isAsync = expr.async;\n\t                var list = this.reinterpretAsCoverFormalsList(expr);\n\t                if (list) {\n\t                    if (this.hasLineTerminator) {\n\t                        this.tolerateUnexpectedToken(this.lookahead);\n\t                    }\n\t                    this.context.firstCoverInitializedNameError = null;\n\t                    var previousStrict = this.context.strict;\n\t                    var previousAllowStrictDirective = this.context.allowStrictDirective;\n\t                    this.context.allowStrictDirective = list.simple;\n\t                    var previousAllowYield = this.context.allowYield;\n\t                    var previousAwait = this.context.await;\n\t                    this.context.allowYield = true;\n\t                    this.context.await = isAsync;\n\t                    var node = this.startNode(startToken);\n\t                    this.expect('=>');\n\t                    var body = void 0;\n\t                    if (this.match('{')) {\n\t                        var previousAllowIn = this.context.allowIn;\n\t                        this.context.allowIn = true;\n\t                        body = this.parseFunctionSourceElements();\n\t                        this.context.allowIn = previousAllowIn;\n\t                    }\n\t                    else {\n\t                        body = this.isolateCoverGrammar(this.parseAssignmentExpression);\n\t                    }\n\t                    var expression = body.type !== syntax_1.Syntax.BlockStatement;\n\t                    if (this.context.strict && list.firstRestricted) {\n\t                        this.throwUnexpectedToken(list.firstRestricted, list.message);\n\t                    }\n\t                    if (this.context.strict && list.stricted) {\n\t                        this.tolerateUnexpectedToken(list.stricted, list.message);\n\t                    }\n\t                    expr = isAsync ? this.finalize(node, new Node.AsyncArrowFunctionExpression(list.params, body, expression)) :\n\t                        this.finalize(node, new Node.ArrowFunctionExpression(list.params, body, expression));\n\t                    this.context.strict = previousStrict;\n\t                    this.context.allowStrictDirective = previousAllowStrictDirective;\n\t                    this.context.allowYield = previousAllowYield;\n\t                    this.context.await = previousAwait;\n\t                }\n\t            }\n\t            else {\n\t                if (this.matchAssign()) {\n\t                    if (!this.context.isAssignmentTarget) {\n\t                        this.tolerateError(messages_1.Messages.InvalidLHSInAssignment);\n\t                    }\n\t                    if (this.context.strict && expr.type === syntax_1.Syntax.Identifier) {\n\t                        var id = expr;\n\t                        if (this.scanner.isRestrictedWord(id.name)) {\n\t                            this.tolerateUnexpectedToken(token, messages_1.Messages.StrictLHSAssignment);\n\t                        }\n\t                        if (this.scanner.isStrictModeReservedWord(id.name)) {\n\t                            this.tolerateUnexpectedToken(token, messages_1.Messages.StrictReservedWord);\n\t                        }\n\t                    }\n\t                    if (!this.match('=')) {\n\t                        this.context.isAssignmentTarget = false;\n\t                        this.context.isBindingElement = false;\n\t                    }\n\t                    else {\n\t                        this.reinterpretExpressionAsPattern(expr);\n\t                    }\n\t                    token = this.nextToken();\n\t                    var operator = token.value;\n\t                    var right = this.isolateCoverGrammar(this.parseAssignmentExpression);\n\t                    expr = this.finalize(this.startNode(startToken), new Node.AssignmentExpression(operator, expr, right));\n\t                    this.context.firstCoverInitializedNameError = null;\n\t                }\n\t            }\n\t        }\n\t        return expr;\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-comma-operator\n\t    Parser.prototype.parseExpression = function () {\n\t        var startToken = this.lookahead;\n\t        var expr = this.isolateCoverGrammar(this.parseAssignmentExpression);\n\t        if (this.match(',')) {\n\t            var expressions = [];\n\t            expressions.push(expr);\n\t            while (this.lookahead.type !== 2 /* EOF */) {\n\t                if (!this.match(',')) {\n\t                    break;\n\t                }\n\t                this.nextToken();\n\t                expressions.push(this.isolateCoverGrammar(this.parseAssignmentExpression));\n\t            }\n\t            expr = this.finalize(this.startNode(startToken), new Node.SequenceExpression(expressions));\n\t        }\n\t        return expr;\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-block\n\t    Parser.prototype.parseStatementListItem = function () {\n\t        var statement;\n\t        this.context.isAssignmentTarget = true;\n\t        this.context.isBindingElement = true;\n\t        if (this.lookahead.type === 4 /* Keyword */) {\n\t            switch (this.lookahead.value) {\n\t                case 'export':\n\t                    if (!this.context.isModule) {\n\t                        this.tolerateUnexpectedToken(this.lookahead, messages_1.Messages.IllegalExportDeclaration);\n\t                    }\n\t                    statement = this.parseExportDeclaration();\n\t                    break;\n\t                case 'import':\n\t                    if (!this.context.isModule) {\n\t                        this.tolerateUnexpectedToken(this.lookahead, messages_1.Messages.IllegalImportDeclaration);\n\t                    }\n\t                    statement = this.parseImportDeclaration();\n\t                    break;\n\t                case 'const':\n\t                    statement = this.parseLexicalDeclaration({ inFor: false });\n\t                    break;\n\t                case 'function':\n\t                    statement = this.parseFunctionDeclaration();\n\t                    break;\n\t                case 'class':\n\t                    statement = this.parseClassDeclaration();\n\t                    break;\n\t                case 'let':\n\t                    statement = this.isLexicalDeclaration() ? this.parseLexicalDeclaration({ inFor: false }) : this.parseStatement();\n\t                    break;\n\t                default:\n\t                    statement = this.parseStatement();\n\t                    break;\n\t            }\n\t        }\n\t        else {\n\t            statement = this.parseStatement();\n\t        }\n\t        return statement;\n\t    };\n\t    Parser.prototype.parseBlock = function () {\n\t        var node = this.createNode();\n\t        this.expect('{');\n\t        var block = [];\n\t        while (true) {\n\t            if (this.match('}')) {\n\t                break;\n\t            }\n\t            block.push(this.parseStatementListItem());\n\t        }\n\t        this.expect('}');\n\t        return this.finalize(node, new Node.BlockStatement(block));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-let-and-const-declarations\n\t    Parser.prototype.parseLexicalBinding = function (kind, options) {\n\t        var node = this.createNode();\n\t        var params = [];\n\t        var id = this.parsePattern(params, kind);\n\t        if (this.context.strict && id.type === syntax_1.Syntax.Identifier) {\n\t            if (this.scanner.isRestrictedWord(id.name)) {\n\t                this.tolerateError(messages_1.Messages.StrictVarName);\n\t            }\n\t        }\n\t        var init = null;\n\t        if (kind === 'const') {\n\t            if (!this.matchKeyword('in') && !this.matchContextualKeyword('of')) {\n\t                if (this.match('=')) {\n\t                    this.nextToken();\n\t                    init = this.isolateCoverGrammar(this.parseAssignmentExpression);\n\t                }\n\t                else {\n\t                    this.throwError(messages_1.Messages.DeclarationMissingInitializer, 'const');\n\t                }\n\t            }\n\t        }\n\t        else if ((!options.inFor && id.type !== syntax_1.Syntax.Identifier) || this.match('=')) {\n\t            this.expect('=');\n\t            init = this.isolateCoverGrammar(this.parseAssignmentExpression);\n\t        }\n\t        return this.finalize(node, new Node.VariableDeclarator(id, init));\n\t    };\n\t    Parser.prototype.parseBindingList = function (kind, options) {\n\t        var list = [this.parseLexicalBinding(kind, options)];\n\t        while (this.match(',')) {\n\t            this.nextToken();\n\t            list.push(this.parseLexicalBinding(kind, options));\n\t        }\n\t        return list;\n\t    };\n\t    Parser.prototype.isLexicalDeclaration = function () {\n\t        var state = this.scanner.saveState();\n\t        this.scanner.scanComments();\n\t        var next = this.scanner.lex();\n\t        this.scanner.restoreState(state);\n\t        return (next.type === 3 /* Identifier */) ||\n\t            (next.type === 7 /* Punctuator */ && next.value === '[') ||\n\t            (next.type === 7 /* Punctuator */ && next.value === '{') ||\n\t            (next.type === 4 /* Keyword */ && next.value === 'let') ||\n\t            (next.type === 4 /* Keyword */ && next.value === 'yield');\n\t    };\n\t    Parser.prototype.parseLexicalDeclaration = function (options) {\n\t        var node = this.createNode();\n\t        var kind = this.nextToken().value;\n\t        assert_1.assert(kind === 'let' || kind === 'const', 'Lexical declaration must be either let or const');\n\t        var declarations = this.parseBindingList(kind, options);\n\t        this.consumeSemicolon();\n\t        return this.finalize(node, new Node.VariableDeclaration(declarations, kind));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-destructuring-binding-patterns\n\t    Parser.prototype.parseBindingRestElement = function (params, kind) {\n\t        var node = this.createNode();\n\t        this.expect('...');\n\t        var arg = this.parsePattern(params, kind);\n\t        return this.finalize(node, new Node.RestElement(arg));\n\t    };\n\t    Parser.prototype.parseArrayPattern = function (params, kind) {\n\t        var node = this.createNode();\n\t        this.expect('[');\n\t        var elements = [];\n\t        while (!this.match(']')) {\n\t            if (this.match(',')) {\n\t                this.nextToken();\n\t                elements.push(null);\n\t            }\n\t            else {\n\t                if (this.match('...')) {\n\t                    elements.push(this.parseBindingRestElement(params, kind));\n\t                    break;\n\t                }\n\t                else {\n\t                    elements.push(this.parsePatternWithDefault(params, kind));\n\t                }\n\t                if (!this.match(']')) {\n\t                    this.expect(',');\n\t                }\n\t            }\n\t        }\n\t        this.expect(']');\n\t        return this.finalize(node, new Node.ArrayPattern(elements));\n\t    };\n\t    Parser.prototype.parsePropertyPattern = function (params, kind) {\n\t        var node = this.createNode();\n\t        var computed = false;\n\t        var shorthand = false;\n\t        var method = false;\n\t        var key;\n\t        var value;\n\t        if (this.lookahead.type === 3 /* Identifier */) {\n\t            var keyToken = this.lookahead;\n\t            key = this.parseVariableIdentifier();\n\t            var init = this.finalize(node, new Node.Identifier(keyToken.value));\n\t            if (this.match('=')) {\n\t                params.push(keyToken);\n\t                shorthand = true;\n\t                this.nextToken();\n\t                var expr = this.parseAssignmentExpression();\n\t                value = this.finalize(this.startNode(keyToken), new Node.AssignmentPattern(init, expr));\n\t            }\n\t            else if (!this.match(':')) {\n\t                params.push(keyToken);\n\t                shorthand = true;\n\t                value = init;\n\t            }\n\t            else {\n\t                this.expect(':');\n\t                value = this.parsePatternWithDefault(params, kind);\n\t            }\n\t        }\n\t        else {\n\t            computed = this.match('[');\n\t            key = this.parseObjectPropertyKey();\n\t            this.expect(':');\n\t            value = this.parsePatternWithDefault(params, kind);\n\t        }\n\t        return this.finalize(node, new Node.Property('init', key, computed, value, method, shorthand));\n\t    };\n\t    Parser.prototype.parseObjectPattern = function (params, kind) {\n\t        var node = this.createNode();\n\t        var properties = [];\n\t        this.expect('{');\n\t        while (!this.match('}')) {\n\t            properties.push(this.parsePropertyPattern(params, kind));\n\t            if (!this.match('}')) {\n\t                this.expect(',');\n\t            }\n\t        }\n\t        this.expect('}');\n\t        return this.finalize(node, new Node.ObjectPattern(properties));\n\t    };\n\t    Parser.prototype.parsePattern = function (params, kind) {\n\t        var pattern;\n\t        if (this.match('[')) {\n\t            pattern = this.parseArrayPattern(params, kind);\n\t        }\n\t        else if (this.match('{')) {\n\t            pattern = this.parseObjectPattern(params, kind);\n\t        }\n\t        else {\n\t            if (this.matchKeyword('let') && (kind === 'const' || kind === 'let')) {\n\t                this.tolerateUnexpectedToken(this.lookahead, messages_1.Messages.LetInLexicalBinding);\n\t            }\n\t            params.push(this.lookahead);\n\t            pattern = this.parseVariableIdentifier(kind);\n\t        }\n\t        return pattern;\n\t    };\n\t    Parser.prototype.parsePatternWithDefault = function (params, kind) {\n\t        var startToken = this.lookahead;\n\t        var pattern = this.parsePattern(params, kind);\n\t        if (this.match('=')) {\n\t            this.nextToken();\n\t            var previousAllowYield = this.context.allowYield;\n\t            this.context.allowYield = true;\n\t            var right = this.isolateCoverGrammar(this.parseAssignmentExpression);\n\t            this.context.allowYield = previousAllowYield;\n\t            pattern = this.finalize(this.startNode(startToken), new Node.AssignmentPattern(pattern, right));\n\t        }\n\t        return pattern;\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-variable-statement\n\t    Parser.prototype.parseVariableIdentifier = function (kind) {\n\t        var node = this.createNode();\n\t        var token = this.nextToken();\n\t        if (token.type === 4 /* Keyword */ && token.value === 'yield') {\n\t            if (this.context.strict) {\n\t                this.tolerateUnexpectedToken(token, messages_1.Messages.StrictReservedWord);\n\t            }\n\t            else if (!this.context.allowYield) {\n\t                this.throwUnexpectedToken(token);\n\t            }\n\t        }\n\t        else if (token.type !== 3 /* Identifier */) {\n\t            if (this.context.strict && token.type === 4 /* Keyword */ && this.scanner.isStrictModeReservedWord(token.value)) {\n\t                this.tolerateUnexpectedToken(token, messages_1.Messages.StrictReservedWord);\n\t            }\n\t            else {\n\t                if (this.context.strict || token.value !== 'let' || kind !== 'var') {\n\t                    this.throwUnexpectedToken(token);\n\t                }\n\t            }\n\t        }\n\t        else if ((this.context.isModule || this.context.await) && token.type === 3 /* Identifier */ && token.value === 'await') {\n\t            this.tolerateUnexpectedToken(token);\n\t        }\n\t        return this.finalize(node, new Node.Identifier(token.value));\n\t    };\n\t    Parser.prototype.parseVariableDeclaration = function (options) {\n\t        var node = this.createNode();\n\t        var params = [];\n\t        var id = this.parsePattern(params, 'var');\n\t        if (this.context.strict && id.type === syntax_1.Syntax.Identifier) {\n\t            if (this.scanner.isRestrictedWord(id.name)) {\n\t                this.tolerateError(messages_1.Messages.StrictVarName);\n\t            }\n\t        }\n\t        var init = null;\n\t        if (this.match('=')) {\n\t            this.nextToken();\n\t            init = this.isolateCoverGrammar(this.parseAssignmentExpression);\n\t        }\n\t        else if (id.type !== syntax_1.Syntax.Identifier && !options.inFor) {\n\t            this.expect('=');\n\t        }\n\t        return this.finalize(node, new Node.VariableDeclarator(id, init));\n\t    };\n\t    Parser.prototype.parseVariableDeclarationList = function (options) {\n\t        var opt = { inFor: options.inFor };\n\t        var list = [];\n\t        list.push(this.parseVariableDeclaration(opt));\n\t        while (this.match(',')) {\n\t            this.nextToken();\n\t            list.push(this.parseVariableDeclaration(opt));\n\t        }\n\t        return list;\n\t    };\n\t    Parser.prototype.parseVariableStatement = function () {\n\t        var node = this.createNode();\n\t        this.expectKeyword('var');\n\t        var declarations = this.parseVariableDeclarationList({ inFor: false });\n\t        this.consumeSemicolon();\n\t        return this.finalize(node, new Node.VariableDeclaration(declarations, 'var'));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-empty-statement\n\t    Parser.prototype.parseEmptyStatement = function () {\n\t        var node = this.createNode();\n\t        this.expect(';');\n\t        return this.finalize(node, new Node.EmptyStatement());\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-expression-statement\n\t    Parser.prototype.parseExpressionStatement = function () {\n\t        var node = this.createNode();\n\t        var expr = this.parseExpression();\n\t        this.consumeSemicolon();\n\t        return this.finalize(node, new Node.ExpressionStatement(expr));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-if-statement\n\t    Parser.prototype.parseIfClause = function () {\n\t        if (this.context.strict && this.matchKeyword('function')) {\n\t            this.tolerateError(messages_1.Messages.StrictFunction);\n\t        }\n\t        return this.parseStatement();\n\t    };\n\t    Parser.prototype.parseIfStatement = function () {\n\t        var node = this.createNode();\n\t        var consequent;\n\t        var alternate = null;\n\t        this.expectKeyword('if');\n\t        this.expect('(');\n\t        var test = this.parseExpression();\n\t        if (!this.match(')') && this.config.tolerant) {\n\t            this.tolerateUnexpectedToken(this.nextToken());\n\t            consequent = this.finalize(this.createNode(), new Node.EmptyStatement());\n\t        }\n\t        else {\n\t            this.expect(')');\n\t            consequent = this.parseIfClause();\n\t            if (this.matchKeyword('else')) {\n\t                this.nextToken();\n\t                alternate = this.parseIfClause();\n\t            }\n\t        }\n\t        return this.finalize(node, new Node.IfStatement(test, consequent, alternate));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-do-while-statement\n\t    Parser.prototype.parseDoWhileStatement = function () {\n\t        var node = this.createNode();\n\t        this.expectKeyword('do');\n\t        var previousInIteration = this.context.inIteration;\n\t        this.context.inIteration = true;\n\t        var body = this.parseStatement();\n\t        this.context.inIteration = previousInIteration;\n\t        this.expectKeyword('while');\n\t        this.expect('(');\n\t        var test = this.parseExpression();\n\t        if (!this.match(')') && this.config.tolerant) {\n\t            this.tolerateUnexpectedToken(this.nextToken());\n\t        }\n\t        else {\n\t            this.expect(')');\n\t            if (this.match(';')) {\n\t                this.nextToken();\n\t            }\n\t        }\n\t        return this.finalize(node, new Node.DoWhileStatement(body, test));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-while-statement\n\t    Parser.prototype.parseWhileStatement = function () {\n\t        var node = this.createNode();\n\t        var body;\n\t        this.expectKeyword('while');\n\t        this.expect('(');\n\t        var test = this.parseExpression();\n\t        if (!this.match(')') && this.config.tolerant) {\n\t            this.tolerateUnexpectedToken(this.nextToken());\n\t            body = this.finalize(this.createNode(), new Node.EmptyStatement());\n\t        }\n\t        else {\n\t            this.expect(')');\n\t            var previousInIteration = this.context.inIteration;\n\t            this.context.inIteration = true;\n\t            body = this.parseStatement();\n\t            this.context.inIteration = previousInIteration;\n\t        }\n\t        return this.finalize(node, new Node.WhileStatement(test, body));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-for-statement\n\t    // https://tc39.github.io/ecma262/#sec-for-in-and-for-of-statements\n\t    Parser.prototype.parseForStatement = function () {\n\t        var init = null;\n\t        var test = null;\n\t        var update = null;\n\t        var forIn = true;\n\t        var left, right;\n\t        var node = this.createNode();\n\t        this.expectKeyword('for');\n\t        this.expect('(');\n\t        if (this.match(';')) {\n\t            this.nextToken();\n\t        }\n\t        else {\n\t            if (this.matchKeyword('var')) {\n\t                init = this.createNode();\n\t                this.nextToken();\n\t                var previousAllowIn = this.context.allowIn;\n\t                this.context.allowIn = false;\n\t                var declarations = this.parseVariableDeclarationList({ inFor: true });\n\t                this.context.allowIn = previousAllowIn;\n\t                if (declarations.length === 1 && this.matchKeyword('in')) {\n\t                    var decl = declarations[0];\n\t                    if (decl.init && (decl.id.type === syntax_1.Syntax.ArrayPattern || decl.id.type === syntax_1.Syntax.ObjectPattern || this.context.strict)) {\n\t                        this.tolerateError(messages_1.Messages.ForInOfLoopInitializer, 'for-in');\n\t                    }\n\t                    init = this.finalize(init, new Node.VariableDeclaration(declarations, 'var'));\n\t                    this.nextToken();\n\t                    left = init;\n\t                    right = this.parseExpression();\n\t                    init = null;\n\t                }\n\t                else if (declarations.length === 1 && declarations[0].init === null && this.matchContextualKeyword('of')) {\n\t                    init = this.finalize(init, new Node.VariableDeclaration(declarations, 'var'));\n\t                    this.nextToken();\n\t                    left = init;\n\t                    right = this.parseAssignmentExpression();\n\t                    init = null;\n\t                    forIn = false;\n\t                }\n\t                else {\n\t                    init = this.finalize(init, new Node.VariableDeclaration(declarations, 'var'));\n\t                    this.expect(';');\n\t                }\n\t            }\n\t            else if (this.matchKeyword('const') || this.matchKeyword('let')) {\n\t                init = this.createNode();\n\t                var kind = this.nextToken().value;\n\t                if (!this.context.strict && this.lookahead.value === 'in') {\n\t                    init = this.finalize(init, new Node.Identifier(kind));\n\t                    this.nextToken();\n\t                    left = init;\n\t                    right = this.parseExpression();\n\t                    init = null;\n\t                }\n\t                else {\n\t                    var previousAllowIn = this.context.allowIn;\n\t                    this.context.allowIn = false;\n\t                    var declarations = this.parseBindingList(kind, { inFor: true });\n\t                    this.context.allowIn = previousAllowIn;\n\t                    if (declarations.length === 1 && declarations[0].init === null && this.matchKeyword('in')) {\n\t                        init = this.finalize(init, new Node.VariableDeclaration(declarations, kind));\n\t                        this.nextToken();\n\t                        left = init;\n\t                        right = this.parseExpression();\n\t                        init = null;\n\t                    }\n\t                    else if (declarations.length === 1 && declarations[0].init === null && this.matchContextualKeyword('of')) {\n\t                        init = this.finalize(init, new Node.VariableDeclaration(declarations, kind));\n\t                        this.nextToken();\n\t                        left = init;\n\t                        right = this.parseAssignmentExpression();\n\t                        init = null;\n\t                        forIn = false;\n\t                    }\n\t                    else {\n\t                        this.consumeSemicolon();\n\t                        init = this.finalize(init, new Node.VariableDeclaration(declarations, kind));\n\t                    }\n\t                }\n\t            }\n\t            else {\n\t                var initStartToken = this.lookahead;\n\t                var previousAllowIn = this.context.allowIn;\n\t                this.context.allowIn = false;\n\t                init = this.inheritCoverGrammar(this.parseAssignmentExpression);\n\t                this.context.allowIn = previousAllowIn;\n\t                if (this.matchKeyword('in')) {\n\t                    if (!this.context.isAssignmentTarget || init.type === syntax_1.Syntax.AssignmentExpression) {\n\t                        this.tolerateError(messages_1.Messages.InvalidLHSInForIn);\n\t                    }\n\t                    this.nextToken();\n\t                    this.reinterpretExpressionAsPattern(init);\n\t                    left = init;\n\t                    right = this.parseExpression();\n\t                    init = null;\n\t                }\n\t                else if (this.matchContextualKeyword('of')) {\n\t                    if (!this.context.isAssignmentTarget || init.type === syntax_1.Syntax.AssignmentExpression) {\n\t                        this.tolerateError(messages_1.Messages.InvalidLHSInForLoop);\n\t                    }\n\t                    this.nextToken();\n\t                    this.reinterpretExpressionAsPattern(init);\n\t                    left = init;\n\t                    right = this.parseAssignmentExpression();\n\t                    init = null;\n\t                    forIn = false;\n\t                }\n\t                else {\n\t                    if (this.match(',')) {\n\t                        var initSeq = [init];\n\t                        while (this.match(',')) {\n\t                            this.nextToken();\n\t                            initSeq.push(this.isolateCoverGrammar(this.parseAssignmentExpression));\n\t                        }\n\t                        init = this.finalize(this.startNode(initStartToken), new Node.SequenceExpression(initSeq));\n\t                    }\n\t                    this.expect(';');\n\t                }\n\t            }\n\t        }\n\t        if (typeof left === 'undefined') {\n\t            if (!this.match(';')) {\n\t                test = this.parseExpression();\n\t            }\n\t            this.expect(';');\n\t            if (!this.match(')')) {\n\t                update = this.parseExpression();\n\t            }\n\t        }\n\t        var body;\n\t        if (!this.match(')') && this.config.tolerant) {\n\t            this.tolerateUnexpectedToken(this.nextToken());\n\t            body = this.finalize(this.createNode(), new Node.EmptyStatement());\n\t        }\n\t        else {\n\t            this.expect(')');\n\t            var previousInIteration = this.context.inIteration;\n\t            this.context.inIteration = true;\n\t            body = this.isolateCoverGrammar(this.parseStatement);\n\t            this.context.inIteration = previousInIteration;\n\t        }\n\t        return (typeof left === 'undefined') ?\n\t            this.finalize(node, new Node.ForStatement(init, test, update, body)) :\n\t            forIn ? this.finalize(node, new Node.ForInStatement(left, right, body)) :\n\t                this.finalize(node, new Node.ForOfStatement(left, right, body));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-continue-statement\n\t    Parser.prototype.parseContinueStatement = function () {\n\t        var node = this.createNode();\n\t        this.expectKeyword('continue');\n\t        var label = null;\n\t        if (this.lookahead.type === 3 /* Identifier */ && !this.hasLineTerminator) {\n\t            var id = this.parseVariableIdentifier();\n\t            label = id;\n\t            var key = '$' + id.name;\n\t            if (!Object.prototype.hasOwnProperty.call(this.context.labelSet, key)) {\n\t                this.throwError(messages_1.Messages.UnknownLabel, id.name);\n\t            }\n\t        }\n\t        this.consumeSemicolon();\n\t        if (label === null && !this.context.inIteration) {\n\t            this.throwError(messages_1.Messages.IllegalContinue);\n\t        }\n\t        return this.finalize(node, new Node.ContinueStatement(label));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-break-statement\n\t    Parser.prototype.parseBreakStatement = function () {\n\t        var node = this.createNode();\n\t        this.expectKeyword('break');\n\t        var label = null;\n\t        if (this.lookahead.type === 3 /* Identifier */ && !this.hasLineTerminator) {\n\t            var id = this.parseVariableIdentifier();\n\t            var key = '$' + id.name;\n\t            if (!Object.prototype.hasOwnProperty.call(this.context.labelSet, key)) {\n\t                this.throwError(messages_1.Messages.UnknownLabel, id.name);\n\t            }\n\t            label = id;\n\t        }\n\t        this.consumeSemicolon();\n\t        if (label === null && !this.context.inIteration && !this.context.inSwitch) {\n\t            this.throwError(messages_1.Messages.IllegalBreak);\n\t        }\n\t        return this.finalize(node, new Node.BreakStatement(label));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-return-statement\n\t    Parser.prototype.parseReturnStatement = function () {\n\t        if (!this.context.inFunctionBody) {\n\t            this.tolerateError(messages_1.Messages.IllegalReturn);\n\t        }\n\t        var node = this.createNode();\n\t        this.expectKeyword('return');\n\t        var hasArgument = (!this.match(';') && !this.match('}') &&\n\t            !this.hasLineTerminator && this.lookahead.type !== 2 /* EOF */) ||\n\t            this.lookahead.type === 8 /* StringLiteral */ ||\n\t            this.lookahead.type === 10 /* Template */;\n\t        var argument = hasArgument ? this.parseExpression() : null;\n\t        this.consumeSemicolon();\n\t        return this.finalize(node, new Node.ReturnStatement(argument));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-with-statement\n\t    Parser.prototype.parseWithStatement = function () {\n\t        if (this.context.strict) {\n\t            this.tolerateError(messages_1.Messages.StrictModeWith);\n\t        }\n\t        var node = this.createNode();\n\t        var body;\n\t        this.expectKeyword('with');\n\t        this.expect('(');\n\t        var object = this.parseExpression();\n\t        if (!this.match(')') && this.config.tolerant) {\n\t            this.tolerateUnexpectedToken(this.nextToken());\n\t            body = this.finalize(this.createNode(), new Node.EmptyStatement());\n\t        }\n\t        else {\n\t            this.expect(')');\n\t            body = this.parseStatement();\n\t        }\n\t        return this.finalize(node, new Node.WithStatement(object, body));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-switch-statement\n\t    Parser.prototype.parseSwitchCase = function () {\n\t        var node = this.createNode();\n\t        var test;\n\t        if (this.matchKeyword('default')) {\n\t            this.nextToken();\n\t            test = null;\n\t        }\n\t        else {\n\t            this.expectKeyword('case');\n\t            test = this.parseExpression();\n\t        }\n\t        this.expect(':');\n\t        var consequent = [];\n\t        while (true) {\n\t            if (this.match('}') || this.matchKeyword('default') || this.matchKeyword('case')) {\n\t                break;\n\t            }\n\t            consequent.push(this.parseStatementListItem());\n\t        }\n\t        return this.finalize(node, new Node.SwitchCase(test, consequent));\n\t    };\n\t    Parser.prototype.parseSwitchStatement = function () {\n\t        var node = this.createNode();\n\t        this.expectKeyword('switch');\n\t        this.expect('(');\n\t        var discriminant = this.parseExpression();\n\t        this.expect(')');\n\t        var previousInSwitch = this.context.inSwitch;\n\t        this.context.inSwitch = true;\n\t        var cases = [];\n\t        var defaultFound = false;\n\t        this.expect('{');\n\t        while (true) {\n\t            if (this.match('}')) {\n\t                break;\n\t            }\n\t            var clause = this.parseSwitchCase();\n\t            if (clause.test === null) {\n\t                if (defaultFound) {\n\t                    this.throwError(messages_1.Messages.MultipleDefaultsInSwitch);\n\t                }\n\t                defaultFound = true;\n\t            }\n\t            cases.push(clause);\n\t        }\n\t        this.expect('}');\n\t        this.context.inSwitch = previousInSwitch;\n\t        return this.finalize(node, new Node.SwitchStatement(discriminant, cases));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-labelled-statements\n\t    Parser.prototype.parseLabelledStatement = function () {\n\t        var node = this.createNode();\n\t        var expr = this.parseExpression();\n\t        var statement;\n\t        if ((expr.type === syntax_1.Syntax.Identifier) && this.match(':')) {\n\t            this.nextToken();\n\t            var id = expr;\n\t            var key = '$' + id.name;\n\t            if (Object.prototype.hasOwnProperty.call(this.context.labelSet, key)) {\n\t                this.throwError(messages_1.Messages.Redeclaration, 'Label', id.name);\n\t            }\n\t            this.context.labelSet[key] = true;\n\t            var body = void 0;\n\t            if (this.matchKeyword('class')) {\n\t                this.tolerateUnexpectedToken(this.lookahead);\n\t                body = this.parseClassDeclaration();\n\t            }\n\t            else if (this.matchKeyword('function')) {\n\t                var token = this.lookahead;\n\t                var declaration = this.parseFunctionDeclaration();\n\t                if (this.context.strict) {\n\t                    this.tolerateUnexpectedToken(token, messages_1.Messages.StrictFunction);\n\t                }\n\t                else if (declaration.generator) {\n\t                    this.tolerateUnexpectedToken(token, messages_1.Messages.GeneratorInLegacyContext);\n\t                }\n\t                body = declaration;\n\t            }\n\t            else {\n\t                body = this.parseStatement();\n\t            }\n\t            delete this.context.labelSet[key];\n\t            statement = new Node.LabeledStatement(id, body);\n\t        }\n\t        else {\n\t            this.consumeSemicolon();\n\t            statement = new Node.ExpressionStatement(expr);\n\t        }\n\t        return this.finalize(node, statement);\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-throw-statement\n\t    Parser.prototype.parseThrowStatement = function () {\n\t        var node = this.createNode();\n\t        this.expectKeyword('throw');\n\t        if (this.hasLineTerminator) {\n\t            this.throwError(messages_1.Messages.NewlineAfterThrow);\n\t        }\n\t        var argument = this.parseExpression();\n\t        this.consumeSemicolon();\n\t        return this.finalize(node, new Node.ThrowStatement(argument));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-try-statement\n\t    Parser.prototype.parseCatchClause = function () {\n\t        var node = this.createNode();\n\t        this.expectKeyword('catch');\n\t        this.expect('(');\n\t        if (this.match(')')) {\n\t            this.throwUnexpectedToken(this.lookahead);\n\t        }\n\t        var params = [];\n\t        var param = this.parsePattern(params);\n\t        var paramMap = {};\n\t        for (var i = 0; i < params.length; i++) {\n\t            var key = '$' + params[i].value;\n\t            if (Object.prototype.hasOwnProperty.call(paramMap, key)) {\n\t                this.tolerateError(messages_1.Messages.DuplicateBinding, params[i].value);\n\t            }\n\t            paramMap[key] = true;\n\t        }\n\t        if (this.context.strict && param.type === syntax_1.Syntax.Identifier) {\n\t            if (this.scanner.isRestrictedWord(param.name)) {\n\t                this.tolerateError(messages_1.Messages.StrictCatchVariable);\n\t            }\n\t        }\n\t        this.expect(')');\n\t        var body = this.parseBlock();\n\t        return this.finalize(node, new Node.CatchClause(param, body));\n\t    };\n\t    Parser.prototype.parseFinallyClause = function () {\n\t        this.expectKeyword('finally');\n\t        return this.parseBlock();\n\t    };\n\t    Parser.prototype.parseTryStatement = function () {\n\t        var node = this.createNode();\n\t        this.expectKeyword('try');\n\t        var block = this.parseBlock();\n\t        var handler = this.matchKeyword('catch') ? this.parseCatchClause() : null;\n\t        var finalizer = this.matchKeyword('finally') ? this.parseFinallyClause() : null;\n\t        if (!handler && !finalizer) {\n\t            this.throwError(messages_1.Messages.NoCatchOrFinally);\n\t        }\n\t        return this.finalize(node, new Node.TryStatement(block, handler, finalizer));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-debugger-statement\n\t    Parser.prototype.parseDebuggerStatement = function () {\n\t        var node = this.createNode();\n\t        this.expectKeyword('debugger');\n\t        this.consumeSemicolon();\n\t        return this.finalize(node, new Node.DebuggerStatement());\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-ecmascript-language-statements-and-declarations\n\t    Parser.prototype.parseStatement = function () {\n\t        var statement;\n\t        switch (this.lookahead.type) {\n\t            case 1 /* BooleanLiteral */:\n\t            case 5 /* NullLiteral */:\n\t            case 6 /* NumericLiteral */:\n\t            case 8 /* StringLiteral */:\n\t            case 10 /* Template */:\n\t            case 9 /* RegularExpression */:\n\t                statement = this.parseExpressionStatement();\n\t                break;\n\t            case 7 /* Punctuator */:\n\t                var value = this.lookahead.value;\n\t                if (value === '{') {\n\t                    statement = this.parseBlock();\n\t                }\n\t                else if (value === '(') {\n\t                    statement = this.parseExpressionStatement();\n\t                }\n\t                else if (value === ';') {\n\t                    statement = this.parseEmptyStatement();\n\t                }\n\t                else {\n\t                    statement = this.parseExpressionStatement();\n\t                }\n\t                break;\n\t            case 3 /* Identifier */:\n\t                statement = this.matchAsyncFunction() ? this.parseFunctionDeclaration() : this.parseLabelledStatement();\n\t                break;\n\t            case 4 /* Keyword */:\n\t                switch (this.lookahead.value) {\n\t                    case 'break':\n\t                        statement = this.parseBreakStatement();\n\t                        break;\n\t                    case 'continue':\n\t                        statement = this.parseContinueStatement();\n\t                        break;\n\t                    case 'debugger':\n\t                        statement = this.parseDebuggerStatement();\n\t                        break;\n\t                    case 'do':\n\t                        statement = this.parseDoWhileStatement();\n\t                        break;\n\t                    case 'for':\n\t                        statement = this.parseForStatement();\n\t                        break;\n\t                    case 'function':\n\t                        statement = this.parseFunctionDeclaration();\n\t                        break;\n\t                    case 'if':\n\t                        statement = this.parseIfStatement();\n\t                        break;\n\t                    case 'return':\n\t                        statement = this.parseReturnStatement();\n\t                        break;\n\t                    case 'switch':\n\t                        statement = this.parseSwitchStatement();\n\t                        break;\n\t                    case 'throw':\n\t                        statement = this.parseThrowStatement();\n\t                        break;\n\t                    case 'try':\n\t                        statement = this.parseTryStatement();\n\t                        break;\n\t                    case 'var':\n\t                        statement = this.parseVariableStatement();\n\t                        break;\n\t                    case 'while':\n\t                        statement = this.parseWhileStatement();\n\t                        break;\n\t                    case 'with':\n\t                        statement = this.parseWithStatement();\n\t                        break;\n\t                    default:\n\t                        statement = this.parseExpressionStatement();\n\t                        break;\n\t                }\n\t                break;\n\t            default:\n\t                statement = this.throwUnexpectedToken(this.lookahead);\n\t        }\n\t        return statement;\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-function-definitions\n\t    Parser.prototype.parseFunctionSourceElements = function () {\n\t        var node = this.createNode();\n\t        this.expect('{');\n\t        var body = this.parseDirectivePrologues();\n\t        var previousLabelSet = this.context.labelSet;\n\t        var previousInIteration = this.context.inIteration;\n\t        var previousInSwitch = this.context.inSwitch;\n\t        var previousInFunctionBody = this.context.inFunctionBody;\n\t        this.context.labelSet = {};\n\t        this.context.inIteration = false;\n\t        this.context.inSwitch = false;\n\t        this.context.inFunctionBody = true;\n\t        while (this.lookahead.type !== 2 /* EOF */) {\n\t            if (this.match('}')) {\n\t                break;\n\t            }\n\t            body.push(this.parseStatementListItem());\n\t        }\n\t        this.expect('}');\n\t        this.context.labelSet = previousLabelSet;\n\t        this.context.inIteration = previousInIteration;\n\t        this.context.inSwitch = previousInSwitch;\n\t        this.context.inFunctionBody = previousInFunctionBody;\n\t        return this.finalize(node, new Node.BlockStatement(body));\n\t    };\n\t    Parser.prototype.validateParam = function (options, param, name) {\n\t        var key = '$' + name;\n\t        if (this.context.strict) {\n\t            if (this.scanner.isRestrictedWord(name)) {\n\t                options.stricted = param;\n\t                options.message = messages_1.Messages.StrictParamName;\n\t            }\n\t            if (Object.prototype.hasOwnProperty.call(options.paramSet, key)) {\n\t                options.stricted = param;\n\t                options.message = messages_1.Messages.StrictParamDupe;\n\t            }\n\t        }\n\t        else if (!options.firstRestricted) {\n\t            if (this.scanner.isRestrictedWord(name)) {\n\t                options.firstRestricted = param;\n\t                options.message = messages_1.Messages.StrictParamName;\n\t            }\n\t            else if (this.scanner.isStrictModeReservedWord(name)) {\n\t                options.firstRestricted = param;\n\t                options.message = messages_1.Messages.StrictReservedWord;\n\t            }\n\t            else if (Object.prototype.hasOwnProperty.call(options.paramSet, key)) {\n\t                options.stricted = param;\n\t                options.message = messages_1.Messages.StrictParamDupe;\n\t            }\n\t        }\n\t        /* istanbul ignore next */\n\t        if (typeof Object.defineProperty === 'function') {\n\t            Object.defineProperty(options.paramSet, key, { value: true, enumerable: true, writable: true, configurable: true });\n\t        }\n\t        else {\n\t            options.paramSet[key] = true;\n\t        }\n\t    };\n\t    Parser.prototype.parseRestElement = function (params) {\n\t        var node = this.createNode();\n\t        this.expect('...');\n\t        var arg = this.parsePattern(params);\n\t        if (this.match('=')) {\n\t            this.throwError(messages_1.Messages.DefaultRestParameter);\n\t        }\n\t        if (!this.match(')')) {\n\t            this.throwError(messages_1.Messages.ParameterAfterRestParameter);\n\t        }\n\t        return this.finalize(node, new Node.RestElement(arg));\n\t    };\n\t    Parser.prototype.parseFormalParameter = function (options) {\n\t        var params = [];\n\t        var param = this.match('...') ? this.parseRestElement(params) : this.parsePatternWithDefault(params);\n\t        for (var i = 0; i < params.length; i++) {\n\t            this.validateParam(options, params[i], params[i].value);\n\t        }\n\t        options.simple = options.simple && (param instanceof Node.Identifier);\n\t        options.params.push(param);\n\t    };\n\t    Parser.prototype.parseFormalParameters = function (firstRestricted) {\n\t        var options;\n\t        options = {\n\t            simple: true,\n\t            params: [],\n\t            firstRestricted: firstRestricted\n\t        };\n\t        this.expect('(');\n\t        if (!this.match(')')) {\n\t            options.paramSet = {};\n\t            while (this.lookahead.type !== 2 /* EOF */) {\n\t                this.parseFormalParameter(options);\n\t                if (this.match(')')) {\n\t                    break;\n\t                }\n\t                this.expect(',');\n\t                if (this.match(')')) {\n\t                    break;\n\t                }\n\t            }\n\t        }\n\t        this.expect(')');\n\t        return {\n\t            simple: options.simple,\n\t            params: options.params,\n\t            stricted: options.stricted,\n\t            firstRestricted: options.firstRestricted,\n\t            message: options.message\n\t        };\n\t    };\n\t    Parser.prototype.matchAsyncFunction = function () {\n\t        var match = this.matchContextualKeyword('async');\n\t        if (match) {\n\t            var state = this.scanner.saveState();\n\t            this.scanner.scanComments();\n\t            var next = this.scanner.lex();\n\t            this.scanner.restoreState(state);\n\t            match = (state.lineNumber === next.lineNumber) && (next.type === 4 /* Keyword */) && (next.value === 'function');\n\t        }\n\t        return match;\n\t    };\n\t    Parser.prototype.parseFunctionDeclaration = function (identifierIsOptional) {\n\t        var node = this.createNode();\n\t        var isAsync = this.matchContextualKeyword('async');\n\t        if (isAsync) {\n\t            this.nextToken();\n\t        }\n\t        this.expectKeyword('function');\n\t        var isGenerator = isAsync ? false : this.match('*');\n\t        if (isGenerator) {\n\t            this.nextToken();\n\t        }\n\t        var message;\n\t        var id = null;\n\t        var firstRestricted = null;\n\t        if (!identifierIsOptional || !this.match('(')) {\n\t            var token = this.lookahead;\n\t            id = this.parseVariableIdentifier();\n\t            if (this.context.strict) {\n\t                if (this.scanner.isRestrictedWord(token.value)) {\n\t                    this.tolerateUnexpectedToken(token, messages_1.Messages.StrictFunctionName);\n\t                }\n\t            }\n\t            else {\n\t                if (this.scanner.isRestrictedWord(token.value)) {\n\t                    firstRestricted = token;\n\t                    message = messages_1.Messages.StrictFunctionName;\n\t                }\n\t                else if (this.scanner.isStrictModeReservedWord(token.value)) {\n\t                    firstRestricted = token;\n\t                    message = messages_1.Messages.StrictReservedWord;\n\t                }\n\t            }\n\t        }\n\t        var previousAllowAwait = this.context.await;\n\t        var previousAllowYield = this.context.allowYield;\n\t        this.context.await = isAsync;\n\t        this.context.allowYield = !isGenerator;\n\t        var formalParameters = this.parseFormalParameters(firstRestricted);\n\t        var params = formalParameters.params;\n\t        var stricted = formalParameters.stricted;\n\t        firstRestricted = formalParameters.firstRestricted;\n\t        if (formalParameters.message) {\n\t            message = formalParameters.message;\n\t        }\n\t        var previousStrict = this.context.strict;\n\t        var previousAllowStrictDirective = this.context.allowStrictDirective;\n\t        this.context.allowStrictDirective = formalParameters.simple;\n\t        var body = this.parseFunctionSourceElements();\n\t        if (this.context.strict && firstRestricted) {\n\t            this.throwUnexpectedToken(firstRestricted, message);\n\t        }\n\t        if (this.context.strict && stricted) {\n\t            this.tolerateUnexpectedToken(stricted, message);\n\t        }\n\t        this.context.strict = previousStrict;\n\t        this.context.allowStrictDirective = previousAllowStrictDirective;\n\t        this.context.await = previousAllowAwait;\n\t        this.context.allowYield = previousAllowYield;\n\t        return isAsync ? this.finalize(node, new Node.AsyncFunctionDeclaration(id, params, body)) :\n\t            this.finalize(node, new Node.FunctionDeclaration(id, params, body, isGenerator));\n\t    };\n\t    Parser.prototype.parseFunctionExpression = function () {\n\t        var node = this.createNode();\n\t        var isAsync = this.matchContextualKeyword('async');\n\t        if (isAsync) {\n\t            this.nextToken();\n\t        }\n\t        this.expectKeyword('function');\n\t        var isGenerator = isAsync ? false : this.match('*');\n\t        if (isGenerator) {\n\t            this.nextToken();\n\t        }\n\t        var message;\n\t        var id = null;\n\t        var firstRestricted;\n\t        var previousAllowAwait = this.context.await;\n\t        var previousAllowYield = this.context.allowYield;\n\t        this.context.await = isAsync;\n\t        this.context.allowYield = !isGenerator;\n\t        if (!this.match('(')) {\n\t            var token = this.lookahead;\n\t            id = (!this.context.strict && !isGenerator && this.matchKeyword('yield')) ? this.parseIdentifierName() : this.parseVariableIdentifier();\n\t            if (this.context.strict) {\n\t                if (this.scanner.isRestrictedWord(token.value)) {\n\t                    this.tolerateUnexpectedToken(token, messages_1.Messages.StrictFunctionName);\n\t                }\n\t            }\n\t            else {\n\t                if (this.scanner.isRestrictedWord(token.value)) {\n\t                    firstRestricted = token;\n\t                    message = messages_1.Messages.StrictFunctionName;\n\t                }\n\t                else if (this.scanner.isStrictModeReservedWord(token.value)) {\n\t                    firstRestricted = token;\n\t                    message = messages_1.Messages.StrictReservedWord;\n\t                }\n\t            }\n\t        }\n\t        var formalParameters = this.parseFormalParameters(firstRestricted);\n\t        var params = formalParameters.params;\n\t        var stricted = formalParameters.stricted;\n\t        firstRestricted = formalParameters.firstRestricted;\n\t        if (formalParameters.message) {\n\t            message = formalParameters.message;\n\t        }\n\t        var previousStrict = this.context.strict;\n\t        var previousAllowStrictDirective = this.context.allowStrictDirective;\n\t        this.context.allowStrictDirective = formalParameters.simple;\n\t        var body = this.parseFunctionSourceElements();\n\t        if (this.context.strict && firstRestricted) {\n\t            this.throwUnexpectedToken(firstRestricted, message);\n\t        }\n\t        if (this.context.strict && stricted) {\n\t            this.tolerateUnexpectedToken(stricted, message);\n\t        }\n\t        this.context.strict = previousStrict;\n\t        this.context.allowStrictDirective = previousAllowStrictDirective;\n\t        this.context.await = previousAllowAwait;\n\t        this.context.allowYield = previousAllowYield;\n\t        return isAsync ? this.finalize(node, new Node.AsyncFunctionExpression(id, params, body)) :\n\t            this.finalize(node, new Node.FunctionExpression(id, params, body, isGenerator));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-directive-prologues-and-the-use-strict-directive\n\t    Parser.prototype.parseDirective = function () {\n\t        var token = this.lookahead;\n\t        var node = this.createNode();\n\t        var expr = this.parseExpression();\n\t        var directive = (expr.type === syntax_1.Syntax.Literal) ? this.getTokenRaw(token).slice(1, -1) : null;\n\t        this.consumeSemicolon();\n\t        return this.finalize(node, directive ? new Node.Directive(expr, directive) : new Node.ExpressionStatement(expr));\n\t    };\n\t    Parser.prototype.parseDirectivePrologues = function () {\n\t        var firstRestricted = null;\n\t        var body = [];\n\t        while (true) {\n\t            var token = this.lookahead;\n\t            if (token.type !== 8 /* StringLiteral */) {\n\t                break;\n\t            }\n\t            var statement = this.parseDirective();\n\t            body.push(statement);\n\t            var directive = statement.directive;\n\t            if (typeof directive !== 'string') {\n\t                break;\n\t            }\n\t            if (directive === 'use strict') {\n\t                this.context.strict = true;\n\t                if (firstRestricted) {\n\t                    this.tolerateUnexpectedToken(firstRestricted, messages_1.Messages.StrictOctalLiteral);\n\t                }\n\t                if (!this.context.allowStrictDirective) {\n\t                    this.tolerateUnexpectedToken(token, messages_1.Messages.IllegalLanguageModeDirective);\n\t                }\n\t            }\n\t            else {\n\t                if (!firstRestricted && token.octal) {\n\t                    firstRestricted = token;\n\t                }\n\t            }\n\t        }\n\t        return body;\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-method-definitions\n\t    Parser.prototype.qualifiedPropertyName = function (token) {\n\t        switch (token.type) {\n\t            case 3 /* Identifier */:\n\t            case 8 /* StringLiteral */:\n\t            case 1 /* BooleanLiteral */:\n\t            case 5 /* NullLiteral */:\n\t            case 6 /* NumericLiteral */:\n\t            case 4 /* Keyword */:\n\t                return true;\n\t            case 7 /* Punctuator */:\n\t                return token.value === '[';\n\t            default:\n\t                break;\n\t        }\n\t        return false;\n\t    };\n\t    Parser.prototype.parseGetterMethod = function () {\n\t        var node = this.createNode();\n\t        var isGenerator = false;\n\t        var previousAllowYield = this.context.allowYield;\n\t        this.context.allowYield = !isGenerator;\n\t        var formalParameters = this.parseFormalParameters();\n\t        if (formalParameters.params.length > 0) {\n\t            this.tolerateError(messages_1.Messages.BadGetterArity);\n\t        }\n\t        var method = this.parsePropertyMethod(formalParameters);\n\t        this.context.allowYield = previousAllowYield;\n\t        return this.finalize(node, new Node.FunctionExpression(null, formalParameters.params, method, isGenerator));\n\t    };\n\t    Parser.prototype.parseSetterMethod = function () {\n\t        var node = this.createNode();\n\t        var isGenerator = false;\n\t        var previousAllowYield = this.context.allowYield;\n\t        this.context.allowYield = !isGenerator;\n\t        var formalParameters = this.parseFormalParameters();\n\t        if (formalParameters.params.length !== 1) {\n\t            this.tolerateError(messages_1.Messages.BadSetterArity);\n\t        }\n\t        else if (formalParameters.params[0] instanceof Node.RestElement) {\n\t            this.tolerateError(messages_1.Messages.BadSetterRestParameter);\n\t        }\n\t        var method = this.parsePropertyMethod(formalParameters);\n\t        this.context.allowYield = previousAllowYield;\n\t        return this.finalize(node, new Node.FunctionExpression(null, formalParameters.params, method, isGenerator));\n\t    };\n\t    Parser.prototype.parseGeneratorMethod = function () {\n\t        var node = this.createNode();\n\t        var isGenerator = true;\n\t        var previousAllowYield = this.context.allowYield;\n\t        this.context.allowYield = true;\n\t        var params = this.parseFormalParameters();\n\t        this.context.allowYield = false;\n\t        var method = this.parsePropertyMethod(params);\n\t        this.context.allowYield = previousAllowYield;\n\t        return this.finalize(node, new Node.FunctionExpression(null, params.params, method, isGenerator));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-generator-function-definitions\n\t    Parser.prototype.isStartOfExpression = function () {\n\t        var start = true;\n\t        var value = this.lookahead.value;\n\t        switch (this.lookahead.type) {\n\t            case 7 /* Punctuator */:\n\t                start = (value === '[') || (value === '(') || (value === '{') ||\n\t                    (value === '+') || (value === '-') ||\n\t                    (value === '!') || (value === '~') ||\n\t                    (value === '++') || (value === '--') ||\n\t                    (value === '/') || (value === '/='); // regular expression literal\n\t                break;\n\t            case 4 /* Keyword */:\n\t                start = (value === 'class') || (value === 'delete') ||\n\t                    (value === 'function') || (value === 'let') || (value === 'new') ||\n\t                    (value === 'super') || (value === 'this') || (value === 'typeof') ||\n\t                    (value === 'void') || (value === 'yield');\n\t                break;\n\t            default:\n\t                break;\n\t        }\n\t        return start;\n\t    };\n\t    Parser.prototype.parseYieldExpression = function () {\n\t        var node = this.createNode();\n\t        this.expectKeyword('yield');\n\t        var argument = null;\n\t        var delegate = false;\n\t        if (!this.hasLineTerminator) {\n\t            var previousAllowYield = this.context.allowYield;\n\t            this.context.allowYield = false;\n\t            delegate = this.match('*');\n\t            if (delegate) {\n\t                this.nextToken();\n\t                argument = this.parseAssignmentExpression();\n\t            }\n\t            else if (this.isStartOfExpression()) {\n\t                argument = this.parseAssignmentExpression();\n\t            }\n\t            this.context.allowYield = previousAllowYield;\n\t        }\n\t        return this.finalize(node, new Node.YieldExpression(argument, delegate));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-class-definitions\n\t    Parser.prototype.parseClassElement = function (hasConstructor) {\n\t        var token = this.lookahead;\n\t        var node = this.createNode();\n\t        var kind = '';\n\t        var key = null;\n\t        var value = null;\n\t        var computed = false;\n\t        var method = false;\n\t        var isStatic = false;\n\t        var isAsync = false;\n\t        if (this.match('*')) {\n\t            this.nextToken();\n\t        }\n\t        else {\n\t            computed = this.match('[');\n\t            key = this.parseObjectPropertyKey();\n\t            var id = key;\n\t            if (id.name === 'static' && (this.qualifiedPropertyName(this.lookahead) || this.match('*'))) {\n\t                token = this.lookahead;\n\t                isStatic = true;\n\t                computed = this.match('[');\n\t                if (this.match('*')) {\n\t                    this.nextToken();\n\t                }\n\t                else {\n\t                    key = this.parseObjectPropertyKey();\n\t                }\n\t            }\n\t            if ((token.type === 3 /* Identifier */) && !this.hasLineTerminator && (token.value === 'async')) {\n\t                var punctuator = this.lookahead.value;\n\t                if (punctuator !== ':' && punctuator !== '(' && punctuator !== '*') {\n\t                    isAsync = true;\n\t                    token = this.lookahead;\n\t                    key = this.parseObjectPropertyKey();\n\t                    if (token.type === 3 /* Identifier */ && token.value === 'constructor') {\n\t                        this.tolerateUnexpectedToken(token, messages_1.Messages.ConstructorIsAsync);\n\t                    }\n\t                }\n\t            }\n\t        }\n\t        var lookaheadPropertyKey = this.qualifiedPropertyName(this.lookahead);\n\t        if (token.type === 3 /* Identifier */) {\n\t            if (token.value === 'get' && lookaheadPropertyKey) {\n\t                kind = 'get';\n\t                computed = this.match('[');\n\t                key = this.parseObjectPropertyKey();\n\t                this.context.allowYield = false;\n\t                value = this.parseGetterMethod();\n\t            }\n\t            else if (token.value === 'set' && lookaheadPropertyKey) {\n\t                kind = 'set';\n\t                computed = this.match('[');\n\t                key = this.parseObjectPropertyKey();\n\t                value = this.parseSetterMethod();\n\t            }\n\t        }\n\t        else if (token.type === 7 /* Punctuator */ && token.value === '*' && lookaheadPropertyKey) {\n\t            kind = 'init';\n\t            computed = this.match('[');\n\t            key = this.parseObjectPropertyKey();\n\t            value = this.parseGeneratorMethod();\n\t            method = true;\n\t        }\n\t        if (!kind && key && this.match('(')) {\n\t            kind = 'init';\n\t            value = isAsync ? this.parsePropertyMethodAsyncFunction() : this.parsePropertyMethodFunction();\n\t            method = true;\n\t        }\n\t        if (!kind) {\n\t            this.throwUnexpectedToken(this.lookahead);\n\t        }\n\t        if (kind === 'init') {\n\t            kind = 'method';\n\t        }\n\t        if (!computed) {\n\t            if (isStatic && this.isPropertyKey(key, 'prototype')) {\n\t                this.throwUnexpectedToken(token, messages_1.Messages.StaticPrototype);\n\t            }\n\t            if (!isStatic && this.isPropertyKey(key, 'constructor')) {\n\t                if (kind !== 'method' || !method || (value && value.generator)) {\n\t                    this.throwUnexpectedToken(token, messages_1.Messages.ConstructorSpecialMethod);\n\t                }\n\t                if (hasConstructor.value) {\n\t                    this.throwUnexpectedToken(token, messages_1.Messages.DuplicateConstructor);\n\t                }\n\t                else {\n\t                    hasConstructor.value = true;\n\t                }\n\t                kind = 'constructor';\n\t            }\n\t        }\n\t        return this.finalize(node, new Node.MethodDefinition(key, computed, value, kind, isStatic));\n\t    };\n\t    Parser.prototype.parseClassElementList = function () {\n\t        var body = [];\n\t        var hasConstructor = { value: false };\n\t        this.expect('{');\n\t        while (!this.match('}')) {\n\t            if (this.match(';')) {\n\t                this.nextToken();\n\t            }\n\t            else {\n\t                body.push(this.parseClassElement(hasConstructor));\n\t            }\n\t        }\n\t        this.expect('}');\n\t        return body;\n\t    };\n\t    Parser.prototype.parseClassBody = function () {\n\t        var node = this.createNode();\n\t        var elementList = this.parseClassElementList();\n\t        return this.finalize(node, new Node.ClassBody(elementList));\n\t    };\n\t    Parser.prototype.parseClassDeclaration = function (identifierIsOptional) {\n\t        var node = this.createNode();\n\t        var previousStrict = this.context.strict;\n\t        this.context.strict = true;\n\t        this.expectKeyword('class');\n\t        var id = (identifierIsOptional && (this.lookahead.type !== 3 /* Identifier */)) ? null : this.parseVariableIdentifier();\n\t        var superClass = null;\n\t        if (this.matchKeyword('extends')) {\n\t            this.nextToken();\n\t            superClass = this.isolateCoverGrammar(this.parseLeftHandSideExpressionAllowCall);\n\t        }\n\t        var classBody = this.parseClassBody();\n\t        this.context.strict = previousStrict;\n\t        return this.finalize(node, new Node.ClassDeclaration(id, superClass, classBody));\n\t    };\n\t    Parser.prototype.parseClassExpression = function () {\n\t        var node = this.createNode();\n\t        var previousStrict = this.context.strict;\n\t        this.context.strict = true;\n\t        this.expectKeyword('class');\n\t        var id = (this.lookahead.type === 3 /* Identifier */) ? this.parseVariableIdentifier() : null;\n\t        var superClass = null;\n\t        if (this.matchKeyword('extends')) {\n\t            this.nextToken();\n\t            superClass = this.isolateCoverGrammar(this.parseLeftHandSideExpressionAllowCall);\n\t        }\n\t        var classBody = this.parseClassBody();\n\t        this.context.strict = previousStrict;\n\t        return this.finalize(node, new Node.ClassExpression(id, superClass, classBody));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-scripts\n\t    // https://tc39.github.io/ecma262/#sec-modules\n\t    Parser.prototype.parseModule = function () {\n\t        this.context.strict = true;\n\t        this.context.isModule = true;\n\t        this.scanner.isModule = true;\n\t        var node = this.createNode();\n\t        var body = this.parseDirectivePrologues();\n\t        while (this.lookahead.type !== 2 /* EOF */) {\n\t            body.push(this.parseStatementListItem());\n\t        }\n\t        return this.finalize(node, new Node.Module(body));\n\t    };\n\t    Parser.prototype.parseScript = function () {\n\t        var node = this.createNode();\n\t        var body = this.parseDirectivePrologues();\n\t        while (this.lookahead.type !== 2 /* EOF */) {\n\t            body.push(this.parseStatementListItem());\n\t        }\n\t        return this.finalize(node, new Node.Script(body));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-imports\n\t    Parser.prototype.parseModuleSpecifier = function () {\n\t        var node = this.createNode();\n\t        if (this.lookahead.type !== 8 /* StringLiteral */) {\n\t            this.throwError(messages_1.Messages.InvalidModuleSpecifier);\n\t        }\n\t        var token = this.nextToken();\n\t        var raw = this.getTokenRaw(token);\n\t        return this.finalize(node, new Node.Literal(token.value, raw));\n\t    };\n\t    // import {<foo as bar>} ...;\n\t    Parser.prototype.parseImportSpecifier = function () {\n\t        var node = this.createNode();\n\t        var imported;\n\t        var local;\n\t        if (this.lookahead.type === 3 /* Identifier */) {\n\t            imported = this.parseVariableIdentifier();\n\t            local = imported;\n\t            if (this.matchContextualKeyword('as')) {\n\t                this.nextToken();\n\t                local = this.parseVariableIdentifier();\n\t            }\n\t        }\n\t        else {\n\t            imported = this.parseIdentifierName();\n\t            local = imported;\n\t            if (this.matchContextualKeyword('as')) {\n\t                this.nextToken();\n\t                local = this.parseVariableIdentifier();\n\t            }\n\t            else {\n\t                this.throwUnexpectedToken(this.nextToken());\n\t            }\n\t        }\n\t        return this.finalize(node, new Node.ImportSpecifier(local, imported));\n\t    };\n\t    // {foo, bar as bas}\n\t    Parser.prototype.parseNamedImports = function () {\n\t        this.expect('{');\n\t        var specifiers = [];\n\t        while (!this.match('}')) {\n\t            specifiers.push(this.parseImportSpecifier());\n\t            if (!this.match('}')) {\n\t                this.expect(',');\n\t            }\n\t        }\n\t        this.expect('}');\n\t        return specifiers;\n\t    };\n\t    // import <foo> ...;\n\t    Parser.prototype.parseImportDefaultSpecifier = function () {\n\t        var node = this.createNode();\n\t        var local = this.parseIdentifierName();\n\t        return this.finalize(node, new Node.ImportDefaultSpecifier(local));\n\t    };\n\t    // import <* as foo> ...;\n\t    Parser.prototype.parseImportNamespaceSpecifier = function () {\n\t        var node = this.createNode();\n\t        this.expect('*');\n\t        if (!this.matchContextualKeyword('as')) {\n\t            this.throwError(messages_1.Messages.NoAsAfterImportNamespace);\n\t        }\n\t        this.nextToken();\n\t        var local = this.parseIdentifierName();\n\t        return this.finalize(node, new Node.ImportNamespaceSpecifier(local));\n\t    };\n\t    Parser.prototype.parseImportDeclaration = function () {\n\t        if (this.context.inFunctionBody) {\n\t            this.throwError(messages_1.Messages.IllegalImportDeclaration);\n\t        }\n\t        var node = this.createNode();\n\t        this.expectKeyword('import');\n\t        var src;\n\t        var specifiers = [];\n\t        if (this.lookahead.type === 8 /* StringLiteral */) {\n\t            // import 'foo';\n\t            src = this.parseModuleSpecifier();\n\t        }\n\t        else {\n\t            if (this.match('{')) {\n\t                // import {bar}\n\t                specifiers = specifiers.concat(this.parseNamedImports());\n\t            }\n\t            else if (this.match('*')) {\n\t                // import * as foo\n\t                specifiers.push(this.parseImportNamespaceSpecifier());\n\t            }\n\t            else if (this.isIdentifierName(this.lookahead) && !this.matchKeyword('default')) {\n\t                // import foo\n\t                specifiers.push(this.parseImportDefaultSpecifier());\n\t                if (this.match(',')) {\n\t                    this.nextToken();\n\t                    if (this.match('*')) {\n\t                        // import foo, * as foo\n\t                        specifiers.push(this.parseImportNamespaceSpecifier());\n\t                    }\n\t                    else if (this.match('{')) {\n\t                        // import foo, {bar}\n\t                        specifiers = specifiers.concat(this.parseNamedImports());\n\t                    }\n\t                    else {\n\t                        this.throwUnexpectedToken(this.lookahead);\n\t                    }\n\t                }\n\t            }\n\t            else {\n\t                this.throwUnexpectedToken(this.nextToken());\n\t            }\n\t            if (!this.matchContextualKeyword('from')) {\n\t                var message = this.lookahead.value ? messages_1.Messages.UnexpectedToken : messages_1.Messages.MissingFromClause;\n\t                this.throwError(message, this.lookahead.value);\n\t            }\n\t            this.nextToken();\n\t            src = this.parseModuleSpecifier();\n\t        }\n\t        this.consumeSemicolon();\n\t        return this.finalize(node, new Node.ImportDeclaration(specifiers, src));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-exports\n\t    Parser.prototype.parseExportSpecifier = function () {\n\t        var node = this.createNode();\n\t        var local = this.parseIdentifierName();\n\t        var exported = local;\n\t        if (this.matchContextualKeyword('as')) {\n\t            this.nextToken();\n\t            exported = this.parseIdentifierName();\n\t        }\n\t        return this.finalize(node, new Node.ExportSpecifier(local, exported));\n\t    };\n\t    Parser.prototype.parseExportDeclaration = function () {\n\t        if (this.context.inFunctionBody) {\n\t            this.throwError(messages_1.Messages.IllegalExportDeclaration);\n\t        }\n\t        var node = this.createNode();\n\t        this.expectKeyword('export');\n\t        var exportDeclaration;\n\t        if (this.matchKeyword('default')) {\n\t            // export default ...\n\t            this.nextToken();\n\t            if (this.matchKeyword('function')) {\n\t                // export default function foo () {}\n\t                // export default function () {}\n\t                var declaration = this.parseFunctionDeclaration(true);\n\t                exportDeclaration = this.finalize(node, new Node.ExportDefaultDeclaration(declaration));\n\t            }\n\t            else if (this.matchKeyword('class')) {\n\t                // export default class foo {}\n\t                var declaration = this.parseClassDeclaration(true);\n\t                exportDeclaration = this.finalize(node, new Node.ExportDefaultDeclaration(declaration));\n\t            }\n\t            else if (this.matchContextualKeyword('async')) {\n\t                // export default async function f () {}\n\t                // export default async function () {}\n\t                // export default async x => x\n\t                var declaration = this.matchAsyncFunction() ? this.parseFunctionDeclaration(true) : this.parseAssignmentExpression();\n\t                exportDeclaration = this.finalize(node, new Node.ExportDefaultDeclaration(declaration));\n\t            }\n\t            else {\n\t                if (this.matchContextualKeyword('from')) {\n\t                    this.throwError(messages_1.Messages.UnexpectedToken, this.lookahead.value);\n\t                }\n\t                // export default {};\n\t                // export default [];\n\t                // export default (1 + 2);\n\t                var declaration = this.match('{') ? this.parseObjectInitializer() :\n\t                    this.match('[') ? this.parseArrayInitializer() : this.parseAssignmentExpression();\n\t                this.consumeSemicolon();\n\t                exportDeclaration = this.finalize(node, new Node.ExportDefaultDeclaration(declaration));\n\t            }\n\t        }\n\t        else if (this.match('*')) {\n\t            // export * from 'foo';\n\t            this.nextToken();\n\t            if (!this.matchContextualKeyword('from')) {\n\t                var message = this.lookahead.value ? messages_1.Messages.UnexpectedToken : messages_1.Messages.MissingFromClause;\n\t                this.throwError(message, this.lookahead.value);\n\t            }\n\t            this.nextToken();\n\t            var src = this.parseModuleSpecifier();\n\t            this.consumeSemicolon();\n\t            exportDeclaration = this.finalize(node, new Node.ExportAllDeclaration(src));\n\t        }\n\t        else if (this.lookahead.type === 4 /* Keyword */) {\n\t            // export var f = 1;\n\t            var declaration = void 0;\n\t            switch (this.lookahead.value) {\n\t                case 'let':\n\t                case 'const':\n\t                    declaration = this.parseLexicalDeclaration({ inFor: false });\n\t                    break;\n\t                case 'var':\n\t                case 'class':\n\t                case 'function':\n\t                    declaration = this.parseStatementListItem();\n\t                    break;\n\t                default:\n\t                    this.throwUnexpectedToken(this.lookahead);\n\t            }\n\t            exportDeclaration = this.finalize(node, new Node.ExportNamedDeclaration(declaration, [], null));\n\t        }\n\t        else if (this.matchAsyncFunction()) {\n\t            var declaration = this.parseFunctionDeclaration();\n\t            exportDeclaration = this.finalize(node, new Node.ExportNamedDeclaration(declaration, [], null));\n\t        }\n\t        else {\n\t            var specifiers = [];\n\t            var source = null;\n\t            var isExportFromIdentifier = false;\n\t            this.expect('{');\n\t            while (!this.match('}')) {\n\t                isExportFromIdentifier = isExportFromIdentifier || this.matchKeyword('default');\n\t                specifiers.push(this.parseExportSpecifier());\n\t                if (!this.match('}')) {\n\t                    this.expect(',');\n\t                }\n\t            }\n\t            this.expect('}');\n\t            if (this.matchContextualKeyword('from')) {\n\t                // export {default} from 'foo';\n\t                // export {foo} from 'foo';\n\t                this.nextToken();\n\t                source = this.parseModuleSpecifier();\n\t                this.consumeSemicolon();\n\t            }\n\t            else if (isExportFromIdentifier) {\n\t                // export {default}; // missing fromClause\n\t                var message = this.lookahead.value ? messages_1.Messages.UnexpectedToken : messages_1.Messages.MissingFromClause;\n\t                this.throwError(message, this.lookahead.value);\n\t            }\n\t            else {\n\t                // export {foo};\n\t                this.consumeSemicolon();\n\t            }\n\t            exportDeclaration = this.finalize(node, new Node.ExportNamedDeclaration(null, specifiers, source));\n\t        }\n\t        return exportDeclaration;\n\t    };\n\t    return Parser;\n\t}());\n\texports.Parser = Parser;\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t// Ensure the condition is true, otherwise throw an error.\n\t// This is only to have a better contract semantic, i.e. another safety net\n\t// to catch a logic error. The condition shall be fulfilled in normal case.\n\t// Do NOT use this to enforce a certain condition on any user input.\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tfunction assert(condition, message) {\n\t    /* istanbul ignore if */\n\t    if (!condition) {\n\t        throw new Error('ASSERT: ' + message);\n\t    }\n\t}\n\texports.assert = assert;\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t/* tslint:disable:max-classes-per-file */\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tvar ErrorHandler = (function () {\n\t    function ErrorHandler() {\n\t        this.errors = [];\n\t        this.tolerant = false;\n\t    }\n\t    ErrorHandler.prototype.recordError = function (error) {\n\t        this.errors.push(error);\n\t    };\n\t    ErrorHandler.prototype.tolerate = function (error) {\n\t        if (this.tolerant) {\n\t            this.recordError(error);\n\t        }\n\t        else {\n\t            throw error;\n\t        }\n\t    };\n\t    ErrorHandler.prototype.constructError = function (msg, column) {\n\t        var error = new Error(msg);\n\t        try {\n\t            throw error;\n\t        }\n\t        catch (base) {\n\t            /* istanbul ignore else */\n\t            if (Object.create && Object.defineProperty) {\n\t                error = Object.create(base);\n\t                Object.defineProperty(error, 'column', { value: column });\n\t            }\n\t        }\n\t        /* istanbul ignore next */\n\t        return error;\n\t    };\n\t    ErrorHandler.prototype.createError = function (index, line, col, description) {\n\t        var msg = 'Line ' + line + ': ' + description;\n\t        var error = this.constructError(msg, col);\n\t        error.index = index;\n\t        error.lineNumber = line;\n\t        error.description = description;\n\t        return error;\n\t    };\n\t    ErrorHandler.prototype.throwError = function (index, line, col, description) {\n\t        throw this.createError(index, line, col, description);\n\t    };\n\t    ErrorHandler.prototype.tolerateError = function (index, line, col, description) {\n\t        var error = this.createError(index, line, col, description);\n\t        if (this.tolerant) {\n\t            this.recordError(error);\n\t        }\n\t        else {\n\t            throw error;\n\t        }\n\t    };\n\t    return ErrorHandler;\n\t}());\n\texports.ErrorHandler = ErrorHandler;\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\t// Error messages should be identical to V8.\n\texports.Messages = {\n\t    BadGetterArity: 'Getter must not have any formal parameters',\n\t    BadSetterArity: 'Setter must have exactly one formal parameter',\n\t    BadSetterRestParameter: 'Setter function argument must not be a rest parameter',\n\t    ConstructorIsAsync: 'Class constructor may not be an async method',\n\t    ConstructorSpecialMethod: 'Class constructor may not be an accessor',\n\t    DeclarationMissingInitializer: 'Missing initializer in %0 declaration',\n\t    DefaultRestParameter: 'Unexpected token =',\n\t    DuplicateBinding: 'Duplicate binding %0',\n\t    DuplicateConstructor: 'A class may only have one constructor',\n\t    DuplicateProtoProperty: 'Duplicate __proto__ fields are not allowed in object literals',\n\t    ForInOfLoopInitializer: '%0 loop variable declaration may not have an initializer',\n\t    GeneratorInLegacyContext: 'Generator declarations are not allowed in legacy contexts',\n\t    IllegalBreak: 'Illegal break statement',\n\t    IllegalContinue: 'Illegal continue statement',\n\t    IllegalExportDeclaration: 'Unexpected token',\n\t    IllegalImportDeclaration: 'Unexpected token',\n\t    IllegalLanguageModeDirective: 'Illegal \\'use strict\\' directive in function with non-simple parameter list',\n\t    IllegalReturn: 'Illegal return statement',\n\t    InvalidEscapedReservedWord: 'Keyword must not contain escaped characters',\n\t    InvalidHexEscapeSequence: 'Invalid hexadecimal escape sequence',\n\t    InvalidLHSInAssignment: 'Invalid left-hand side in assignment',\n\t    InvalidLHSInForIn: 'Invalid left-hand side in for-in',\n\t    InvalidLHSInForLoop: 'Invalid left-hand side in for-loop',\n\t    InvalidModuleSpecifier: 'Unexpected token',\n\t    InvalidRegExp: 'Invalid regular expression',\n\t    LetInLexicalBinding: 'let is disallowed as a lexically bound name',\n\t    MissingFromClause: 'Unexpected token',\n\t    MultipleDefaultsInSwitch: 'More than one default clause in switch statement',\n\t    NewlineAfterThrow: 'Illegal newline after throw',\n\t    NoAsAfterImportNamespace: 'Unexpected token',\n\t    NoCatchOrFinally: 'Missing catch or finally after try',\n\t    ParameterAfterRestParameter: 'Rest parameter must be last formal parameter',\n\t    Redeclaration: '%0 \\'%1\\' has already been declared',\n\t    StaticPrototype: 'Classes may not have static property named prototype',\n\t    StrictCatchVariable: 'Catch variable may not be eval or arguments in strict mode',\n\t    StrictDelete: 'Delete of an unqualified identifier in strict mode.',\n\t    StrictFunction: 'In strict mode code, functions can only be declared at top level or inside a block',\n\t    StrictFunctionName: 'Function name may not be eval or arguments in strict mode',\n\t    StrictLHSAssignment: 'Assignment to eval or arguments is not allowed in strict mode',\n\t    StrictLHSPostfix: 'Postfix increment/decrement may not have eval or arguments operand in strict mode',\n\t    StrictLHSPrefix: 'Prefix increment/decrement may not have eval or arguments operand in strict mode',\n\t    StrictModeWith: 'Strict mode code may not include a with statement',\n\t    StrictOctalLiteral: 'Octal literals are not allowed in strict mode.',\n\t    StrictParamDupe: 'Strict mode function may not have duplicate parameter names',\n\t    StrictParamName: 'Parameter name eval or arguments is not allowed in strict mode',\n\t    StrictReservedWord: 'Use of future reserved word in strict mode',\n\t    StrictVarName: 'Variable name may not be eval or arguments in strict mode',\n\t    TemplateOctalLiteral: 'Octal literals are not allowed in template strings.',\n\t    UnexpectedEOS: 'Unexpected end of input',\n\t    UnexpectedIdentifier: 'Unexpected identifier',\n\t    UnexpectedNumber: 'Unexpected number',\n\t    UnexpectedReserved: 'Unexpected reserved word',\n\t    UnexpectedString: 'Unexpected string',\n\t    UnexpectedTemplate: 'Unexpected quasi %0',\n\t    UnexpectedToken: 'Unexpected token %0',\n\t    UnexpectedTokenIllegal: 'Unexpected token ILLEGAL',\n\t    UnknownLabel: 'Undefined label \\'%0\\'',\n\t    UnterminatedRegExp: 'Invalid regular expression: missing /'\n\t};\n\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tvar assert_1 = __webpack_require__(9);\n\tvar character_1 = __webpack_require__(4);\n\tvar messages_1 = __webpack_require__(11);\n\tfunction hexValue(ch) {\n\t    return '0123456789abcdef'.indexOf(ch.toLowerCase());\n\t}\n\tfunction octalValue(ch) {\n\t    return '01234567'.indexOf(ch);\n\t}\n\tvar Scanner = (function () {\n\t    function Scanner(code, handler) {\n\t        this.source = code;\n\t        this.errorHandler = handler;\n\t        this.trackComment = false;\n\t        this.isModule = false;\n\t        this.length = code.length;\n\t        this.index = 0;\n\t        this.lineNumber = (code.length > 0) ? 1 : 0;\n\t        this.lineStart = 0;\n\t        this.curlyStack = [];\n\t    }\n\t    Scanner.prototype.saveState = function () {\n\t        return {\n\t            index: this.index,\n\t            lineNumber: this.lineNumber,\n\t            lineStart: this.lineStart\n\t        };\n\t    };\n\t    Scanner.prototype.restoreState = function (state) {\n\t        this.index = state.index;\n\t        this.lineNumber = state.lineNumber;\n\t        this.lineStart = state.lineStart;\n\t    };\n\t    Scanner.prototype.eof = function () {\n\t        return this.index >= this.length;\n\t    };\n\t    Scanner.prototype.throwUnexpectedToken = function (message) {\n\t        if (message === void 0) { message = messages_1.Messages.UnexpectedTokenIllegal; }\n\t        return this.errorHandler.throwError(this.index, this.lineNumber, this.index - this.lineStart + 1, message);\n\t    };\n\t    Scanner.prototype.tolerateUnexpectedToken = function (message) {\n\t        if (message === void 0) { message = messages_1.Messages.UnexpectedTokenIllegal; }\n\t        this.errorHandler.tolerateError(this.index, this.lineNumber, this.index - this.lineStart + 1, message);\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-comments\n\t    Scanner.prototype.skipSingleLineComment = function (offset) {\n\t        var comments = [];\n\t        var start, loc;\n\t        if (this.trackComment) {\n\t            comments = [];\n\t            start = this.index - offset;\n\t            loc = {\n\t                start: {\n\t                    line: this.lineNumber,\n\t                    column: this.index - this.lineStart - offset\n\t                },\n\t                end: {}\n\t            };\n\t        }\n\t        while (!this.eof()) {\n\t            var ch = this.source.charCodeAt(this.index);\n\t            ++this.index;\n\t            if (character_1.Character.isLineTerminator(ch)) {\n\t                if (this.trackComment) {\n\t                    loc.end = {\n\t                        line: this.lineNumber,\n\t                        column: this.index - this.lineStart - 1\n\t                    };\n\t                    var entry = {\n\t                        multiLine: false,\n\t                        slice: [start + offset, this.index - 1],\n\t                        range: [start, this.index - 1],\n\t                        loc: loc\n\t                    };\n\t                    comments.push(entry);\n\t                }\n\t                if (ch === 13 && this.source.charCodeAt(this.index) === 10) {\n\t                    ++this.index;\n\t                }\n\t                ++this.lineNumber;\n\t                this.lineStart = this.index;\n\t                return comments;\n\t            }\n\t        }\n\t        if (this.trackComment) {\n\t            loc.end = {\n\t                line: this.lineNumber,\n\t                column: this.index - this.lineStart\n\t            };\n\t            var entry = {\n\t                multiLine: false,\n\t                slice: [start + offset, this.index],\n\t                range: [start, this.index],\n\t                loc: loc\n\t            };\n\t            comments.push(entry);\n\t        }\n\t        return comments;\n\t    };\n\t    Scanner.prototype.skipMultiLineComment = function () {\n\t        var comments = [];\n\t        var start, loc;\n\t        if (this.trackComment) {\n\t            comments = [];\n\t            start = this.index - 2;\n\t            loc = {\n\t                start: {\n\t                    line: this.lineNumber,\n\t                    column: this.index - this.lineStart - 2\n\t                },\n\t                end: {}\n\t            };\n\t        }\n\t        while (!this.eof()) {\n\t            var ch = this.source.charCodeAt(this.index);\n\t            if (character_1.Character.isLineTerminator(ch)) {\n\t                if (ch === 0x0D && this.source.charCodeAt(this.index + 1) === 0x0A) {\n\t                    ++this.index;\n\t                }\n\t                ++this.lineNumber;\n\t                ++this.index;\n\t                this.lineStart = this.index;\n\t            }\n\t            else if (ch === 0x2A) {\n\t                // Block comment ends with '*/'.\n\t                if (this.source.charCodeAt(this.index + 1) === 0x2F) {\n\t                    this.index += 2;\n\t                    if (this.trackComment) {\n\t                        loc.end = {\n\t                            line: this.lineNumber,\n\t                            column: this.index - this.lineStart\n\t                        };\n\t                        var entry = {\n\t                            multiLine: true,\n\t                            slice: [start + 2, this.index - 2],\n\t                            range: [start, this.index],\n\t                            loc: loc\n\t                        };\n\t                        comments.push(entry);\n\t                    }\n\t                    return comments;\n\t                }\n\t                ++this.index;\n\t            }\n\t            else {\n\t                ++this.index;\n\t            }\n\t        }\n\t        // Ran off the end of the file - the whole thing is a comment\n\t        if (this.trackComment) {\n\t            loc.end = {\n\t                line: this.lineNumber,\n\t                column: this.index - this.lineStart\n\t            };\n\t            var entry = {\n\t                multiLine: true,\n\t                slice: [start + 2, this.index],\n\t                range: [start, this.index],\n\t                loc: loc\n\t            };\n\t            comments.push(entry);\n\t        }\n\t        this.tolerateUnexpectedToken();\n\t        return comments;\n\t    };\n\t    Scanner.prototype.scanComments = function () {\n\t        var comments;\n\t        if (this.trackComment) {\n\t            comments = [];\n\t        }\n\t        var start = (this.index === 0);\n\t        while (!this.eof()) {\n\t            var ch = this.source.charCodeAt(this.index);\n\t            if (character_1.Character.isWhiteSpace(ch)) {\n\t                ++this.index;\n\t            }\n\t            else if (character_1.Character.isLineTerminator(ch)) {\n\t                ++this.index;\n\t                if (ch === 0x0D && this.source.charCodeAt(this.index) === 0x0A) {\n\t                    ++this.index;\n\t                }\n\t                ++this.lineNumber;\n\t                this.lineStart = this.index;\n\t                start = true;\n\t            }\n\t            else if (ch === 0x2F) {\n\t                ch = this.source.charCodeAt(this.index + 1);\n\t                if (ch === 0x2F) {\n\t                    this.index += 2;\n\t                    var comment = this.skipSingleLineComment(2);\n\t                    if (this.trackComment) {\n\t                        comments = comments.concat(comment);\n\t                    }\n\t                    start = true;\n\t                }\n\t                else if (ch === 0x2A) {\n\t                    this.index += 2;\n\t                    var comment = this.skipMultiLineComment();\n\t                    if (this.trackComment) {\n\t                        comments = comments.concat(comment);\n\t                    }\n\t                }\n\t                else {\n\t                    break;\n\t                }\n\t            }\n\t            else if (start && ch === 0x2D) {\n\t                // U+003E is '>'\n\t                if ((this.source.charCodeAt(this.index + 1) === 0x2D) && (this.source.charCodeAt(this.index + 2) === 0x3E)) {\n\t                    // '-->' is a single-line comment\n\t                    this.index += 3;\n\t                    var comment = this.skipSingleLineComment(3);\n\t                    if (this.trackComment) {\n\t                        comments = comments.concat(comment);\n\t                    }\n\t                }\n\t                else {\n\t                    break;\n\t                }\n\t            }\n\t            else if (ch === 0x3C && !this.isModule) {\n\t                if (this.source.slice(this.index + 1, this.index + 4) === '!--') {\n\t                    this.index += 4; // `<!--`\n\t                    var comment = this.skipSingleLineComment(4);\n\t                    if (this.trackComment) {\n\t                        comments = comments.concat(comment);\n\t                    }\n\t                }\n\t                else {\n\t                    break;\n\t                }\n\t            }\n\t            else {\n\t                break;\n\t            }\n\t        }\n\t        return comments;\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-future-reserved-words\n\t    Scanner.prototype.isFutureReservedWord = function (id) {\n\t        switch (id) {\n\t            case 'enum':\n\t            case 'export':\n\t            case 'import':\n\t            case 'super':\n\t                return true;\n\t            default:\n\t                return false;\n\t        }\n\t    };\n\t    Scanner.prototype.isStrictModeReservedWord = function (id) {\n\t        switch (id) {\n\t            case 'implements':\n\t            case 'interface':\n\t            case 'package':\n\t            case 'private':\n\t            case 'protected':\n\t            case 'public':\n\t            case 'static':\n\t            case 'yield':\n\t            case 'let':\n\t                return true;\n\t            default:\n\t                return false;\n\t        }\n\t    };\n\t    Scanner.prototype.isRestrictedWord = function (id) {\n\t        return id === 'eval' || id === 'arguments';\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-keywords\n\t    Scanner.prototype.isKeyword = function (id) {\n\t        switch (id.length) {\n\t            case 2:\n\t                return (id === 'if') || (id === 'in') || (id === 'do');\n\t            case 3:\n\t                return (id === 'var') || (id === 'for') || (id === 'new') ||\n\t                    (id === 'try') || (id === 'let');\n\t            case 4:\n\t                return (id === 'this') || (id === 'else') || (id === 'case') ||\n\t                    (id === 'void') || (id === 'with') || (id === 'enum');\n\t            case 5:\n\t                return (id === 'while') || (id === 'break') || (id === 'catch') ||\n\t                    (id === 'throw') || (id === 'const') || (id === 'yield') ||\n\t                    (id === 'class') || (id === 'super');\n\t            case 6:\n\t                return (id === 'return') || (id === 'typeof') || (id === 'delete') ||\n\t                    (id === 'switch') || (id === 'export') || (id === 'import');\n\t            case 7:\n\t                return (id === 'default') || (id === 'finally') || (id === 'extends');\n\t            case 8:\n\t                return (id === 'function') || (id === 'continue') || (id === 'debugger');\n\t            case 10:\n\t                return (id === 'instanceof');\n\t            default:\n\t                return false;\n\t        }\n\t    };\n\t    Scanner.prototype.codePointAt = function (i) {\n\t        var cp = this.source.charCodeAt(i);\n\t        if (cp >= 0xD800 && cp <= 0xDBFF) {\n\t            var second = this.source.charCodeAt(i + 1);\n\t            if (second >= 0xDC00 && second <= 0xDFFF) {\n\t                var first = cp;\n\t                cp = (first - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n\t            }\n\t        }\n\t        return cp;\n\t    };\n\t    Scanner.prototype.scanHexEscape = function (prefix) {\n\t        var len = (prefix === 'u') ? 4 : 2;\n\t        var code = 0;\n\t        for (var i = 0; i < len; ++i) {\n\t            if (!this.eof() && character_1.Character.isHexDigit(this.source.charCodeAt(this.index))) {\n\t                code = code * 16 + hexValue(this.source[this.index++]);\n\t            }\n\t            else {\n\t                return null;\n\t            }\n\t        }\n\t        return String.fromCharCode(code);\n\t    };\n\t    Scanner.prototype.scanUnicodeCodePointEscape = function () {\n\t        var ch = this.source[this.index];\n\t        var code = 0;\n\t        // At least, one hex digit is required.\n\t        if (ch === '}') {\n\t            this.throwUnexpectedToken();\n\t        }\n\t        while (!this.eof()) {\n\t            ch = this.source[this.index++];\n\t            if (!character_1.Character.isHexDigit(ch.charCodeAt(0))) {\n\t                break;\n\t            }\n\t            code = code * 16 + hexValue(ch);\n\t        }\n\t        if (code > 0x10FFFF || ch !== '}') {\n\t            this.throwUnexpectedToken();\n\t        }\n\t        return character_1.Character.fromCodePoint(code);\n\t    };\n\t    Scanner.prototype.getIdentifier = function () {\n\t        var start = this.index++;\n\t        while (!this.eof()) {\n\t            var ch = this.source.charCodeAt(this.index);\n\t            if (ch === 0x5C) {\n\t                // Blackslash (U+005C) marks Unicode escape sequence.\n\t                this.index = start;\n\t                return this.getComplexIdentifier();\n\t            }\n\t            else if (ch >= 0xD800 && ch < 0xDFFF) {\n\t                // Need to handle surrogate pairs.\n\t                this.index = start;\n\t                return this.getComplexIdentifier();\n\t            }\n\t            if (character_1.Character.isIdentifierPart(ch)) {\n\t                ++this.index;\n\t            }\n\t            else {\n\t                break;\n\t            }\n\t        }\n\t        return this.source.slice(start, this.index);\n\t    };\n\t    Scanner.prototype.getComplexIdentifier = function () {\n\t        var cp = this.codePointAt(this.index);\n\t        var id = character_1.Character.fromCodePoint(cp);\n\t        this.index += id.length;\n\t        // '\\u' (U+005C, U+0075) denotes an escaped character.\n\t        var ch;\n\t        if (cp === 0x5C) {\n\t            if (this.source.charCodeAt(this.index) !== 0x75) {\n\t                this.throwUnexpectedToken();\n\t            }\n\t            ++this.index;\n\t            if (this.source[this.index] === '{') {\n\t                ++this.index;\n\t                ch = this.scanUnicodeCodePointEscape();\n\t            }\n\t            else {\n\t                ch = this.scanHexEscape('u');\n\t                if (ch === null || ch === '\\\\' || !character_1.Character.isIdentifierStart(ch.charCodeAt(0))) {\n\t                    this.throwUnexpectedToken();\n\t                }\n\t            }\n\t            id = ch;\n\t        }\n\t        while (!this.eof()) {\n\t            cp = this.codePointAt(this.index);\n\t            if (!character_1.Character.isIdentifierPart(cp)) {\n\t                break;\n\t            }\n\t            ch = character_1.Character.fromCodePoint(cp);\n\t            id += ch;\n\t            this.index += ch.length;\n\t            // '\\u' (U+005C, U+0075) denotes an escaped character.\n\t            if (cp === 0x5C) {\n\t                id = id.substr(0, id.length - 1);\n\t                if (this.source.charCodeAt(this.index) !== 0x75) {\n\t                    this.throwUnexpectedToken();\n\t                }\n\t                ++this.index;\n\t                if (this.source[this.index] === '{') {\n\t                    ++this.index;\n\t                    ch = this.scanUnicodeCodePointEscape();\n\t                }\n\t                else {\n\t                    ch = this.scanHexEscape('u');\n\t                    if (ch === null || ch === '\\\\' || !character_1.Character.isIdentifierPart(ch.charCodeAt(0))) {\n\t                        this.throwUnexpectedToken();\n\t                    }\n\t                }\n\t                id += ch;\n\t            }\n\t        }\n\t        return id;\n\t    };\n\t    Scanner.prototype.octalToDecimal = function (ch) {\n\t        // \\0 is not octal escape sequence\n\t        var octal = (ch !== '0');\n\t        var code = octalValue(ch);\n\t        if (!this.eof() && character_1.Character.isOctalDigit(this.source.charCodeAt(this.index))) {\n\t            octal = true;\n\t            code = code * 8 + octalValue(this.source[this.index++]);\n\t            // 3 digits are only allowed when string starts\n\t            // with 0, 1, 2, 3\n\t            if ('0123'.indexOf(ch) >= 0 && !this.eof() && character_1.Character.isOctalDigit(this.source.charCodeAt(this.index))) {\n\t                code = code * 8 + octalValue(this.source[this.index++]);\n\t            }\n\t        }\n\t        return {\n\t            code: code,\n\t            octal: octal\n\t        };\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-names-and-keywords\n\t    Scanner.prototype.scanIdentifier = function () {\n\t        var type;\n\t        var start = this.index;\n\t        // Backslash (U+005C) starts an escaped character.\n\t        var id = (this.source.charCodeAt(start) === 0x5C) ? this.getComplexIdentifier() : this.getIdentifier();\n\t        // There is no keyword or literal with only one character.\n\t        // Thus, it must be an identifier.\n\t        if (id.length === 1) {\n\t            type = 3 /* Identifier */;\n\t        }\n\t        else if (this.isKeyword(id)) {\n\t            type = 4 /* Keyword */;\n\t        }\n\t        else if (id === 'null') {\n\t            type = 5 /* NullLiteral */;\n\t        }\n\t        else if (id === 'true' || id === 'false') {\n\t            type = 1 /* BooleanLiteral */;\n\t        }\n\t        else {\n\t            type = 3 /* Identifier */;\n\t        }\n\t        if (type !== 3 /* Identifier */ && (start + id.length !== this.index)) {\n\t            var restore = this.index;\n\t            this.index = start;\n\t            this.tolerateUnexpectedToken(messages_1.Messages.InvalidEscapedReservedWord);\n\t            this.index = restore;\n\t        }\n\t        return {\n\t            type: type,\n\t            value: id,\n\t            lineNumber: this.lineNumber,\n\t            lineStart: this.lineStart,\n\t            start: start,\n\t            end: this.index\n\t        };\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-punctuators\n\t    Scanner.prototype.scanPunctuator = function () {\n\t        var start = this.index;\n\t        // Check for most common single-character punctuators.\n\t        var str = this.source[this.index];\n\t        switch (str) {\n\t            case '(':\n\t            case '{':\n\t                if (str === '{') {\n\t                    this.curlyStack.push('{');\n\t                }\n\t                ++this.index;\n\t                break;\n\t            case '.':\n\t                ++this.index;\n\t                if (this.source[this.index] === '.' && this.source[this.index + 1] === '.') {\n\t                    // Spread operator: ...\n\t                    this.index += 2;\n\t                    str = '...';\n\t                }\n\t                break;\n\t            case '}':\n\t                ++this.index;\n\t                this.curlyStack.pop();\n\t                break;\n\t            case ')':\n\t            case ';':\n\t            case ',':\n\t            case '[':\n\t            case ']':\n\t            case ':':\n\t            case '?':\n\t            case '~':\n\t                ++this.index;\n\t                break;\n\t            default:\n\t                // 4-character punctuator.\n\t                str = this.source.substr(this.index, 4);\n\t                if (str === '>>>=') {\n\t                    this.index += 4;\n\t                }\n\t                else {\n\t                    // 3-character punctuators.\n\t                    str = str.substr(0, 3);\n\t                    if (str === '===' || str === '!==' || str === '>>>' ||\n\t                        str === '<<=' || str === '>>=' || str === '**=') {\n\t                        this.index += 3;\n\t                    }\n\t                    else {\n\t                        // 2-character punctuators.\n\t                        str = str.substr(0, 2);\n\t                        if (str === '&&' || str === '||' || str === '==' || str === '!=' ||\n\t                            str === '+=' || str === '-=' || str === '*=' || str === '/=' ||\n\t                            str === '++' || str === '--' || str === '<<' || str === '>>' ||\n\t                            str === '&=' || str === '|=' || str === '^=' || str === '%=' ||\n\t                            str === '<=' || str === '>=' || str === '=>' || str === '**') {\n\t                            this.index += 2;\n\t                        }\n\t                        else {\n\t                            // 1-character punctuators.\n\t                            str = this.source[this.index];\n\t                            if ('<>=!+-*%&|^/'.indexOf(str) >= 0) {\n\t                                ++this.index;\n\t                            }\n\t                        }\n\t                    }\n\t                }\n\t        }\n\t        if (this.index === start) {\n\t            this.throwUnexpectedToken();\n\t        }\n\t        return {\n\t            type: 7 /* Punctuator */,\n\t            value: str,\n\t            lineNumber: this.lineNumber,\n\t            lineStart: this.lineStart,\n\t            start: start,\n\t            end: this.index\n\t        };\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-literals-numeric-literals\n\t    Scanner.prototype.scanHexLiteral = function (start) {\n\t        var num = '';\n\t        while (!this.eof()) {\n\t            if (!character_1.Character.isHexDigit(this.source.charCodeAt(this.index))) {\n\t                break;\n\t            }\n\t            num += this.source[this.index++];\n\t        }\n\t        if (num.length === 0) {\n\t            this.throwUnexpectedToken();\n\t        }\n\t        if (character_1.Character.isIdentifierStart(this.source.charCodeAt(this.index))) {\n\t            this.throwUnexpectedToken();\n\t        }\n\t        return {\n\t            type: 6 /* NumericLiteral */,\n\t            value: parseInt('0x' + num, 16),\n\t            lineNumber: this.lineNumber,\n\t            lineStart: this.lineStart,\n\t            start: start,\n\t            end: this.index\n\t        };\n\t    };\n\t    Scanner.prototype.scanBinaryLiteral = function (start) {\n\t        var num = '';\n\t        var ch;\n\t        while (!this.eof()) {\n\t            ch = this.source[this.index];\n\t            if (ch !== '0' && ch !== '1') {\n\t                break;\n\t            }\n\t            num += this.source[this.index++];\n\t        }\n\t        if (num.length === 0) {\n\t            // only 0b or 0B\n\t            this.throwUnexpectedToken();\n\t        }\n\t        if (!this.eof()) {\n\t            ch = this.source.charCodeAt(this.index);\n\t            /* istanbul ignore else */\n\t            if (character_1.Character.isIdentifierStart(ch) || character_1.Character.isDecimalDigit(ch)) {\n\t                this.throwUnexpectedToken();\n\t            }\n\t        }\n\t        return {\n\t            type: 6 /* NumericLiteral */,\n\t            value: parseInt(num, 2),\n\t            lineNumber: this.lineNumber,\n\t            lineStart: this.lineStart,\n\t            start: start,\n\t            end: this.index\n\t        };\n\t    };\n\t    Scanner.prototype.scanOctalLiteral = function (prefix, start) {\n\t        var num = '';\n\t        var octal = false;\n\t        if (character_1.Character.isOctalDigit(prefix.charCodeAt(0))) {\n\t            octal = true;\n\t            num = '0' + this.source[this.index++];\n\t        }\n\t        else {\n\t            ++this.index;\n\t        }\n\t        while (!this.eof()) {\n\t            if (!character_1.Character.isOctalDigit(this.source.charCodeAt(this.index))) {\n\t                break;\n\t            }\n\t            num += this.source[this.index++];\n\t        }\n\t        if (!octal && num.length === 0) {\n\t            // only 0o or 0O\n\t            this.throwUnexpectedToken();\n\t        }\n\t        if (character_1.Character.isIdentifierStart(this.source.charCodeAt(this.index)) || character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))) {\n\t            this.throwUnexpectedToken();\n\t        }\n\t        return {\n\t            type: 6 /* NumericLiteral */,\n\t            value: parseInt(num, 8),\n\t            octal: octal,\n\t            lineNumber: this.lineNumber,\n\t            lineStart: this.lineStart,\n\t            start: start,\n\t            end: this.index\n\t        };\n\t    };\n\t    Scanner.prototype.isImplicitOctalLiteral = function () {\n\t        // Implicit octal, unless there is a non-octal digit.\n\t        // (Annex B.1.1 on Numeric Literals)\n\t        for (var i = this.index + 1; i < this.length; ++i) {\n\t            var ch = this.source[i];\n\t            if (ch === '8' || ch === '9') {\n\t                return false;\n\t            }\n\t            if (!character_1.Character.isOctalDigit(ch.charCodeAt(0))) {\n\t                return true;\n\t            }\n\t        }\n\t        return true;\n\t    };\n\t    Scanner.prototype.scanNumericLiteral = function () {\n\t        var start = this.index;\n\t        var ch = this.source[start];\n\t        assert_1.assert(character_1.Character.isDecimalDigit(ch.charCodeAt(0)) || (ch === '.'), 'Numeric literal must start with a decimal digit or a decimal point');\n\t        var num = '';\n\t        if (ch !== '.') {\n\t            num = this.source[this.index++];\n\t            ch = this.source[this.index];\n\t            // Hex number starts with '0x'.\n\t            // Octal number starts with '0'.\n\t            // Octal number in ES6 starts with '0o'.\n\t            // Binary number in ES6 starts with '0b'.\n\t            if (num === '0') {\n\t                if (ch === 'x' || ch === 'X') {\n\t                    ++this.index;\n\t                    return this.scanHexLiteral(start);\n\t                }\n\t                if (ch === 'b' || ch === 'B') {\n\t                    ++this.index;\n\t                    return this.scanBinaryLiteral(start);\n\t                }\n\t                if (ch === 'o' || ch === 'O') {\n\t                    return this.scanOctalLiteral(ch, start);\n\t                }\n\t                if (ch && character_1.Character.isOctalDigit(ch.charCodeAt(0))) {\n\t                    if (this.isImplicitOctalLiteral()) {\n\t                        return this.scanOctalLiteral(ch, start);\n\t                    }\n\t                }\n\t            }\n\t            while (character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))) {\n\t                num += this.source[this.index++];\n\t            }\n\t            ch = this.source[this.index];\n\t        }\n\t        if (ch === '.') {\n\t            num += this.source[this.index++];\n\t            while (character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))) {\n\t                num += this.source[this.index++];\n\t            }\n\t            ch = this.source[this.index];\n\t        }\n\t        if (ch === 'e' || ch === 'E') {\n\t            num += this.source[this.index++];\n\t            ch = this.source[this.index];\n\t            if (ch === '+' || ch === '-') {\n\t                num += this.source[this.index++];\n\t            }\n\t            if (character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))) {\n\t                while (character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))) {\n\t                    num += this.source[this.index++];\n\t                }\n\t            }\n\t            else {\n\t                this.throwUnexpectedToken();\n\t            }\n\t        }\n\t        if (character_1.Character.isIdentifierStart(this.source.charCodeAt(this.index))) {\n\t            this.throwUnexpectedToken();\n\t        }\n\t        return {\n\t            type: 6 /* NumericLiteral */,\n\t            value: parseFloat(num),\n\t            lineNumber: this.lineNumber,\n\t            lineStart: this.lineStart,\n\t            start: start,\n\t            end: this.index\n\t        };\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-literals-string-literals\n\t    Scanner.prototype.scanStringLiteral = function () {\n\t        var start = this.index;\n\t        var quote = this.source[start];\n\t        assert_1.assert((quote === '\\'' || quote === '\"'), 'String literal must starts with a quote');\n\t        ++this.index;\n\t        var octal = false;\n\t        var str = '';\n\t        while (!this.eof()) {\n\t            var ch = this.source[this.index++];\n\t            if (ch === quote) {\n\t                quote = '';\n\t                break;\n\t            }\n\t            else if (ch === '\\\\') {\n\t                ch = this.source[this.index++];\n\t                if (!ch || !character_1.Character.isLineTerminator(ch.charCodeAt(0))) {\n\t                    switch (ch) {\n\t                        case 'u':\n\t                            if (this.source[this.index] === '{') {\n\t                                ++this.index;\n\t                                str += this.scanUnicodeCodePointEscape();\n\t                            }\n\t                            else {\n\t                                var unescaped_1 = this.scanHexEscape(ch);\n\t                                if (unescaped_1 === null) {\n\t                                    this.throwUnexpectedToken();\n\t                                }\n\t                                str += unescaped_1;\n\t                            }\n\t                            break;\n\t                        case 'x':\n\t                            var unescaped = this.scanHexEscape(ch);\n\t                            if (unescaped === null) {\n\t                                this.throwUnexpectedToken(messages_1.Messages.InvalidHexEscapeSequence);\n\t                            }\n\t                            str += unescaped;\n\t                            break;\n\t                        case 'n':\n\t                            str += '\\n';\n\t                            break;\n\t                        case 'r':\n\t                            str += '\\r';\n\t                            break;\n\t                        case 't':\n\t                            str += '\\t';\n\t                            break;\n\t                        case 'b':\n\t                            str += '\\b';\n\t                            break;\n\t                        case 'f':\n\t                            str += '\\f';\n\t                            break;\n\t                        case 'v':\n\t                            str += '\\x0B';\n\t                            break;\n\t                        case '8':\n\t                        case '9':\n\t                            str += ch;\n\t                            this.tolerateUnexpectedToken();\n\t                            break;\n\t                        default:\n\t                            if (ch && character_1.Character.isOctalDigit(ch.charCodeAt(0))) {\n\t                                var octToDec = this.octalToDecimal(ch);\n\t                                octal = octToDec.octal || octal;\n\t                                str += String.fromCharCode(octToDec.code);\n\t                            }\n\t                            else {\n\t                                str += ch;\n\t                            }\n\t                            break;\n\t                    }\n\t                }\n\t                else {\n\t                    ++this.lineNumber;\n\t                    if (ch === '\\r' && this.source[this.index] === '\\n') {\n\t                        ++this.index;\n\t                    }\n\t                    this.lineStart = this.index;\n\t                }\n\t            }\n\t            else if (character_1.Character.isLineTerminator(ch.charCodeAt(0))) {\n\t                break;\n\t            }\n\t            else {\n\t                str += ch;\n\t            }\n\t        }\n\t        if (quote !== '') {\n\t            this.index = start;\n\t            this.throwUnexpectedToken();\n\t        }\n\t        return {\n\t            type: 8 /* StringLiteral */,\n\t            value: str,\n\t            octal: octal,\n\t            lineNumber: this.lineNumber,\n\t            lineStart: this.lineStart,\n\t            start: start,\n\t            end: this.index\n\t        };\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-template-literal-lexical-components\n\t    Scanner.prototype.scanTemplate = function () {\n\t        var cooked = '';\n\t        var terminated = false;\n\t        var start = this.index;\n\t        var head = (this.source[start] === '`');\n\t        var tail = false;\n\t        var rawOffset = 2;\n\t        ++this.index;\n\t        while (!this.eof()) {\n\t            var ch = this.source[this.index++];\n\t            if (ch === '`') {\n\t                rawOffset = 1;\n\t                tail = true;\n\t                terminated = true;\n\t                break;\n\t            }\n\t            else if (ch === '$') {\n\t                if (this.source[this.index] === '{') {\n\t                    this.curlyStack.push('${');\n\t                    ++this.index;\n\t                    terminated = true;\n\t                    break;\n\t                }\n\t                cooked += ch;\n\t            }\n\t            else if (ch === '\\\\') {\n\t                ch = this.source[this.index++];\n\t                if (!character_1.Character.isLineTerminator(ch.charCodeAt(0))) {\n\t                    switch (ch) {\n\t                        case 'n':\n\t                            cooked += '\\n';\n\t                            break;\n\t                        case 'r':\n\t                            cooked += '\\r';\n\t                            break;\n\t                        case 't':\n\t                            cooked += '\\t';\n\t                            break;\n\t                        case 'u':\n\t                            if (this.source[this.index] === '{') {\n\t                                ++this.index;\n\t                                cooked += this.scanUnicodeCodePointEscape();\n\t                            }\n\t                            else {\n\t                                var restore = this.index;\n\t                                var unescaped_2 = this.scanHexEscape(ch);\n\t                                if (unescaped_2 !== null) {\n\t                                    cooked += unescaped_2;\n\t                                }\n\t                                else {\n\t                                    this.index = restore;\n\t                                    cooked += ch;\n\t                                }\n\t                            }\n\t                            break;\n\t                        case 'x':\n\t                            var unescaped = this.scanHexEscape(ch);\n\t                            if (unescaped === null) {\n\t                                this.throwUnexpectedToken(messages_1.Messages.InvalidHexEscapeSequence);\n\t                            }\n\t                            cooked += unescaped;\n\t                            break;\n\t                        case 'b':\n\t                            cooked += '\\b';\n\t                            break;\n\t                        case 'f':\n\t                            cooked += '\\f';\n\t                            break;\n\t                        case 'v':\n\t                            cooked += '\\v';\n\t                            break;\n\t                        default:\n\t                            if (ch === '0') {\n\t                                if (character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))) {\n\t                                    // Illegal: \\01 \\02 and so on\n\t                                    this.throwUnexpectedToken(messages_1.Messages.TemplateOctalLiteral);\n\t                                }\n\t                                cooked += '\\0';\n\t                            }\n\t                            else if (character_1.Character.isOctalDigit(ch.charCodeAt(0))) {\n\t                                // Illegal: \\1 \\2\n\t                                this.throwUnexpectedToken(messages_1.Messages.TemplateOctalLiteral);\n\t                            }\n\t                            else {\n\t                                cooked += ch;\n\t                            }\n\t                            break;\n\t                    }\n\t                }\n\t                else {\n\t                    ++this.lineNumber;\n\t                    if (ch === '\\r' && this.source[this.index] === '\\n') {\n\t                        ++this.index;\n\t                    }\n\t                    this.lineStart = this.index;\n\t                }\n\t            }\n\t            else if (character_1.Character.isLineTerminator(ch.charCodeAt(0))) {\n\t                ++this.lineNumber;\n\t                if (ch === '\\r' && this.source[this.index] === '\\n') {\n\t                    ++this.index;\n\t                }\n\t                this.lineStart = this.index;\n\t                cooked += '\\n';\n\t            }\n\t            else {\n\t                cooked += ch;\n\t            }\n\t        }\n\t        if (!terminated) {\n\t            this.throwUnexpectedToken();\n\t        }\n\t        if (!head) {\n\t            this.curlyStack.pop();\n\t        }\n\t        return {\n\t            type: 10 /* Template */,\n\t            value: this.source.slice(start + 1, this.index - rawOffset),\n\t            cooked: cooked,\n\t            head: head,\n\t            tail: tail,\n\t            lineNumber: this.lineNumber,\n\t            lineStart: this.lineStart,\n\t            start: start,\n\t            end: this.index\n\t        };\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-literals-regular-expression-literals\n\t    Scanner.prototype.testRegExp = function (pattern, flags) {\n\t        // The BMP character to use as a replacement for astral symbols when\n\t        // translating an ES6 \"u\"-flagged pattern to an ES5-compatible\n\t        // approximation.\n\t        // Note: replacing with '\\uFFFF' enables false positives in unlikely\n\t        // scenarios. For example, `[\\u{1044f}-\\u{10440}]` is an invalid\n\t        // pattern that would not be detected by this substitution.\n\t        var astralSubstitute = '\\uFFFF';\n\t        var tmp = pattern;\n\t        var self = this;\n\t        if (flags.indexOf('u') >= 0) {\n\t            tmp = tmp\n\t                .replace(/\\\\u\\{([0-9a-fA-F]+)\\}|\\\\u([a-fA-F0-9]{4})/g, function ($0, $1, $2) {\n\t                var codePoint = parseInt($1 || $2, 16);\n\t                if (codePoint > 0x10FFFF) {\n\t                    self.throwUnexpectedToken(messages_1.Messages.InvalidRegExp);\n\t                }\n\t                if (codePoint <= 0xFFFF) {\n\t                    return String.fromCharCode(codePoint);\n\t                }\n\t                return astralSubstitute;\n\t            })\n\t                .replace(/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g, astralSubstitute);\n\t        }\n\t        // First, detect invalid regular expressions.\n\t        try {\n\t            RegExp(tmp);\n\t        }\n\t        catch (e) {\n\t            this.throwUnexpectedToken(messages_1.Messages.InvalidRegExp);\n\t        }\n\t        // Return a regular expression object for this pattern-flag pair, or\n\t        // `null` in case the current environment doesn't support the flags it\n\t        // uses.\n\t        try {\n\t            return new RegExp(pattern, flags);\n\t        }\n\t        catch (exception) {\n\t            /* istanbul ignore next */\n\t            return null;\n\t        }\n\t    };\n\t    Scanner.prototype.scanRegExpBody = function () {\n\t        var ch = this.source[this.index];\n\t        assert_1.assert(ch === '/', 'Regular expression literal must start with a slash');\n\t        var str = this.source[this.index++];\n\t        var classMarker = false;\n\t        var terminated = false;\n\t        while (!this.eof()) {\n\t            ch = this.source[this.index++];\n\t            str += ch;\n\t            if (ch === '\\\\') {\n\t                ch = this.source[this.index++];\n\t                // https://tc39.github.io/ecma262/#sec-literals-regular-expression-literals\n\t                if (character_1.Character.isLineTerminator(ch.charCodeAt(0))) {\n\t                    this.throwUnexpectedToken(messages_1.Messages.UnterminatedRegExp);\n\t                }\n\t                str += ch;\n\t            }\n\t            else if (character_1.Character.isLineTerminator(ch.charCodeAt(0))) {\n\t                this.throwUnexpectedToken(messages_1.Messages.UnterminatedRegExp);\n\t            }\n\t            else if (classMarker) {\n\t                if (ch === ']') {\n\t                    classMarker = false;\n\t                }\n\t            }\n\t            else {\n\t                if (ch === '/') {\n\t                    terminated = true;\n\t                    break;\n\t                }\n\t                else if (ch === '[') {\n\t                    classMarker = true;\n\t                }\n\t            }\n\t        }\n\t        if (!terminated) {\n\t            this.throwUnexpectedToken(messages_1.Messages.UnterminatedRegExp);\n\t        }\n\t        // Exclude leading and trailing slash.\n\t        return str.substr(1, str.length - 2);\n\t    };\n\t    Scanner.prototype.scanRegExpFlags = function () {\n\t        var str = '';\n\t        var flags = '';\n\t        while (!this.eof()) {\n\t            var ch = this.source[this.index];\n\t            if (!character_1.Character.isIdentifierPart(ch.charCodeAt(0))) {\n\t                break;\n\t            }\n\t            ++this.index;\n\t            if (ch === '\\\\' && !this.eof()) {\n\t                ch = this.source[this.index];\n\t                if (ch === 'u') {\n\t                    ++this.index;\n\t                    var restore = this.index;\n\t                    var char = this.scanHexEscape('u');\n\t                    if (char !== null) {\n\t                        flags += char;\n\t                        for (str += '\\\\u'; restore < this.index; ++restore) {\n\t                            str += this.source[restore];\n\t                        }\n\t                    }\n\t                    else {\n\t                        this.index = restore;\n\t                        flags += 'u';\n\t                        str += '\\\\u';\n\t                    }\n\t                    this.tolerateUnexpectedToken();\n\t                }\n\t                else {\n\t                    str += '\\\\';\n\t                    this.tolerateUnexpectedToken();\n\t                }\n\t            }\n\t            else {\n\t                flags += ch;\n\t                str += ch;\n\t            }\n\t        }\n\t        return flags;\n\t    };\n\t    Scanner.prototype.scanRegExp = function () {\n\t        var start = this.index;\n\t        var pattern = this.scanRegExpBody();\n\t        var flags = this.scanRegExpFlags();\n\t        var value = this.testRegExp(pattern, flags);\n\t        return {\n\t            type: 9 /* RegularExpression */,\n\t            value: '',\n\t            pattern: pattern,\n\t            flags: flags,\n\t            regex: value,\n\t            lineNumber: this.lineNumber,\n\t            lineStart: this.lineStart,\n\t            start: start,\n\t            end: this.index\n\t        };\n\t    };\n\t    Scanner.prototype.lex = function () {\n\t        if (this.eof()) {\n\t            return {\n\t                type: 2 /* EOF */,\n\t                value: '',\n\t                lineNumber: this.lineNumber,\n\t                lineStart: this.lineStart,\n\t                start: this.index,\n\t                end: this.index\n\t            };\n\t        }\n\t        var cp = this.source.charCodeAt(this.index);\n\t        if (character_1.Character.isIdentifierStart(cp)) {\n\t            return this.scanIdentifier();\n\t        }\n\t        // Very common: ( and ) and ;\n\t        if (cp === 0x28 || cp === 0x29 || cp === 0x3B) {\n\t            return this.scanPunctuator();\n\t        }\n\t        // String literal starts with single quote (U+0027) or double quote (U+0022).\n\t        if (cp === 0x27 || cp === 0x22) {\n\t            return this.scanStringLiteral();\n\t        }\n\t        // Dot (.) U+002E can also start a floating-point number, hence the need\n\t        // to check the next character.\n\t        if (cp === 0x2E) {\n\t            if (character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index + 1))) {\n\t                return this.scanNumericLiteral();\n\t            }\n\t            return this.scanPunctuator();\n\t        }\n\t        if (character_1.Character.isDecimalDigit(cp)) {\n\t            return this.scanNumericLiteral();\n\t        }\n\t        // Template literals start with ` (U+0060) for template head\n\t        // or } (U+007D) for template middle or template tail.\n\t        if (cp === 0x60 || (cp === 0x7D && this.curlyStack[this.curlyStack.length - 1] === '${')) {\n\t            return this.scanTemplate();\n\t        }\n\t        // Possible identifier start in a surrogate pair.\n\t        if (cp >= 0xD800 && cp < 0xDFFF) {\n\t            if (character_1.Character.isIdentifierStart(this.codePointAt(this.index))) {\n\t                return this.scanIdentifier();\n\t            }\n\t        }\n\t        return this.scanPunctuator();\n\t    };\n\t    return Scanner;\n\t}());\n\texports.Scanner = Scanner;\n\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.TokenName = {};\n\texports.TokenName[1 /* BooleanLiteral */] = 'Boolean';\n\texports.TokenName[2 /* EOF */] = '<end>';\n\texports.TokenName[3 /* Identifier */] = 'Identifier';\n\texports.TokenName[4 /* Keyword */] = 'Keyword';\n\texports.TokenName[5 /* NullLiteral */] = 'Null';\n\texports.TokenName[6 /* NumericLiteral */] = 'Numeric';\n\texports.TokenName[7 /* Punctuator */] = 'Punctuator';\n\texports.TokenName[8 /* StringLiteral */] = 'String';\n\texports.TokenName[9 /* RegularExpression */] = 'RegularExpression';\n\texports.TokenName[10 /* Template */] = 'Template';\n\n\n/***/ },\n/* 14 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t// Generated by generate-xhtml-entities.js. DO NOT MODIFY!\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.XHTMLEntities = {\n\t    quot: '\\u0022',\n\t    amp: '\\u0026',\n\t    apos: '\\u0027',\n\t    gt: '\\u003E',\n\t    nbsp: '\\u00A0',\n\t    iexcl: '\\u00A1',\n\t    cent: '\\u00A2',\n\t    pound: '\\u00A3',\n\t    curren: '\\u00A4',\n\t    yen: '\\u00A5',\n\t    brvbar: '\\u00A6',\n\t    sect: '\\u00A7',\n\t    uml: '\\u00A8',\n\t    copy: '\\u00A9',\n\t    ordf: '\\u00AA',\n\t    laquo: '\\u00AB',\n\t    not: '\\u00AC',\n\t    shy: '\\u00AD',\n\t    reg: '\\u00AE',\n\t    macr: '\\u00AF',\n\t    deg: '\\u00B0',\n\t    plusmn: '\\u00B1',\n\t    sup2: '\\u00B2',\n\t    sup3: '\\u00B3',\n\t    acute: '\\u00B4',\n\t    micro: '\\u00B5',\n\t    para: '\\u00B6',\n\t    middot: '\\u00B7',\n\t    cedil: '\\u00B8',\n\t    sup1: '\\u00B9',\n\t    ordm: '\\u00BA',\n\t    raquo: '\\u00BB',\n\t    frac14: '\\u00BC',\n\t    frac12: '\\u00BD',\n\t    frac34: '\\u00BE',\n\t    iquest: '\\u00BF',\n\t    Agrave: '\\u00C0',\n\t    Aacute: '\\u00C1',\n\t    Acirc: '\\u00C2',\n\t    Atilde: '\\u00C3',\n\t    Auml: '\\u00C4',\n\t    Aring: '\\u00C5',\n\t    AElig: '\\u00C6',\n\t    Ccedil: '\\u00C7',\n\t    Egrave: '\\u00C8',\n\t    Eacute: '\\u00C9',\n\t    Ecirc: '\\u00CA',\n\t    Euml: '\\u00CB',\n\t    Igrave: '\\u00CC',\n\t    Iacute: '\\u00CD',\n\t    Icirc: '\\u00CE',\n\t    Iuml: '\\u00CF',\n\t    ETH: '\\u00D0',\n\t    Ntilde: '\\u00D1',\n\t    Ograve: '\\u00D2',\n\t    Oacute: '\\u00D3',\n\t    Ocirc: '\\u00D4',\n\t    Otilde: '\\u00D5',\n\t    Ouml: '\\u00D6',\n\t    times: '\\u00D7',\n\t    Oslash: '\\u00D8',\n\t    Ugrave: '\\u00D9',\n\t    Uacute: '\\u00DA',\n\t    Ucirc: '\\u00DB',\n\t    Uuml: '\\u00DC',\n\t    Yacute: '\\u00DD',\n\t    THORN: '\\u00DE',\n\t    szlig: '\\u00DF',\n\t    agrave: '\\u00E0',\n\t    aacute: '\\u00E1',\n\t    acirc: '\\u00E2',\n\t    atilde: '\\u00E3',\n\t    auml: '\\u00E4',\n\t    aring: '\\u00E5',\n\t    aelig: '\\u00E6',\n\t    ccedil: '\\u00E7',\n\t    egrave: '\\u00E8',\n\t    eacute: '\\u00E9',\n\t    ecirc: '\\u00EA',\n\t    euml: '\\u00EB',\n\t    igrave: '\\u00EC',\n\t    iacute: '\\u00ED',\n\t    icirc: '\\u00EE',\n\t    iuml: '\\u00EF',\n\t    eth: '\\u00F0',\n\t    ntilde: '\\u00F1',\n\t    ograve: '\\u00F2',\n\t    oacute: '\\u00F3',\n\t    ocirc: '\\u00F4',\n\t    otilde: '\\u00F5',\n\t    ouml: '\\u00F6',\n\t    divide: '\\u00F7',\n\t    oslash: '\\u00F8',\n\t    ugrave: '\\u00F9',\n\t    uacute: '\\u00FA',\n\t    ucirc: '\\u00FB',\n\t    uuml: '\\u00FC',\n\t    yacute: '\\u00FD',\n\t    thorn: '\\u00FE',\n\t    yuml: '\\u00FF',\n\t    OElig: '\\u0152',\n\t    oelig: '\\u0153',\n\t    Scaron: '\\u0160',\n\t    scaron: '\\u0161',\n\t    Yuml: '\\u0178',\n\t    fnof: '\\u0192',\n\t    circ: '\\u02C6',\n\t    tilde: '\\u02DC',\n\t    Alpha: '\\u0391',\n\t    Beta: '\\u0392',\n\t    Gamma: '\\u0393',\n\t    Delta: '\\u0394',\n\t    Epsilon: '\\u0395',\n\t    Zeta: '\\u0396',\n\t    Eta: '\\u0397',\n\t    Theta: '\\u0398',\n\t    Iota: '\\u0399',\n\t    Kappa: '\\u039A',\n\t    Lambda: '\\u039B',\n\t    Mu: '\\u039C',\n\t    Nu: '\\u039D',\n\t    Xi: '\\u039E',\n\t    Omicron: '\\u039F',\n\t    Pi: '\\u03A0',\n\t    Rho: '\\u03A1',\n\t    Sigma: '\\u03A3',\n\t    Tau: '\\u03A4',\n\t    Upsilon: '\\u03A5',\n\t    Phi: '\\u03A6',\n\t    Chi: '\\u03A7',\n\t    Psi: '\\u03A8',\n\t    Omega: '\\u03A9',\n\t    alpha: '\\u03B1',\n\t    beta: '\\u03B2',\n\t    gamma: '\\u03B3',\n\t    delta: '\\u03B4',\n\t    epsilon: '\\u03B5',\n\t    zeta: '\\u03B6',\n\t    eta: '\\u03B7',\n\t    theta: '\\u03B8',\n\t    iota: '\\u03B9',\n\t    kappa: '\\u03BA',\n\t    lambda: '\\u03BB',\n\t    mu: '\\u03BC',\n\t    nu: '\\u03BD',\n\t    xi: '\\u03BE',\n\t    omicron: '\\u03BF',\n\t    pi: '\\u03C0',\n\t    rho: '\\u03C1',\n\t    sigmaf: '\\u03C2',\n\t    sigma: '\\u03C3',\n\t    tau: '\\u03C4',\n\t    upsilon: '\\u03C5',\n\t    phi: '\\u03C6',\n\t    chi: '\\u03C7',\n\t    psi: '\\u03C8',\n\t    omega: '\\u03C9',\n\t    thetasym: '\\u03D1',\n\t    upsih: '\\u03D2',\n\t    piv: '\\u03D6',\n\t    ensp: '\\u2002',\n\t    emsp: '\\u2003',\n\t    thinsp: '\\u2009',\n\t    zwnj: '\\u200C',\n\t    zwj: '\\u200D',\n\t    lrm: '\\u200E',\n\t    rlm: '\\u200F',\n\t    ndash: '\\u2013',\n\t    mdash: '\\u2014',\n\t    lsquo: '\\u2018',\n\t    rsquo: '\\u2019',\n\t    sbquo: '\\u201A',\n\t    ldquo: '\\u201C',\n\t    rdquo: '\\u201D',\n\t    bdquo: '\\u201E',\n\t    dagger: '\\u2020',\n\t    Dagger: '\\u2021',\n\t    bull: '\\u2022',\n\t    hellip: '\\u2026',\n\t    permil: '\\u2030',\n\t    prime: '\\u2032',\n\t    Prime: '\\u2033',\n\t    lsaquo: '\\u2039',\n\t    rsaquo: '\\u203A',\n\t    oline: '\\u203E',\n\t    frasl: '\\u2044',\n\t    euro: '\\u20AC',\n\t    image: '\\u2111',\n\t    weierp: '\\u2118',\n\t    real: '\\u211C',\n\t    trade: '\\u2122',\n\t    alefsym: '\\u2135',\n\t    larr: '\\u2190',\n\t    uarr: '\\u2191',\n\t    rarr: '\\u2192',\n\t    darr: '\\u2193',\n\t    harr: '\\u2194',\n\t    crarr: '\\u21B5',\n\t    lArr: '\\u21D0',\n\t    uArr: '\\u21D1',\n\t    rArr: '\\u21D2',\n\t    dArr: '\\u21D3',\n\t    hArr: '\\u21D4',\n\t    forall: '\\u2200',\n\t    part: '\\u2202',\n\t    exist: '\\u2203',\n\t    empty: '\\u2205',\n\t    nabla: '\\u2207',\n\t    isin: '\\u2208',\n\t    notin: '\\u2209',\n\t    ni: '\\u220B',\n\t    prod: '\\u220F',\n\t    sum: '\\u2211',\n\t    minus: '\\u2212',\n\t    lowast: '\\u2217',\n\t    radic: '\\u221A',\n\t    prop: '\\u221D',\n\t    infin: '\\u221E',\n\t    ang: '\\u2220',\n\t    and: '\\u2227',\n\t    or: '\\u2228',\n\t    cap: '\\u2229',\n\t    cup: '\\u222A',\n\t    int: '\\u222B',\n\t    there4: '\\u2234',\n\t    sim: '\\u223C',\n\t    cong: '\\u2245',\n\t    asymp: '\\u2248',\n\t    ne: '\\u2260',\n\t    equiv: '\\u2261',\n\t    le: '\\u2264',\n\t    ge: '\\u2265',\n\t    sub: '\\u2282',\n\t    sup: '\\u2283',\n\t    nsub: '\\u2284',\n\t    sube: '\\u2286',\n\t    supe: '\\u2287',\n\t    oplus: '\\u2295',\n\t    otimes: '\\u2297',\n\t    perp: '\\u22A5',\n\t    sdot: '\\u22C5',\n\t    lceil: '\\u2308',\n\t    rceil: '\\u2309',\n\t    lfloor: '\\u230A',\n\t    rfloor: '\\u230B',\n\t    loz: '\\u25CA',\n\t    spades: '\\u2660',\n\t    clubs: '\\u2663',\n\t    hearts: '\\u2665',\n\t    diams: '\\u2666',\n\t    lang: '\\u27E8',\n\t    rang: '\\u27E9'\n\t};\n\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tvar error_handler_1 = __webpack_require__(10);\n\tvar scanner_1 = __webpack_require__(12);\n\tvar token_1 = __webpack_require__(13);\n\tvar Reader = (function () {\n\t    function Reader() {\n\t        this.values = [];\n\t        this.curly = this.paren = -1;\n\t    }\n\t    // A function following one of those tokens is an expression.\n\t    Reader.prototype.beforeFunctionExpression = function (t) {\n\t        return ['(', '{', '[', 'in', 'typeof', 'instanceof', 'new',\n\t            'return', 'case', 'delete', 'throw', 'void',\n\t            // assignment operators\n\t            '=', '+=', '-=', '*=', '**=', '/=', '%=', '<<=', '>>=', '>>>=',\n\t            '&=', '|=', '^=', ',',\n\t            // binary/unary operators\n\t            '+', '-', '*', '**', '/', '%', '++', '--', '<<', '>>', '>>>', '&',\n\t            '|', '^', '!', '~', '&&', '||', '?', ':', '===', '==', '>=',\n\t            '<=', '<', '>', '!=', '!=='].indexOf(t) >= 0;\n\t    };\n\t    // Determine if forward slash (/) is an operator or part of a regular expression\n\t    // https://github.com/mozilla/sweet.js/wiki/design\n\t    Reader.prototype.isRegexStart = function () {\n\t        var previous = this.values[this.values.length - 1];\n\t        var regex = (previous !== null);\n\t        switch (previous) {\n\t            case 'this':\n\t            case ']':\n\t                regex = false;\n\t                break;\n\t            case ')':\n\t                var keyword = this.values[this.paren - 1];\n\t                regex = (keyword === 'if' || keyword === 'while' || keyword === 'for' || keyword === 'with');\n\t                break;\n\t            case '}':\n\t                // Dividing a function by anything makes little sense,\n\t                // but we have to check for that.\n\t                regex = false;\n\t                if (this.values[this.curly - 3] === 'function') {\n\t                    // Anonymous function, e.g. function(){} /42\n\t                    var check = this.values[this.curly - 4];\n\t                    regex = check ? !this.beforeFunctionExpression(check) : false;\n\t                }\n\t                else if (this.values[this.curly - 4] === 'function') {\n\t                    // Named function, e.g. function f(){} /42/\n\t                    var check = this.values[this.curly - 5];\n\t                    regex = check ? !this.beforeFunctionExpression(check) : true;\n\t                }\n\t                break;\n\t            default:\n\t                break;\n\t        }\n\t        return regex;\n\t    };\n\t    Reader.prototype.push = function (token) {\n\t        if (token.type === 7 /* Punctuator */ || token.type === 4 /* Keyword */) {\n\t            if (token.value === '{') {\n\t                this.curly = this.values.length;\n\t            }\n\t            else if (token.value === '(') {\n\t                this.paren = this.values.length;\n\t            }\n\t            this.values.push(token.value);\n\t        }\n\t        else {\n\t            this.values.push(null);\n\t        }\n\t    };\n\t    return Reader;\n\t}());\n\tvar Tokenizer = (function () {\n\t    function Tokenizer(code, config) {\n\t        this.errorHandler = new error_handler_1.ErrorHandler();\n\t        this.errorHandler.tolerant = config ? (typeof config.tolerant === 'boolean' && config.tolerant) : false;\n\t        this.scanner = new scanner_1.Scanner(code, this.errorHandler);\n\t        this.scanner.trackComment = config ? (typeof config.comment === 'boolean' && config.comment) : false;\n\t        this.trackRange = config ? (typeof config.range === 'boolean' && config.range) : false;\n\t        this.trackLoc = config ? (typeof config.loc === 'boolean' && config.loc) : false;\n\t        this.buffer = [];\n\t        this.reader = new Reader();\n\t    }\n\t    Tokenizer.prototype.errors = function () {\n\t        return this.errorHandler.errors;\n\t    };\n\t    Tokenizer.prototype.getNextToken = function () {\n\t        if (this.buffer.length === 0) {\n\t            var comments = this.scanner.scanComments();\n\t            if (this.scanner.trackComment) {\n\t                for (var i = 0; i < comments.length; ++i) {\n\t                    var e = comments[i];\n\t                    var value = this.scanner.source.slice(e.slice[0], e.slice[1]);\n\t                    var comment = {\n\t                        type: e.multiLine ? 'BlockComment' : 'LineComment',\n\t                        value: value\n\t                    };\n\t                    if (this.trackRange) {\n\t                        comment.range = e.range;\n\t                    }\n\t                    if (this.trackLoc) {\n\t                        comment.loc = e.loc;\n\t                    }\n\t                    this.buffer.push(comment);\n\t                }\n\t            }\n\t            if (!this.scanner.eof()) {\n\t                var loc = void 0;\n\t                if (this.trackLoc) {\n\t                    loc = {\n\t                        start: {\n\t                            line: this.scanner.lineNumber,\n\t                            column: this.scanner.index - this.scanner.lineStart\n\t                        },\n\t                        end: {}\n\t                    };\n\t                }\n\t                var startRegex = (this.scanner.source[this.scanner.index] === '/') && this.reader.isRegexStart();\n\t                var token = startRegex ? this.scanner.scanRegExp() : this.scanner.lex();\n\t                this.reader.push(token);\n\t                var entry = {\n\t                    type: token_1.TokenName[token.type],\n\t                    value: this.scanner.source.slice(token.start, token.end)\n\t                };\n\t                if (this.trackRange) {\n\t                    entry.range = [token.start, token.end];\n\t                }\n\t                if (this.trackLoc) {\n\t                    loc.end = {\n\t                        line: this.scanner.lineNumber,\n\t                        column: this.scanner.index - this.scanner.lineStart\n\t                    };\n\t                    entry.loc = loc;\n\t                }\n\t                if (token.type === 9 /* RegularExpression */) {\n\t                    var pattern = token.pattern;\n\t                    var flags = token.flags;\n\t                    entry.regex = { pattern: pattern, flags: flags };\n\t                }\n\t                this.buffer.push(entry);\n\t            }\n\t        }\n\t        return this.buffer.shift();\n\t    };\n\t    return Tokenizer;\n\t}());\n\texports.Tokenizer = Tokenizer;\n\n\n/***/ }\n/******/ ])\n});\n;\n\n/***/ })\n\n}]);"}